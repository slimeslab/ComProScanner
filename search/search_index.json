{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ComProScanner Documentation","text":""},{"location":"#welcome","title":"Welcome","text":"<p>ComProScanner is a comprehensive Python package designed to extract composition-property relationships from scientific articles, particularly focused on materials science. It provides tools for metadata collection, article processing from various publishers, extraction of composition-property data, evaluation of extraction performance, and visualization of results.</p>"},{"location":"#key-features","title":"Key Features","text":"<p>Automated Data Extraction</p> <p>Extract composition-property relationships in structured format from scientific literature automatically using AI-powered agents.</p> <p>Multi-Publisher Support</p> <p>Process articles from Elsevier, Wiley, Springer, IOP with TDM API integration, and support local PDF for all publishers.</p> <p>Comprehensive Evaluation</p> <p>Built-in semantic and agentic evaluation methods to assess extraction quality in a faster automated manner.</p> <p>Rich Visualization</p> <p>Create beautiful charts, graphs, and knowledge graphs from extracted data and evaluation results out of the box.</p>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Get started with ComProScanner in just a few steps:</p>"},{"location":"#installation","title":"Installation","text":"<pre><code>pip install comproscanner\n</code></pre>"},{"location":"#basic-usage","title":"Basic Usage","text":"<pre><code>from comproscanner import ComProScanner\n\n# Initialize with property of interest\nscanner = ComProScanner(main_property_keyword=\"piezoelectric\")\n\n# Collect metadata\nscanner.collect_metadata(\n    base_queries=[\"piezoelectric\", \"piezoelectricity\"],\n)\n\n# Define property keywords for filtering\nproperty_keywords = {\n    \"exact_keywords\": [\"d33\"],\n    \"substring_keywords\": [\" d 33 \"]\n}\n\n# Process articles\nscanner.process_articles(\n    property_keywords=property_keywords,\n    source_list=[\"elsevier\", \"springer\"]\n)\n\n# Extract data\nscanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\"\n)\n</code></pre>"},{"location":"#workflow-overview","title":"Workflow Overview","text":"<p>ComProScanner follows a sequential workflow:</p>"},{"location":"#basic-flowchart","title":"Basic Flowchart","text":"<pre><code>graph LR\n    A[Metadata Collection] --&gt; B[Article Processing]\n    B --&gt; C[Data Extraction]\n    C --&gt; D[Post Processing]\n    D --&gt; E[Visualization]\n    D --&gt; F[Evaluation]</code></pre>"},{"location":"#workflow-diagram","title":"Workflow Diagram","text":"<ol> <li>Metadata Collection - Find relevant scientific articles from Scopus database</li> <li>Article Processing - Extract full text articles from various publishers to prepare for data extraction</li> <li>Data Extraction - Use multiple AI agents to extract structured data from collected articles</li> <li>Post Processing - Evaluate extracted data and create charts for visualization along with data cleaning</li> </ol>"},{"location":"#core-modules","title":"Core Modules","text":"<ul> <li> <p> Metadata Extractor   Function for collecting and filtering article metadata from Scopus database.  Learn more</p> </li> <li> <p> Article Processor   Function for processing articles from different publishers: Elsevier, Wiley, IOP, Springer, and local PDFs (any publisher).  Learn more</p> </li> <li> <p> Composition-Property Extractor   Function for AI agents-powered extraction flow for composition-property and synthesis data in a structured format.  Learn more</p> </li> <li> <p> Evaluator   Functions for automated semantic and agentic evaluation methods to assess extraction quality.  Learn more</p> </li> <li> <p> Visualizer   Functions for visualizing extracted data and evaluation results out of the box.  Learn more</p> </li> </ul>"},{"location":"#whats-next","title":"What's Next?","text":"<ul> <li> <p> Getting Started   Learn the basics and get ComProScanner up and running quickly.</p> </li> <li> <p> User Guide   Comprehensive guides for all features and capabilities.</p> </li> <li> <p> Advanced Configuration   Advanced features like RAG configuration and custom flows.</p> </li> </ul>"},{"location":"#paper","title":"Paper","text":"<p>Read the details of ComProScanner in the following preprint: arXiv:2510.20362</p>"},{"location":"#citation","title":"Citation","text":"<p>If you use ComProScanner in your research, please cite:</p> <pre><code>@misc{roy2025comproscannermultiagentbasedframework,\n      title={ComProScanner: A multi-agent based framework for composition-property structured data extraction from scientific literature},\n      author={Aritra Roy and Enrico Grisan and John Buckeridge and Chiara Gattinoni},\n      year={2025},\n      eprint={2510.20362},\n      archivePrefix={arXiv},\n      primaryClass={physics.comp-ph},\n      url={https://arxiv.org/abs/2510.20362},\n}\n</code></pre>"},{"location":"#community-support","title":"Community &amp; Support","text":"<ul> <li>GitHub: slimeslab/ComProScanner</li> <li>PyPI: comproscanner</li> <li>Issues: Report a bug</li> <li>Email: contact@aritraroy.live</li> </ul>"},{"location":"#license","title":"License","text":"<p>ComProScanner is licensed under the MIT License.</p>"},{"location":"rag-config/","title":"RAG Configuration","text":"<p>Customize Retrieval-Augmented Generation (RAG) settings for improved data extraction accuracy specific to your use case.</p> <p>RAG is Used by Materials Data Identifier Agent</p> <p>RAG is automatically used during data extraction to retrieve relevant context from article text before querying the LLM to understand whether the article has material compositions and corresponding property values for screening. The parameters below allow you to customize RAG behavior based on your specific requirements, such as article length, domain-specific models, or extraction complexity.</p>"},{"location":"rag-config/#configuration-parameters","title":"Configuration Parameters","text":""},{"location":"rag-config/#chunking-parameters","title":"Chunking Parameters","text":"<p>These parameters control how articles are split into chunks for vector storage.</p>"},{"location":"rag-config/#chunk_size-int","title":"<code>chunk_size</code> (int)","text":"<p>Size of text chunks in characters for creating vector database embeddings.</p>"},{"location":"rag-config/#chunk_overlap-int","title":"<code>chunk_overlap</code> (int)","text":"<p>Number of overlapping characters between consecutive chunks to maintain context continuity.</p> <p>Default Values</p> <p><code>chunk_size</code> = 1000<code>chunk_overlap</code> = 25</p>"},{"location":"rag-config/#embedding-model-parameters","title":"Embedding Model Parameters","text":""},{"location":"rag-config/#embedding_model-str","title":"<code>embedding_model</code> (str)","text":"<p>Name of the embedding model to use for creating vector databases for RAG.</p> <p>Supported Providers:</p> Provider Format Example HuggingFace <code>huggingface:model-name</code> <code>huggingface:thellert/physbert_cased</code> Sentence Transformers <code>sentence-transformers:model-name</code> <code>sentence-transformers:all-mpnet-base-v2</code> OpenAI \u2022 <code>openai:model-name</code>\u2022 <code>model-name</code> (default behavior) \u2022 <code>openai:text-embedding-3-small</code> \u2022 <code>text-embedding-3-small</code> <p>Default Value</p> <p><code>embedding_model</code> = \"huggingface:thellert/physbert_cased\"</p> <p>Recommended Models for Scientific Text</p> <ul> <li>PhysBERT: <code>huggingface:thellert/physbert_cased</code> - A specialized text embedding model for physics, designed to improve information retrieval, citation classification, and clustering of physics literature</li> <li>MatBERT: <code>huggingface:pranav-s/MaterialsBERT</code> - A fine-tuned version of PubMedBERT on a dataset of 2.4 million materials science abstracts</li> <li>MatSciBERT: <code>huggingface:m3rg-iitd/matscibert</code> - A material domain language model for text mining and information extraction</li> </ul>"},{"location":"rag-config/#retrieval-parameters","title":"Retrieval Parameters","text":"<p>These parameters control how relevant context is retrieved during extraction.</p>"},{"location":"rag-config/#rag_db_path-str","title":"<code>rag_db_path</code> (str)","text":"<p>Custom path to store or load the vector databases of property-mentioned articles for RAG processing.</p>"},{"location":"rag-config/#rag_top_k-int","title":"<code>rag_top_k</code> (int)","text":"<p>Number of most relevant text chunks to retrieve from the vector database for context.</p>"},{"location":"rag-config/#rag_max_tokens-int","title":"<code>rag_max_tokens</code> (int)","text":"<p>Maximum number of tokens for RAG model responses.</p> <p>Default Values</p> <p><code>rag_db_path</code> = \"db\"<code>rag_top_k</code> = 3<code>rag_max_tokens</code> = 512</p>"},{"location":"rag-config/#rag-chat-model-parameters","title":"RAG Chat Model Parameters","text":""},{"location":"rag-config/#rag_chat_model-str","title":"<code>rag_chat_model</code> (str)","text":"<p>Chat model to use for RAG-based context retrieval and synthesis.</p>"},{"location":"rag-config/#rag_base_url-str","title":"<code>rag_base_url</code> (str)","text":"<p>Custom base URL for RAG chat model API (useful for local or custom deployments).</p> <p>Default Values</p> <p><code>rag_chat_model</code> = \"gpt-4o-mini\"<code>rag_base_url</code> = None</p>"},{"location":"rag-config/#configuration-examples","title":"Configuration Examples","text":""},{"location":"rag-config/#using-openai","title":"Using OpenAI","text":"<p>API Key Required: Set <code>OPENAI_API_KEY</code> in your <code>.env</code> file.</p> <pre><code>from comproscanner import ComProScanner\n\nscanner = ComProScanner(output_dir=\"output\")\n\n# Process articles with custom chunking\nscanner.process_articles(\n    property_keywords={\n        \"exact_keywords\": [\"d33\"],\n        \"substring_keywords\": [\" d 33 \"]\n    },\n    rag_db_path=\"embeddings/piezo\",\n    chunk_size=800,\n    chunk_overlap=50,\n    embedding_model=\"openai:text-embedding-3-small\"\n)\n\n# Extract with GPT-4o\nscanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\",\n    rag_db_path=\"embeddings/piezo\",\n    rag_chat_model=\"gpt-4o\",\n    rag_max_tokens=1024,\n    rag_top_k=5,\n)\n</code></pre>"},{"location":"rag-config/#using-google-gemini","title":"Using Google Gemini","text":"<p>API Key Required: Set <code>GEMINI_API_KEY</code> in your <code>.env</code> file.</p> <pre><code>scanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\",\n    rag_db_path=\"embeddings/piezo\",\n    rag_chat_model=\"gemini-2.0-flash\",\n    rag_max_tokens=1024,\n    rag_top_k=4,\n)\n</code></pre>"},{"location":"rag-config/#using-anthropic-claude","title":"Using Anthropic Claude","text":"<p>API Key Required: Set <code>ANTHROPIC_API_KEY</code> in your <code>.env</code> file.</p> <pre><code>scanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\",\n    rag_db_path=\"embeddings/piezo\",\n    rag_chat_model=\"claude-3-5-sonnet-20241022\",\n    rag_max_tokens=2048,\n    rag_top_k=4,\n)\n</code></pre>"},{"location":"rag-config/#using-local-ollama","title":"Using Local Ollama","text":"<pre><code>scanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\",\n    rag_db_path=\"embeddings/piezo\",\n    rag_chat_model=\"ollama/llama3.1\",\n    rag_base_url=\"http://localhost:11434\",\n    rag_max_tokens=512,\n    rag_top_k=3,\n)\n</code></pre>"},{"location":"rag-config/#using-together-ai","title":"Using Together AI","text":"<p>API Key Required: Set <code>TOGETHER_API_KEY</code> in your <code>.env</code> file.</p> <pre><code>scanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\",\n    rag_db_path=\"embeddings/piezo\",\n    rag_chat_model=\"together_ai/meta-llama/Llama-3-70b-chat-hf\",\n    rag_max_tokens=1024,\n    rag_top_k=4,\n)\n</code></pre>"},{"location":"rag-config/#using-openrouter","title":"Using OpenRouter","text":"<p>API Key Required: Set <code>OPENROUTER_API_KEY</code> in your <code>.env</code> file.</p> <pre><code>scanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\",\n    rag_db_path=\"embeddings/piezo\",\n    rag_chat_model=\"openrouter/meta-llama/llama-3-70b-instruct\",\n    rag_max_tokens=1024,\n    rag_top_k=4,\n)\n</code></pre>"},{"location":"rag-config/#using-cohere","title":"Using Cohere","text":"<p>API Key Required: Set <code>COHERE_API_KEY</code> in your <code>.env</code> file.</p> <pre><code>scanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\",\n    rag_db_path=\"embeddings/piezo\",\n    rag_chat_model=\"cohere/command-r-plus\",\n    rag_max_tokens=1024,\n    rag_top_k=4,\n)\n</code></pre>"},{"location":"rag-config/#using-fireworks-ai","title":"Using Fireworks AI","text":"<p>API Key Required: Set <code>FIREWORKS_API_KEY</code> in your <code>.env</code> file.</p> <pre><code>scanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\",\n    rag_db_path=\"embeddings/piezo\",\n    rag_chat_model=\"fireworks_ai/accounts/fireworks/models/llama-v3-8b-instruct\",\n    rag_max_tokens=1024,\n    rag_top_k=4,\n)\n</code></pre>"},{"location":"rag-config/#using-domain-specific-embeddings","title":"Using Domain-Specific Embeddings","text":"<pre><code># PhysBERT for physics/materials science\nscanner.process_articles(\n    property_keywords=property_keywords,\n    embedding_model=\"huggingface:thellert/physbert_cased\",\n    chunk_size=1000,\n    chunk_overlap=50\n)\n\n# MatBERT for materials science\nscanner.process_articles(\n    property_keywords=property_keywords,\n    embedding_model=\"huggingface:pranav-s/MaterialsBERT\",\n    chunk_size=1000,\n    chunk_overlap=50\n)\n</code></pre>"},{"location":"rag-config/#dependencies","title":"Dependencies","text":"<p>Install required packages based on your chosen providers:</p>"},{"location":"rag-config/#openai","title":"OpenAI","text":"<pre><code>pip install langchain-openai\n</code></pre>"},{"location":"rag-config/#google-gemini","title":"Google Gemini","text":"<pre><code>pip install langchain-google-genai\n</code></pre>"},{"location":"rag-config/#anthropic-claude","title":"Anthropic Claude","text":"<pre><code>pip install langchain-anthropic\n</code></pre>"},{"location":"rag-config/#ollama","title":"Ollama","text":"<pre><code>pip install langchain-ollama\n\n# Install Ollama locally\n# Visit: https://ollama.ai/download\n</code></pre>"},{"location":"rag-config/#other-providers","title":"Other Providers","text":"<pre><code># Together AI\npip install langchain-together\n\n# Cohere\npip install langchain-cohere\n\n# For HuggingFace embeddings\npip install sentence-transformers\n</code></pre>"},{"location":"rag-config/#next-steps","title":"Next Steps","text":"<ul> <li>Explore Data Extraction</li> <li>Review Evaluation Methods</li> </ul>"},{"location":"about/citation/","title":"Citation","text":"<p>If you use ComProScanner in your research, please cite our related paper:</p> <pre><code>@misc{roy2025comproscannermultiagentbasedframework,\n      title={ComProScanner: A multi-agent based framework for composition-property structured data extraction from scientific literature},\n      author={Aritra Roy and Enrico Grisan and John Buckeridge and Chiara Gattinoni},\n      year={2025},\n      eprint={2510.20362},\n      archivePrefix={arXiv},\n      primaryClass={physics.comp-ph},\n      url={https://arxiv.org/abs/2510.20362},\n}\n</code></pre>"},{"location":"about/contact/","title":"Contact","text":"<p>Get in touch with the ComProScanner team.</p>"},{"location":"about/contact/#author","title":"Author","text":"<p>Aritra Roy</p> <ul> <li>Website: aritraroy.live</li> <li>Email: contact@aritraroy.live</li> <li>GitHub: @aritraroy24</li> <li>X (Twitter): @aritraroy24</li> </ul>"},{"location":"about/contact/#project-links","title":"Project Links","text":"<ul> <li>GitHub Repository: slimeslab/ComProScanner</li> <li>PyPI Package: comproscanner</li> <li>Documentation: slimeslab.github.io/ComProScanner</li> </ul>"},{"location":"about/contact/#support","title":"Support","text":""},{"location":"about/contact/#bug-reports","title":"Bug Reports","text":"<p>Found a bug? Please report it on GitHub Issues.</p>"},{"location":"about/contact/#feature-requests","title":"Feature Requests","text":"<p>Have an idea for a new feature? Open a feature request on GitHub.</p>"},{"location":"about/contact/#questions","title":"Questions","text":"<p>For general questions:</p> <ul> <li>Check the documentation</li> <li>Search existing issues</li> </ul>"},{"location":"about/contribution/","title":"Contribution","text":"<p>Thank you for your interest in contributing to ComProScanner! We welcome contributions from the community and appreciate your effort to improve this project.</p>"},{"location":"about/contribution/#code-of-conduct","title":"Code of Conduct","text":"<p>By participating in this project, you agree to maintain a respectful and inclusive environment. We expect all contributors to:</p> <ul> <li>Use welcoming and inclusive language</li> <li>Respect differing viewpoints and experiences</li> <li>Accept constructive criticism gracefully</li> <li>Focus on what is best for the community</li> <li>Show empathy towards other community members</li> </ul>"},{"location":"about/contribution/#how-can-i-contribute","title":"How Can I Contribute?","text":"<p>There are several ways to contribute to ComProScanner:</p> <ul> <li>Report bugs - Help us identify issues in the codebase</li> <li>Suggest features - Propose new features or improvements</li> <li>Fix bugs - Submit fixes for identified issues</li> <li>Add features - Implement new functionality</li> <li>Improve documentation - Enhance existing documentation or add new guides</li> <li>Write tests - Increase test coverage</li> <li>Review pull requests - Help review contributions from other developers</li> </ul>"},{"location":"about/contribution/#getting-started","title":"Getting Started","text":""},{"location":"about/contribution/#prerequisites","title":"Prerequisites","text":"<ul> <li>Python 3.12 or 3.13</li> <li>Git</li> <li>Basic understanding of materials science (helpful but not required)</li> </ul>"},{"location":"about/contribution/#setting-up-development-environment","title":"Setting Up Development Environment","text":"<ol> <li>Fork the repository on GitHub</li> <li>Clone your fork locally:</li> </ol> <pre><code>git clone https://github.com/slimeslab/ComProScanner.git\ncd comproscanner\n</code></pre> <ol> <li>Create a virtual environment:</li> </ol> <pre><code>python -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n</code></pre> <ol> <li>Install dependencies:</li> </ol> <pre><code>pip install -e \".[dev]\"\n</code></pre> <ol> <li>Create a <code>.env</code> file based on <code>.env.example</code>:</li> </ol> <pre><code>cp .env.example .env\n</code></pre> <ol> <li>Add your API keys to the <code>.env</code> file</li> </ol>"},{"location":"about/contribution/#development-workflow","title":"Development Workflow","text":"<ol> <li>Create a new branch for your feature or bugfix:</li> </ol> <pre><code>git checkout -b feature/your-feature-name\n# or\ngit checkout -b fix/your-bugfix-name\n</code></pre> <ol> <li> <p>Make your changes</p> </li> <li> <p>Test your changes thoroughly</p> </li> <li> <p>Commit your changes following the commit guidelines</p> </li> <li> <p>Push to your fork:</p> </li> </ol> <pre><code>git push origin feature/your-feature-name\n</code></pre> <ol> <li>Submit a pull request</li> </ol>"},{"location":"about/contribution/#commit-guidelines","title":"Commit Guidelines","text":""},{"location":"about/contribution/#commit-message-format","title":"Commit Message Format","text":"<p>Follow the Conventional Commits specification:</p> <pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n\n&lt;body&gt;\n\n&lt;footer&gt;\n</code></pre>"},{"location":"about/contribution/#types","title":"Types","text":"<ul> <li>feat: New feature</li> <li>fix: Bug fix</li> <li>docs: Documentation changes</li> <li>style: Code style changes (formatting, missing semicolons, etc.)</li> <li>refactor: Code refactoring</li> <li>test: Adding or updating tests</li> <li>chore: Maintenance tasks</li> <li>perf: Performance improvements</li> </ul>"},{"location":"about/contribution/#examples","title":"Examples","text":"<pre><code>feat(extraction): add support for ACS publications\n\nImplement article processing for American Chemical Society journals\nusing their TDM API.\n\nCloses #123\n</code></pre> <pre><code>fix(metadata): handle missing author information\n\nPrevent crashes when author field is absent in article metadata\nby providing default values.\n\nFixes #456\n</code></pre>"},{"location":"about/contribution/#pull-request-process","title":"Pull Request Process","text":"<ol> <li> <p>Before submitting, ensure:</p> </li> <li> <p>All tests pass</p> </li> <li>Code is formatted and linted</li> <li>Documentation is updated</li> <li> <p>No merge conflicts with main branch</p> </li> <li> <p>PR Description should include:</p> </li> <li> <p>Clear description of changes</p> </li> <li>Related issue numbers (e.g., \"Closes #123\")</li> <li>Screenshots (if applicable)</li> <li> <p>Breaking changes (if any)</p> </li> <li> <p>Review Process:</p> </li> <li> <p>At least one maintainer review is required</p> </li> <li>Address all review comments</li> <li> <p>Keep discussions focused and respectful</p> </li> <li> <p>After Approval:</p> </li> <li>Maintainers will merge your PR</li> <li>Your contribution will be credited</li> </ol>"},{"location":"about/contribution/#reporting-bugs","title":"Reporting Bugs","text":""},{"location":"about/contribution/#before-submitting-a-bug-report","title":"Before Submitting a Bug Report","text":"<ul> <li>Check existing issues to avoid duplicates</li> <li>Collect relevant information about the bug</li> <li>Try to reproduce the issue with the latest version</li> </ul>"},{"location":"about/contribution/#how-to-submit-a-bug-report","title":"How to Submit a Bug Report","text":"<p>Create an issue with the following information:</p> <ul> <li>Clear title - Summarize the problem</li> <li>Description - Detailed description of the issue</li> <li>Steps to reproduce - List exact steps to recreate the bug</li> <li>Expected behavior - What you expected to happen</li> <li>Actual behavior - What actually happened</li> <li>Environment - OS, Python version, package version</li> <li>Error messages - Full error traceback</li> <li>Screenshots - If applicable</li> </ul>"},{"location":"about/contribution/#suggesting-enhancements","title":"Suggesting Enhancements","text":"<p>We welcome feature suggestions! When proposing enhancements:</p> <ul> <li>Use a clear title - Summarize the enhancement</li> <li>Provide detailed description - Explain the feature and its benefits</li> <li>Explain use cases - Describe scenarios where this would be useful</li> <li>Consider alternatives - Mention other solutions you've considered</li> <li>Mockups/examples - Provide examples or mockups if applicable</li> </ul>"},{"location":"about/contribution/#documentation","title":"Documentation","text":""},{"location":"about/contribution/#building-documentation-locally","title":"Building Documentation Locally","text":"<pre><code>pip install mkdocs mkdocs-material\nmkdocs serve\n</code></pre> <p>Visit <code>http://127.0.0.1:8000</code> to view the documentation.</p>"},{"location":"about/contribution/#documentation-guidelines","title":"Documentation Guidelines","text":"<ul> <li>Keep explanations clear and concise</li> <li>Provide code examples</li> <li>Update documentation when changing functionality</li> <li>Follow the existing documentation structure</li> <li>Use proper markdown formatting</li> </ul>"},{"location":"about/contribution/#testing","title":"Testing","text":""},{"location":"about/contribution/#running-tests","title":"Running Tests","text":"<pre><code>pytest tests/\n</code></pre>"},{"location":"about/contribution/#writing-tests","title":"Writing Tests","text":"<ul> <li>Write unit tests for new features</li> <li>Maintain or improve code coverage</li> <li>Use descriptive test names</li> <li>Include edge cases and error conditions</li> </ul> <p>Example:</p> <pre><code>def test_extract_composition_valid_doi():\n    \"\"\"Test composition extraction with valid DOI.\"\"\"\n    result = extract_composition_data('10.1016/j.example.2024.1', 'd33')\n    assert isinstance(result, dict)\n    assert 'compositions' in result\n\ndef test_extract_composition_invalid_doi():\n    \"\"\"Test composition extraction with invalid DOI.\"\"\"\n    with pytest.raises(ValueError):\n        extract_composition_data('invalid-doi', 'd33')\n</code></pre>"},{"location":"about/contribution/#license","title":"License","text":"<p>By contributing to ComProScanner, you agree that your contributions will be licensed under the MIT License.</p>"},{"location":"about/contribution/#questions","title":"Questions?","text":"<p>If you have questions about contributing, feel free to:</p> <ul> <li>Open an issue for discussion</li> <li>Contact Aritra Roy</li> <li>Check the documentation for more information</li> </ul> <p>Thank you for contributing to ComProScanner!</p>"},{"location":"about/license/","title":"License","text":"<p>ComProScanner is licensed under the MIT License.</p> <p>Copyright \u00a9 2025 SLIMES Lab</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"about/project-structure/","title":"Project Structure","text":"<p>Understanding the ComProScanner codebase organization.</p>"},{"location":"about/project-structure/#directory-structure","title":"Directory Structure","text":"<pre><code>comproscanner\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 comproscanner\n\u2502       \u251c\u2500\u2500 article_processors\n\u2502       \u2502   \u251c\u2500\u2500 __init__.py\n\u2502       \u2502   \u251c\u2500\u2500 elsevier_processor.py\n\u2502       \u2502   \u251c\u2500\u2500 iop_processor.py\n\u2502       \u2502   \u251c\u2500\u2500 pdfs_processor.py\n\u2502       \u2502   \u251c\u2500\u2500 springer_processor.py\n\u2502       \u2502   \u2514\u2500\u2500 wiley_processor.py\n\u2502       \u251c\u2500\u2500 extract_flow\n\u2502       \u2502   \u251c\u2500\u2500 crews\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 materials_data_identifier_crew/\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 composition_crew\n\u2502       \u2502   \u2502   \u2502   \u251c\u2500\u2500 composition_extraction_crew/\n\u2502       \u2502   \u2502   \u2502   \u2514\u2500\u2500 composition_format_crew/\n\u2502       \u2502   \u2502   \u2514\u2500\u2500 synthesis_crew\n\u2502       \u2502   \u2502       \u251c\u2500\u2500 synthesis_extraction_crew/\n\u2502       \u2502   \u2502       \u2514\u2500\u2500 synthesis_format_crew/\n\u2502       \u2502   \u251c\u2500\u2500 tools\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 material_parser_tool.py\n\u2502       \u2502   \u2502   \u2514\u2500\u2500 rag_tool.py\n\u2502       \u2502   \u251c\u2500\u2500 __init__.py\n\u2502       \u2502   \u2514\u2500\u2500 main_extraction_flow.py\n\u2502       \u251c\u2500\u2500 metadata_extractor\n\u2502       \u2502   \u251c\u2500\u2500 __init__.py\n\u2502       \u2502   \u251c\u2500\u2500 fetch_metadata.py\n\u2502       \u2502   \u2514\u2500\u2500 filter_metadata.py\n\u2502       \u251c\u2500\u2500 post_processing\n\u2502       \u2502   \u251c\u2500\u2500 evaluation\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 eval_flow\n\u2502       \u2502   \u2502   \u2502   \u251c\u2500\u2500 crews\n\u2502       \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 composition_evaluation_crew/\n\u2502       \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 synthesis_evaluation_crew/\n\u2502       \u2502   \u2502   \u2502   \u2514\u2500\u2500 eval_flow.py\n\u2502       \u2502   \u2502   \u2514\u2500\u2500 semantic_evaluator.py\n\u2502       \u2502   \u251c\u2500\u2500 visualization\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 create_knowledge_graph.py\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 data_distribution_visualizers.py\n\u2502       \u2502   \u2502   \u2514\u2500\u2500 eval_plot_visualizers.py\n\u2502       \u2502   \u2514\u2500\u2500 data_cleaner.py\n\u2502       \u251c\u2500\u2500 utils/\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u251c\u2500\u2500 comproscanner.py\n\u2502       \u251c\u2500\u2500 data_visualizer.py\n\u2502       \u2514\u2500\u2500 eval_visualizer.py\n\u251c\u2500\u2500 docs/\n\u251c\u2500\u2500 tests/\n\u251c\u2500\u2500 assets/\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 pyproject.toml\n</code></pre>"},{"location":"about/project-structure/#module-dependencies","title":"Module Dependencies","text":"<pre><code>graph TB\n    A[ComProScanner] --&gt; B[Metadata Extractor]\n    A --&gt; C[Article Processors]\n    A --&gt; D[Extract Flow]\n    A --&gt; E[Post Processing]\n\n    B --&gt; F[Utils/Configs]\n    C --&gt; F\n    D --&gt; F\n\n    E --&gt; G[Data Visualizer]\n    E --&gt; H[Eval Visualizer]</code></pre>"},{"location":"getting-started/installation/","title":"Installation","text":"<p>This guide will help you install ComProScanner and its dependencies.</p>"},{"location":"getting-started/installation/#requirements","title":"Requirements","text":"<ul> <li>Python 3.12 or 3.13</li> <li>pip (Python package installer)</li> </ul>"},{"location":"getting-started/installation/#basic-installation","title":"Basic Installation","text":"<p>The simplest way to install ComProScanner is using pip:</p> <pre><code>pip install comproscanner\n</code></pre> <p>This will install the latest stable version from PyPI along with all required dependencies.</p>"},{"location":"getting-started/installation/#installation-from-source","title":"Installation from Source","text":"<p>If you want to install from source or contribute to development:</p>"},{"location":"getting-started/installation/#1-clone-the-repository","title":"1. Clone the Repository","text":"<pre><code>git clone https://github.com/slimeslab/ComProScanner.git\ncd comproscanner\n</code></pre>"},{"location":"getting-started/installation/#2-install-in-development-mode","title":"2. Install in Development Mode","text":"<pre><code>pip install -e .\n</code></pre> <p>The <code>-e</code> flag installs the package in editable mode, allowing you to make changes to the source code.</p>"},{"location":"getting-started/installation/#environment-variables","title":"Environment Variables","text":"<p>ComProScanner requires several API keys to function properly. Create a <code>.env</code> file in your project directory:</p> <pre><code># Publisher TDM API Keys (for direct article access)\nSCOPUS_API_KEY=your_scopus_api_key # for Elsevier as well as metadata retrieval\nWILEY_API_KEY=your_wiley_api_key\nSPRINGER_OPENACCESS_API_KEY=your_springer_openaccess_api_key # Springer provides two separate keys for open access and TDM API\nSPRINGER_TDM_API_KEY=your_springer_tdm_api_key\nIOP_papers_path=local_path_to_iop_papers # IOP Publishing provides XML articles in bulk through SFTP access\n\n# API Keys for LLM Models (at least one is required which will be used for data extraction)\nOPENAI_API_KEY=your_openai_api_key\nDEEPSEEK_API_KEY=your_deepseek_api_key\nANTHROPIC_API_KEY=your_anthropic_api_key\nGEMINI_API_KEY=your_google_api_key\nOPENROUTER_API_KEY=your_openrouter_api_key\n\n# Hugging Face API Key (for accessing thellert/physbert_cased model for embeddings)\nHF_TOKEN=your_huggingface_api_key\n\n# Neo4j Configuration (for knowledge graph visualization)\nNEO4J_URI=bolt://localhost:7687\nNEO4J_USER=neo4j\nNEO4J_PASSWORD=your_password\nNEO4J_DATABASE=neo4j\n</code></pre> <p>Keep your API keys secure and never commit them to version control!</p>"},{"location":"getting-started/installation/#optional-dependencies","title":"Optional Dependencies","text":""},{"location":"getting-started/installation/#for-additional-llm-providers","title":"For Additional LLM Providers","text":"<p>Depending on which LLM providers you want to use:</p> <pre><code># For Anthropic Claude\npip install langchain-anthropic\n\n# For Google Gemini\npip install langchain-google-genai\n\n# For Ollama (local models)\npip install langchain-ollama\n\n# For TogetherAI Model Integration\npip install langchain-together\n\n# For OpenRouter Model Integration\npip install langchain-openrouter\n\n# For Cohere Model Integration\npip install langchain-cohere\n</code></pre>"},{"location":"getting-started/installation/#verification","title":"Verification","text":"<p>Verify your installation by running:</p> <pre><code>import comproscanner\nprint(comproscanner.__version__)\n</code></pre> <p>You should see the version number printed without any errors.</p>"},{"location":"getting-started/installation/#upgrading","title":"Upgrading","text":"<p>To upgrade to the latest version:</p> <pre><code>pip install --upgrade comproscanner\n</code></pre>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#common-issues","title":"Common Issues","text":""},{"location":"getting-started/installation/#importerror-no-module-named-comproscanner","title":"ImportError: No module named 'comproscanner'","text":"<p>Make sure you've installed the package correctly:</p> <pre><code>pip install comproscanner\n</code></pre>"},{"location":"getting-started/installation/#api-key-errors","title":"API Key Errors","text":"<p>Ensure your <code>.env</code> file is in the correct location and contains valid API keys.</p>"},{"location":"getting-started/installation/#dependency-conflicts","title":"Dependency Conflicts","text":"<p>If you encounter dependency conflicts, try creating a fresh virtual environment:</p> <pre><code>python -m venv compro_env\nsource compro_env/bin/activate  # On Windows: compro_env\\Scripts\\activate\npip install comproscanner\n</code></pre>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>Now that you have ComProScanner installed, check out the Quick Start Guide to begin extracting data from scientific articles.</p>"},{"location":"getting-started/quick-start/","title":"Quick Start Guide","text":"<p>This guide will help you get started with ComProScanner quickly.</p>"},{"location":"getting-started/quick-start/#complete-workflow-example","title":"Complete Workflow Example","text":"<p>Here's a complete minimal example demonstrating the full workflow for extracting piezoelectric coefficient (d33) data:</p> <pre><code>from comproscanner import ComProScanner\n\n# Initialize with property of interest\nscanner = ComProScanner(main_property_keyword=\"piezoelectric\")\n\n# Step 1: Collect metadata\nscanner.collect_metadata()\n\n# Step 2: Define property keywords for filtering\nproperty_keywords = {\n    \"exact_keywords\": [\"d33\"],\n    \"substring_keywords\": [\" d 33 \"]\n}\n\n# Step 3: Process articles from specific sources\nscanner.process_articles(\n    property_keywords=property_keywords,\n    source_list=[\"elsevier\", \"springer\"]\n)\n\n# Step 4: Extract composition-property relationships\nscanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\"\n)\n</code></pre>"},{"location":"getting-started/quick-start/#step-by-step-breakdown","title":"Step-by-Step Breakdown","text":""},{"location":"getting-started/quick-start/#1-initialize-the-scanner","title":"1. Initialize the Scanner","text":"<p>Create a ComProScanner instance with your main property keyword which helps the scanner to create associated files and directories for automated organization:</p> <pre><code>from comproscanner import ComProScanner\n\nscanner = ComProScanner(main_property_keyword=\"piezoelectric\")\n</code></pre>"},{"location":"getting-started/quick-start/#2-collect-metadata","title":"2. Collect Metadata","text":"<p>Find relevant scientific articles about piezoelectric materials from Scopus database for the last 2 years:</p> <pre><code>scanner.collect_metadata(\n    base_queries=[\"piezoelectric\", \"piezoelectricity\"]\n)\n</code></pre>"},{"location":"getting-started/quick-start/#3-process-articles","title":"3. Process Articles","text":"<p>Extract relevant text from full-text articles for Elsevier, Wiley, and Springer Nature articles using their Text and Data Mining (TDM) APIs:</p> <pre><code>property_keywords = {\n    \"exact_keywords\": [\"d33\"],  # Exact matches\n    \"substring_keywords\": [\" d 33 \"]  # Substring matches\n}\n\nscanner.process_articles(\n    property_keywords=property_keywords,\n    source_list=[\"elsevier\", \"wiley\", \"springer\"]\n)\n</code></pre>"},{"location":"getting-started/quick-start/#4-extract-data","title":"4. Extract Data","text":"<p>Use multiple CrewAI agents to extract structured data from the processed articles using OpenAI's GPT-4o Mini model:</p> <pre><code>scanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\",\n    is_extract_synthesis_data=True,\n    model=\"gpt-4o-mini\"\n)\n</code></pre>"},{"location":"getting-started/quick-start/#optional","title":"Optional","text":""},{"location":"getting-started/quick-start/#visualize-extracted-data","title":"Visualize Extracted Data","text":"<p>Create pie charts for material family distribution and knowledge graphs from the extracted results:</p> <pre><code>from comproscanner import data_visualizer\n\n# Plot material families distribution\nfig = data_visualizer.plot_family_pie_chart(\n    data_sources=[\"extracted_results.json\"],\n    output_file=\"family_distribution.png\"\n)\n\n# Create knowledge graph\ndata_visualizer.create_knowledge_graph(\n    result_file=\"extracted_results.json\"\n)\n</code></pre>"},{"location":"getting-started/quick-start/#evaluate-extraction-quality","title":"Evaluate Extraction Quality","text":"<p>Evaluate the extraction result quality against ground truth data using semantic and agentic evaluation methods:</p> <pre><code>from comproscanner import evaluate_semantic, evaluate_agentic\n\n# Semantic evaluation\nsemantic_results = evaluate_semantic(\n    ground_truth_file=\"ground_truth.json\",\n    test_data_file=\"extracted_results.json\",\n    output_file=\"semantic_evaluation.json\"\n)\n\n# Agentic evaluation (more advanced)\nagentic_results = evaluate_agentic(\n    ground_truth_file=\"ground_truth.json\",\n    test_data_file=\"extracted_results.json\",\n    output_file=\"agentic_evaluation.json\"\n)\n</code></pre>"},{"location":"getting-started/quick-start/#visualize-evaluation-results","title":"Visualize Evaluation Results","text":"<p>Easily visualize evaluation metrics for both single and multiple model comparisons:</p> <pre><code>from comproscanner import eval_visualizer\n\n# Plot single model evaluation\nfig = eval_visualizer.plot_single_bar_chart(\n    result_file=\"semantic_evaluation.json\",\n    output_file=\"evaluation_metrics.png\"\n)\n\n# Compare multiple models\nfig = eval_visualizer.plot_multiple_radar_charts(\n    result_sources=[\"model1_eval.json\", \"model2_eval.json\"],\n    model_names=[\"GPT-4\", \"Claude\"],\n    output_file=\"model_comparison.png\"\n)\n</code></pre>"},{"location":"getting-started/quick-start/#understanding-the-output","title":"Understanding the Output","text":""},{"location":"getting-started/quick-start/#extracted-data-format","title":"Extracted Data Format","text":"<p>The extraction produces JSON files with structured data similar to the following example:</p> <pre><code>\"10.1016/j.apradiso.2024.111655\": {\n    \"composition_data\": {\n      \"compositions_property_values\": {\n        \"Eu1.90Dy0.10Ge2O7\": 0.66,\n        \"Eu1.90La0.10Ge2O7\": 0.36,\n        \"Eu1.90Ho0.10Ge2O7\": 0.62\n      },\n      \"property_unit\": \"pC/N\",\n      \"family\": \"RE2B2O7\"\n    },\n    \"synthesis_data\": {\n      \"method\": \"solid-state reaction\",\n      \"precursors\": [\n        \"Eu2O3\",\n        \"GeO2\",\n        \"Dy2O3\",\n        \"La2O3\",\n        \"Ho2O3\"\n      ],\n      \"steps\": [\n        \"Starting materials Eu2O3, GeO2, Dy2O3, La2O3 and Ho2O3 were combined in stoichiometric ratios with each dopant at 5 mol%.\",\n        \"Samples were first heated at 800\u00b0C for 2 hours in pure alumina crucibles under open atmosphere.\",\n        \"Materials were then heated to 1150\u00b0C for 10 hours followed by slow cooling.\",\n        \"Resulting materials were ground into powder for further characterization.\",\n        \"Ceramic discs were formed from obtained powder materials with 1 mm thickness and 10 mm diameter.\",\n        \"Ceramic discs were compacted using uniaxial pressing under 250 MPa pressure with 2 wt% of 5 wt% PVA aqueous solution as binder.\",\n        \"Samples were heated at 600\u00b0C for 30 minutes to eliminate organic additives.\",\n        \"Sintering was conducted at 1400\u00b0C for 4 hours.\",\n        \"Silver paste was applied to disc surfaces and fired at 650\u00b0C for 1 hour to form surface electrodes.\",\n        \"Electric field of 9-18 kV/mm was applied in silicon oil bath at 120\u00b0C for 30 minutes followed by 24-hour aging.\"\n      ],\n      \"characterization_techniques\": [\n        \"TG/DTA\",\n        \"XRD\",\n        \"SEM\",\n        \"EDX\",\n        \"photoluminescence spectroscopy\",\n        \"LCR meter\",\n        \"d33 meter\"\n      ]\n    },\n    \"article_metadata\": {\n      \"doi\": \"10.1016/j.apradiso.2024.111655\",\n      \"title\": \"Novel smart materials with high curie temperatures: Eu1.90Dy0.10Ge2O7, Eu1.90La0.10Ge2O7 and Eu1.90Ho0.10Ge2O7\",\n      \"journal\": \"Applied Radiation and Isotopes\",\n      \"year\": \"2025\",\n      \"isOpenAccess\": false,\n      \"authors\": [\n        {\n          \"name\": \"Esra \u00d6zt\u00fcrk\",\n          \"affiliation_id\": \"60020484\",\n          \"affiliation_name\": \"Hacettepe \u00dcniversitesi\",\n          \"affiliation_country\": \"Turkey\"\n        },\n        {\n          \"name\": \"Nilgun Kalaycioglu Ozpozan\",\n          \"affiliation_id\": \"122321412\",\n          \"affiliation_name\": \"Erciyes \u00dcn.\",\n          \"affiliation_country\": \"T\u00fcrkiye\"\n        },\n        {\n          \"name\": \"Volkan Kalem\",\n          \"affiliation_id\": \"60193845\",\n          \"affiliation_name\": \"Konya Technical University\",\n          \"affiliation_country\": \"Turkey\"\n        }\n      ],\n      \"keywords\": [\n        \"Curie\"\n      ]\n    }\n  }\n</code></pre>"},{"location":"getting-started/quick-start/#next-steps","title":"Next Steps","text":"<p>Now that you understand the basics, explore:</p> <ul> <li>User Guide - Detailed documentation for each module and functions</li> <li>Advanced Configuration - Configure RAG and custom flows</li> </ul>"},{"location":"getting-started/quick-start/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/quick-start/#no-articles-found","title":"No Articles Found","text":"<ul> <li>Check your search queries are relevant</li> <li>Verify the date range is appropriate</li> </ul>"},{"location":"getting-started/quick-start/#extraction-issues","title":"Extraction Issues","text":"<ul> <li>Ensure API keys are configured correctly</li> <li>Ensure sufficient API credits for LLM calls</li> <li>Check that articles contain relevant data</li> <li>Try adjusting temperature and model parameters or use a different model</li> <li>Try passing additional instructions to the extraction agents for better context</li> </ul> <p>Need Help?</p> <p>If you encounter issues, check the GitHub Issues or contact Aritra Roy.</p>"},{"location":"usage/article-processing/","title":"Article Processing","text":"<p>The article processing module extracts full article text from various publishers or locally stored PDFs for information extraction at later stages only if query keywords are present.</p>"},{"location":"usage/article-processing/#supported-publishers","title":"Supported Publishers","text":"Publisher TDM API Required Features Elsevier Yes Full-text access via TDM API extraction Springer Nature Yes Full-text access via TDM API extraction Wiley Yes Full-text access via TDM API extraction IOP Publishing No IOP provides bulk access to full-text XML articles via SFTP transfer PDFs No Local PDF processing (any publication) using Docling package"},{"location":"usage/article-processing/#basic-usage","title":"Basic Usage","text":"<pre><code>property_keywords = {\n    \"exact_keywords\": [\"d33\"],\n    \"substring_keywords\": [\" d 33 \"]\n}\n\nscanner.process_articles(\n    property_keywords=property_keywords,\n    source_list=[\"elsevier\", \"springer\", \"wiley\"]\n)\n</code></pre>"},{"location":"usage/article-processing/#parameters","title":"Parameters","text":""},{"location":"usage/article-processing/#required-parameters","title":"Required Parameters","text":""},{"location":"usage/article-processing/#property_keywords-dict","title":"<code>property_keywords</code> (dict)","text":"<p>Dictionary consisting of exact_keywords and substring_keywords lists defining keywords for filtering using string matching:</p> <pre><code>property_keywords = {\n    \"exact_keywords\": [\"d33\"],\n    \"substring_keywords\": [\" d 33 \", \" d 3 3 \"]\n}\n</code></pre> <ul> <li>exact_keywords: Match exact occurrences</li> <li>substring_keywords: Match as substrings (useful for spaced notation or substring matches)</li> </ul>"},{"location":"usage/article-processing/#optional-parameters","title":"Optional Parameters","text":""},{"location":"usage/article-processing/#source_list-list","title":"<code>source_list</code> (list)","text":"<p>List of sources to process, both publishers and/or local PDFs.</p>"},{"location":"usage/article-processing/#folder_path-str","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing local PDFs. If <code>source_list</code> includes \"pdfs\", this parameter must be provided.</p>"},{"location":"usage/article-processing/#doi_list-list","title":"<code>doi_list</code> (list)","text":"<p>List of specific DOIs to process. If provided, only these articles will be processed.</p>"},{"location":"usage/article-processing/#is_sql_db-bool","title":"<code>is_sql_db</code> (bool)","text":"<p>Flag to indicate if SQL database storage is enabled.</p>"},{"location":"usage/article-processing/#csv_batch_size-int","title":"<code>csv_batch_size</code> (int)","text":"<p>Article batch size for CSV file operations.</p>"},{"location":"usage/article-processing/#sql_batch_size-int","title":"<code>sql_batch_size</code> (int)","text":"<p>Article batch size for SQL database operations. Only relevant if <code>is_sql_db</code> is <code>True</code>.</p>"},{"location":"usage/article-processing/#start_row-int","title":"<code>start_row</code> (int)","text":"<p>Row number from the metadata CSV file to start processing from (for resuming).</p>"},{"location":"usage/article-processing/#end_row-int","title":"<code>end_row</code> (int)","text":"<p>Row number from the metadata CSV file to end processing at.</p>"},{"location":"usage/article-processing/#is_save_xml-bool","title":"<code>is_save_xml</code> (bool)","text":"<p>Flag to indicate if XML files for full-text articles should be saved.</p>"},{"location":"usage/article-processing/#is_save_pdf-bool","title":"<code>is_save_pdf</code> (bool)","text":"<p>Flag to indicate if PDF files for full-text articles should be saved.</p>"},{"location":"usage/article-processing/#rag_db_path-str","title":"<code>rag_db_path</code> (str)","text":"<p>Custom path to store the vector databases of property-mentioned articles for RAG processing.</p>"},{"location":"usage/article-processing/#chunk_size-int","title":"<code>chunk_size</code> (int)","text":"<p>Size of the chunks to split articles into while creating vector databases for RAG.</p>"},{"location":"usage/article-processing/#chunk_overlap-int","title":"<code>chunk_overlap</code> (int)","text":"<p>Overlap size between chunks for creating vector databases for RAG.</p>"},{"location":"usage/article-processing/#embedding_model-str","title":"<code>embedding_model</code> (str)","text":"<p>Name of the embedding model to use for creating vector databases for RAG.</p> <p>Default Values</p> <p><code>source_list</code> = [\"elsevier\", \"wiley\", \"iop\", \"springer\"]<code>folder_path</code> = None<code>doi_list</code> = None<code>is_sql_db</code> = False<code>is_save_xml</code> = False<code>is_save_pdf</code> = False<code>rag_db_path</code> = \"db\"<code>chunk_size</code> = 1000<code>chunk_overlap</code> = 25<code>embedding_model</code> = \"huggingface:thellert/physbert_cased\"</p>"},{"location":"usage/article-processing/#processing-workflow","title":"Processing Workflow","text":"<pre><code>graph TB\n    A[Article List] --&gt; B{Source Type?}\n    B --&gt;|API| C[Download Article]\n    B --&gt;|PDF Folder| D[Load from Folder]\n    C --&gt; E[Parse Content]\n    D --&gt; E\n    E --&gt; F{Is Keyword Present?}\n    F --&gt; |Yes| G[Save Article's&lt;br&gt;Full Text to CSV&lt;br&gt;and Vector DB]\n    F --&gt; |No| H[Skip Article]</code></pre>"},{"location":"usage/article-processing/#publisher-specific-details","title":"Publisher-Specific Details","text":""},{"location":"usage/article-processing/#elsevier","title":"Elsevier","text":"<pre><code># Requires SCOPUS_API_KEY in .env\nscanner.process_articles(\n    property_keywords=property_keywords,\n    source_list=[\"elsevier\"],\n    is_save_xml=True,  # Save XML files\n)\n</code></pre>"},{"location":"usage/article-processing/#springer-nature","title":"Springer Nature","text":"<pre><code># Requires SPRINGER_OPENACCESS_API_KEY and SPRINGER_TDM_API_KEY in .env\nscanner.process_articles(\n    property_keywords=property_keywords,\n    source_list=[\"springer\"],\n    is_save_xml=True   # Save XML files\n)\n</code></pre>"},{"location":"usage/article-processing/#wiley","title":"Wiley","text":"<pre><code># Requires WILEY_API_KEY in .env\nscanner.process_articles(\n    property_keywords=property_keywords,\n    source_list=[\"wiley\"],\n    is_save_pdf=True   # Save PDF files\n)\n</code></pre>"},{"location":"usage/article-processing/#iop-publishing","title":"IOP Publishing","text":"<pre><code># Requires IOP_papers_path in .env\nscanner.process_articles(\n    property_keywords=property_keywords,\n    source_list=[\"iop\"]\n)\n</code></pre>"},{"location":"usage/article-processing/#local-pdfs","title":"Local PDFs","text":"<pre><code>scanner.process_articles(\n    property_keywords=property_keywords,\n    source_list=[\"pdfs\"],\n    folder_path=\"/home/user/papers\"\n)\n</code></pre>"},{"location":"usage/article-processing/#advanced-features","title":"Advanced Features","text":""},{"location":"usage/article-processing/#database-storage","title":"Database Storage","text":"<pre><code># Requires DATABASE_HOST, DATABASE_USER, DATABASE_PASSWORD, and DATABASE_NAME in .env\nscanner.process_articles(\n    property_keywords=property_keywords,\n    is_sql_db=True,  # Use SQL database\n    sql_batch_size=500\n)\n</code></pre>"},{"location":"usage/article-processing/#selective-processing","title":"Selective Processing","text":"<p>Process specific DOIs:</p> <pre><code>doi_list = [\n    \"10.1016/j.example.2023.1\",\n    \"10.1016/j.example.2023.2\"\n]\n\nscanner.process_articles(\n    property_keywords=property_keywords,\n    doi_list=doi_list\n)\n</code></pre>"},{"location":"usage/article-processing/#rag-vector-database","title":"RAG Vector Database","text":"<pre><code>scanner.process_articles(\n    property_keywords=property_keywords,\n    rag_db_path=\"embeddings\",\n    chunk_size=800,\n    chunk_overlap=100,\n    embedding_model=\"sentence-transformers:all-mpnet-base-v2\"\n)\n</code></pre>"},{"location":"usage/article-processing/#output-format","title":"Output Format","text":"<p>Similar to the following example, minimal metadata along with full article text for different sections is stored in a CSV file (along with creating an embedded vector database separately) only if the article contains the specified keywords. If keywords are not found, no paragraphs are saved for that article.</p> elsevier_piezoelectric_paragraphs.csv<pre><code>doi,article_title,publication_name,publisher,abstract,introduction,exp_methods,comp_methods,results_discussion,conclusion,is_property_mentioned\n10.1016/j.bios.2025.117148,Enhanced piezoelectric sensor to distinguish real-time arrhythmia for predicting heart failure,Biosensors and Bioelectronics,Elsevier B.V.,\"Monitoring cardiac rhythm is crucial...\",\" Heart failure affects approximately 32 million individuals globally...\",\" Initially, PVDF powder (Aladdin, Shanghai, China) was dissolved...\",,\" The aligned PVDF/CoFe2O4 films exhibited excellent flexibility...\",\" In this study, the higher sensitivity piezoelectric sensors were developed...\",1\n10.1016/j.seppur.2024.131085,Crystallization-based recovery of niobium compounds from alkaline liquor,Separation and Purification Technology,Elsevier B.V.,,,,,,,0\n// More articles...\n</code></pre>"},{"location":"usage/article-processing/#next-steps","title":"Next Steps","text":"<ul> <li>Continue to Data Extraction</li> <li>Learn about RAG Configuration</li> </ul>"},{"location":"usage/data-extraction/","title":"Data Extraction","text":"<p>The data extraction module uses CrewAI framework with specialized agents to extract composition-property relationships and synthesis data in a structured manner.</p>"},{"location":"usage/data-extraction/#basic-usage","title":"Basic Usage","text":"<pre><code>scanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\"\n)\n</code></pre>"},{"location":"usage/data-extraction/#parameters","title":"Parameters","text":""},{"location":"usage/data-extraction/#required-parameters","title":"Required Parameters","text":""},{"location":"usage/data-extraction/#main_extraction_keyword-str","title":"<code>main_extraction_keyword</code> (str)","text":"<p>The specific property to extract from the articles, e.g., \"d33\" for piezoelectric coefficient.</p>"},{"location":"usage/data-extraction/#optional-parameters","title":"Optional Parameters","text":""},{"location":"usage/data-extraction/#start_row-int","title":"<code>start_row</code> (int)","text":"<p>Row number from the metadata CSV file to start processing from (for resuming).</p>"},{"location":"usage/data-extraction/#num_rows-int","title":"<code>num_rows</code> (int)","text":"<p>Number of rows to process the articles for.</p>"},{"location":"usage/data-extraction/#is_test_data_preparation-bool","title":"<code>is_test_data_preparation</code> (bool)","text":"<p>Flag to indicate if test data preparation is to be performed. When True, the function will prepare test data by collecting DOIs with composition-property data.</p>"},{"location":"usage/data-extraction/#test_doi_list_file-str","title":"<code>test_doi_list_file</code> (str)","text":"<p>Path to a text file containing the test DOIs. Required if is_test_data_preparation is True. This file will store DOIs that contain composition-property data for evaluation purposes.</p>"},{"location":"usage/data-extraction/#total_test_data-int","title":"<code>total_test_data</code> (int)","text":"<p>Total number of test articles to collect when is_test_data_preparation is True. The function will stop processing once this many DOIs with composition data are found.</p>"},{"location":"usage/data-extraction/#is_only_consider_test_doi_list-bool","title":"<code>is_only_consider_test_doi_list</code> (bool)","text":"<p>Flag to indicate if only the test DOI list should be considered for processing. Should be set to True if the test_doi_list_file already contains the required number of test DOIs and you want to process only those DOIs.</p>"},{"location":"usage/data-extraction/#test_random_seed-int","title":"<code>test_random_seed</code> (int)","text":"<p>Random seed for test data preparation to ensure same DOIs are selected for reproducibility.</p>"},{"location":"usage/data-extraction/#checked_doi_list_file-str","title":"<code>checked_doi_list_file</code> (str)","text":"<p>Path to a text file containing list of DOIs which have been processed already. Used to avoid reprocessing the same papers.</p>"},{"location":"usage/data-extraction/#json_results_file-str","title":"<code>json_results_file</code> (str)","text":"<p>Path to the JSON results file where extracted data will be saved.</p>"},{"location":"usage/data-extraction/#csv_results_file-str","title":"<code>csv_results_file</code> (str)","text":"<p>Path to the CSV results file where extracted data will be saved if is_save_csv is True.</p>"},{"location":"usage/data-extraction/#is_save_csv-bool","title":"<code>is_save_csv</code> (bool)","text":"<p>Flag to indicate if the results should be saved in CSV format in addition to JSON.</p>"},{"location":"usage/data-extraction/#is_extract_synthesis_data-bool","title":"<code>is_extract_synthesis_data</code> (bool)","text":"<p>Flag to indicate if the synthesis data (methods, precursors, characterization techniques) should be extracted along with composition-property data.</p>"},{"location":"usage/data-extraction/#is_save_relevant-bool","title":"<code>is_save_relevant</code> (bool)","text":"<p>Flag to indicate if only papers with composition-property data should be saved. If True, only saves papers that contain composition data. If False, saves all processed papers regardless of whether they contain composition data.</p>"},{"location":"usage/data-extraction/#is_data_clean-bool","title":"<code>is_data_clean</code> (bool)","text":"<p>Flag to indicate if the extracted data should be cleaned after processing. When True, applies data cleaning strategies to improve data quality.</p>"},{"location":"usage/data-extraction/#cleaning_strategy-str","title":"<code>cleaning_strategy</code> (str)","text":"<p>The cleaning strategy to use when is_data_clean is True. Options are \"full\" (with periodic element validation) or \"basic\" (without periodic element validation).</p>"},{"location":"usage/data-extraction/#materials_data_identifier_query-str","title":"<code>materials_data_identifier_query</code> (str)","text":"<p>Custom query to identify if materials data is present in the paper. Must be designed to expect a 'yes/no' answer. If not provided, defaults to a query asking about material chemical composition and the corresponding property value.</p>"},{"location":"usage/data-extraction/#model-str","title":"<code>model</code> (str)","text":"<p>Name of the LLM model to use for extraction. Supports various providers (OpenAI, Anthropic, Google, etc.).</p>"},{"location":"usage/data-extraction/#api_base-str","title":"<code>api_base</code> (str)","text":"<p>Base URL for standard API endpoints when using custom API services.</p>"},{"location":"usage/data-extraction/#base_url-str","title":"<code>base_url</code> (str)","text":"<p>Base URL for the model service, used for custom or local model deployments.</p>"},{"location":"usage/data-extraction/#api_key-str","title":"<code>api_key</code> (str)","text":"<p>API key for the model service. Can also be set via environment variables for specific providers.</p>"},{"location":"usage/data-extraction/#output_log_folder-str","title":"<code>output_log_folder</code> (str)","text":"<p>Base folder path to save detailed logs for each processed paper. Logs will be saved in {output_log_folder}/{doi}/ subdirectory. Logs will be in JSON format if is_log_json is True, otherwise plain text.</p>"},{"location":"usage/data-extraction/#is_log_json-bool","title":"<code>is_log_json</code> (bool)","text":"<p>Flag to indicate if logs should be saved in JSON format. If True, logs will be structured as JSON objects. If False, logs will be plain text.</p>"},{"location":"usage/data-extraction/#task_output_folder-str","title":"<code>task_output_folder</code> (str)","text":"<p>Base folder path to save output files for each processed paper. Output files will be saved in {task_output_folder}/{doi}/ subdirectory.</p>"},{"location":"usage/data-extraction/#verbose-bool","title":"<code>verbose</code> (bool)","text":"<p>Flag to enable verbose output in the terminal during processing.</p>"},{"location":"usage/data-extraction/#temperature-float","title":"<code>temperature</code> (float)","text":"<p>Sampling temperature parameter for text generation - controls randomness. Lower values (0.0-0.3) make output more deterministic, higher values (0.7-1.0) make it more creative and diverse.</p>"},{"location":"usage/data-extraction/#top_p-float","title":"<code>top_p</code> (float)","text":"<p>Nucleus sampling parameter for text generation - controls diversity by considering only the top p probability mass. Lower values focus on high-probability tokens, higher values allow more diversity.</p>"},{"location":"usage/data-extraction/#timeout-int","title":"<code>timeout</code> (int)","text":"<p>Request timeout in seconds for API calls to the LLM.</p>"},{"location":"usage/data-extraction/#frequency_penalty-float","title":"<code>frequency_penalty</code> (float)","text":"<p>Frequency penalty for text generation to reduce repetition. Higher values discourage repetition, while lower values allow it.</p>"},{"location":"usage/data-extraction/#max_tokens-int","title":"<code>max_tokens</code> (int)","text":"<p>Maximum number of tokens for LLM completion responses.</p>"},{"location":"usage/data-extraction/#rag_db_path-str","title":"<code>rag_db_path</code> (str)","text":"<p>Custom path to the vector database used for Retrieval-Augmented Generation (RAG) tool.</p>"},{"location":"usage/data-extraction/#embedding_model-str","title":"<code>embedding_model</code> (str)","text":"<p>Name of the embedding model to use for reading vector database for RAG.</p>"},{"location":"usage/data-extraction/#rag_chat_model-str","title":"<code>rag_chat_model</code> (str)","text":"<p>Name of the chat model to use for RAG responses during extraction.</p>"},{"location":"usage/data-extraction/#rag_max_tokens-int","title":"<code>rag_max_tokens</code> (int)","text":"<p>Maximum number of tokens for RAG chat model responses.</p>"},{"location":"usage/data-extraction/#rag_top_k-int","title":"<code>rag_top_k</code> (int)","text":"<p>Number of top relevant documents to retrieve from the vector database for RAG.</p>"},{"location":"usage/data-extraction/#rag_base_url-str","title":"<code>rag_base_url</code> (str)","text":"<p>Base URL for the RAG model service, used for custom or local model deployments.</p>"},{"location":"usage/data-extraction/#flow_optional_args-dict","title":"<code>**flow_optional_args</code> (dict)","text":"<p>Optional arguments for the MaterialsFlow class to customize extraction behavior by giving additional notes, examples, and allowed methods/techniques.</p> <p>Default Values</p> <p><code>start_row</code> = 0<code>num_rows</code> = All rows<code>is_test_data_preparation</code> = False<code>test_doi_list_file</code> = None<code>total_test_data</code> = 50<code>is_only_consider_test_doi_list</code> = False<code>test_random_seed</code> = 42<code>checked_doi_list_file</code> = \"checked_dois.txt\"<code>json_results_file</code> = \"results.json\"<code>csv_results_file</code> = \"results.csv\"<code>is_extract_synthesis_data</code> = True<code>is_save_csv</code> = False<code>is_save_relevant</code> = True<code>is_data_clean</code> = False<code>cleaning_strategy</code> = \"full\"<code>materials_data_identifier_query</code> = \"Is there any material chemical composition and corresponding {main_property_keyword} value mentioned in the paper? Give one word answer. Either yes or no.\"<code>model</code> = \"gpt-4o-mini\"<code>api_base</code> = None<code>base_url</code> = None<code>api_key</code> = None<code>output_log_folder</code> = None<code>is_log_json</code> = False<code>task_output_folder</code> = None<code>verbose</code> = True<code>temperature</code> = 0.1<code>top_p</code> = 0.9<code>timeout</code> = 60<code>frequency_penalty</code> = None<code>max_tokens</code> = 2048<code>rag_db_path</code> = \"db\"<code>embedding_model</code> = \"huggingface:thellert/physbert_cased\"<code>rag_chat_model</code> = \"gpt-4o-mini\"<code>rag_max_tokens</code> = 512<code>rag_top_k</code> = 3<code>rag_base_url</code> = None<code>flow_optional_args</code> = {}</p>"},{"location":"usage/data-extraction/#extraction-agents","title":"Extraction Agents","text":"<p>The extraction process involves five specialized agents working in sequence to identify and extract relevant data from the articles based on the specified property keyword.</p>"},{"location":"usage/data-extraction/#1-materials-data-identifier-1","title":"1. Materials Data Identifier (1\ufe0f\u20e3)","text":"<p>Purpose: <code>Materials Data Identifier</code> determines if article text contains target material composition and property data.</p> <p>Default Query:</p> <pre><code>Is there any material chemical composition and corresponding {main_property_keyword} value mentioned in the paper? Give one word answer. Either yes or no.\n</code></pre> <p>Output: Yes/No</p> <p>Used Tools:</p> <p>RAG Tool</p> <p>Retrieval-Augmented Generation (RAG) is used to query the vector database of property-mentioned articles which were created during article processing to provide relevant context to the LLM for accurate identification.</p>"},{"location":"usage/data-extraction/#2-composition-property-data-extractor-2-composition-property-data-formatter-3","title":"2. Composition-Property Data Extractor (2\ufe0f\u20e3) &amp; Composition-Property Data Formatter (3\ufe0f\u20e3)","text":"<p>Purpose: <code>Composition-Property Data Extractor</code> extracts compositions and property values along with their corresponding unit and material family from the article text and finally <code>Composition-Property Data Formatter</code> formats the extracted data into structured JSON similar to the following example.</p> <p>Output Format:</p> <pre><code>{\n  \"composition_data\": {\n    \"compositions_property_values\": {\n      \"Eu1.90Dy0.10Ge2O7\": 0.66,\n      \"Eu1.90La0.10Ge2O7\": 0.36,\n      \"Eu1.90Ho0.10Ge2O7\": 0.62\n    },\n    \"property_unit\": \"pC/N\",\n    \"family\": \"RE2B2O7\"\n  }\n}\n</code></pre> <p>Used Tools:</p> <p>MaterialParser Tool</p> <p>MaterialParser Tool is used by the <code>Composition-Property Data Formatter</code> agent. Material-parser is a deep learning model, developed by Foppiano et al., specifically designed for parsing chemical compositions with multiple fractions denoted as variables e.g., \\(Na_{(1-x)}Li_xTiO_3\\) where x = 0.1, 0.3, and 0.4. This tool incorporates the material-parser model to accurately extract and standardize complex chemical compositions with variable fractions into the final compositions. For e.g., the previous example would be parsed into three distinct compositions: Na(0.9)Li(0.1)TiO3, Na(0.7)Li(0.3)TiO3, and Na(0.6)Li(0.4)TiO3.</p>"},{"location":"usage/data-extraction/#3-synthesis-data-extractor-4-synthesis-data-formatter-5","title":"3. Synthesis Data Extractor (4\ufe0f\u20e3) &amp; Synthesis Data Formatter (5\ufe0f\u20e3)","text":"<p>Purpose: <code>Synthesis Data Extractor</code> extracts synthesis related data including method, precursors, steps, and characterization techniques from the article text and finally <code>Synthesis Data Formatter</code> formats the extracted data into structured JSON similar to the following example.</p> <p>Output Format:</p> <pre><code>{\n  \"synthesis_data\": {\n    \"method\": \"solid-state reaction\",\n    \"precursors\": [\"Eu2O3\", \"GeO2\", \"Dy2O3\", \"La2O3\", \"Ho2O3\"],\n    \"steps\": [\n      \"Starting materials Eu2O3, GeO2, Dy2O3, La2O3 and Ho2O3 were combined in stoichiometric ratios with each dopant at 5 mol%.\",\n      \"Samples were first heated at 800\u00b0C for 2 hours in pure alumina crucibles under open atmosphere.\",\n      \"Materials were then heated to 1150\u00b0C for 10 hours followed by slow cooling.\",\n      \"Resulting materials were ground into powder for further characterization.\",\n      \"Ceramic discs were formed from obtained powder materials with 1 mm thickness and 10 mm diameter.\",\n      \"Ceramic discs were compacted using uniaxial pressing under 250 MPa pressure with 2 wt% of 5 wt% PVA aqueous solution as binder.\",\n      \"Samples were heated at 600\u00b0C for 30 minutes to eliminate organic additives.\",\n      \"Sintering was conducted at 1400\u00b0C for 4 hours.\",\n      \"Silver paste was applied to disc surfaces and fired at 650\u00b0C for 1 hour to form surface electrodes.\",\n      \"Electric field of 9-18 kV/mm was applied in silicon oil bath at 120\u00b0C for 30 minutes followed by 24-hour aging.\"\n    ],\n    \"characterization_techniques\": [\n      \"TG/DTA\",\n      \"XRD\",\n      \"SEM\",\n      \"EDX\",\n      \"photoluminescence spectroscopy\",\n      \"LCR meter\",\n      \"d33 meter\"\n    ]\n  }\n}\n</code></pre>"},{"location":"usage/data-extraction/#extraction-workflow-diagram","title":"Extraction Workflow Diagram","text":""},{"location":"usage/data-extraction/#flow-optional-arguments","title":"Flow Optional Arguments","text":"<p>Customize extraction behavior by providing additional examples, notes, and allowed methods/techniques via <code>flow_optional_args</code> dictionary where values are formatted strings or lists of strings.:</p> <pre><code>flow_optional_args = {\n    \"expected_composition_property_example\": f\"\"\"\n    {{\n      \"compositions\":\n      {{\n        \"Ba0.99Ca0.01Ti0.68Zr0.32O3\": 375,\n        \"Ba0.98Ca0.02Ti0.78Zr0.22O3\": 350,\n        \"Ba0.97Ca0.03Ti0.88Zr0.12O3\": 325,\n        \"Ba0.96Ca0.04Ti0.98Zr0.02O3\": 300\n      }},\n      \"property_unit\": \"pC/N\",\n      \"family\": \"BaTiO3\"\n    }}\"\"\",\n    expected_variable_composition_property_example: f\"\"\"\n    {{\n    \"compositions\":\n      {{\n        \"0.5NaNbO3\": 375,\n        \"(1-x)Na0.2K2(x)Bi0.5TiO3 - (y)NaNbO3 where x=0, y=0.5\": 350,\n        \"(1-x)Na0.2K2(x)Bi0.5TiO3 - (y)NaNbO3 where x=0.1, y=0.4\": 325,\n        \"(1-x)Na0.2K2(x)Bi0.5TiO3 - (y)NaNbO3 where x=0.2, y=0.3\": 375,\n        \"(1-x)Na0.2K2(x)Bi0.5TiO3 - (y)NaNbO3 where x=0.3, y=0.1\": 425\n      }},\n      \"property_unit\": \"pC/N\",\n      \"family\": \"NaNbO3\"\n    }}\"\"\"\n    \"composition_property_extraction_task_notes\": [\n        \"Write complete chemical formulas\",\n        \"Include crystal structure if mentioned\",\n        \"Note measurement conditions\"\n    ],\n    \"synthesis_extraction_task_notes\": [\n        \"Use short method names\",\n        \"List all precursors\",\n        \"Include processing temperatures\"\n    ],\n    \"allowed_synthesis_methods\": [\n        \"Solid-state reaction\",\n        \"Sol-gel\",\n        \"Hydrothermal\",\n        \"Chemical vapor deposition\"\n    ],\n    \"allowed_characterization_techniques\": [\n        \"XRD\",\n        \"SEM\",\n        \"TEM\",\n        \"FTIR\"\n    ]\n}\n\nscanner.extract_composition_property_data(\n    main_extraction_keyword=\"d33\",\n    **flow_optional_args\n)\n</code></pre> <p>Allowed Entities for **flow_optional_args</p> <p><code>expected_composition_property_example</code> (str): Example of expected composition-property JSON format for compositions and target properties. The string should be properly formatted similar to the example provided above. <code>expected_variable_composition_property_example</code> (str): Example of expected variable composition-property JSON format for compositions with variable components and target properties. The string should be properly formatted similar to the example provided above. <code>composition_property_extraction_agent_notes</code> (list): Notes for the extraction agent to consider when performing the extraction. <code>composition_property_extraction_task_notes</code> (list): Notes for the extraction task to consider when performing the extraction by the composition-property data extraction agent. <code>composition_property_formatting_agent_notes</code> (list): Notes for the formatting agent to consider when formatting the extracted data. <code>composition_property_formatting_task_notes</code> (list): Notes for the formatting task to consider when formatting the extracted composition-property data by the composition-property data formatting agent. <code>synthesis_extraction_agent_notes</code> (list): Notes for the synthesis data extraction agent to consider when performing the extraction. <code>synthesis_extraction_task_notes</code> (list): Notes for the synthesis data extraction task to consider when performing the extraction by the synthesis data extraction agent. <code>synthesis_formatting_agent_notes</code> (list): Notes for the synthesis data formatting agent to consider when formatting the extracted data. <code>synthesis_formatting_task_notes</code> (list): Notes for the synthesis data formatting task to consider when formatting the extracted synthesis data by the synthesis data formatting agent. <code>allowed_synthesis_methods</code> (list): List of allowed synthesis methods to guide the extraction process. If specified, only these methods should be considered during extraction. <code>allowed_characterization_techniques</code> (list): List of allowed characterization techniques to guide the extraction process. If specified, only these techniques should be considered during extraction.</p>"},{"location":"usage/data-extraction/#article-specific-metadata-collection","title":"Article Specific Metadata Collection","text":"<p>Once the data extraction is complete, article-specific metadata such as DOI, title, authors, journal, publication year, publisher, open-access related information, and keywords are collected and included in the final output JSON/CSV files along with the extracted data using Scopus API or OA.Works API.</p> <pre><code>{\n  \"article_metadata\": {\n    \"doi\": \"10.1016/j.apradiso.2024.111655\",\n    \"title\": \"Novel smart materials with high curie temperatures: Eu1.90Dy0.10Ge2O7, Eu1.90La0.10Ge2O7 and Eu1.90Ho0.10Ge2O7\",\n    \"journal\": \"Applied Radiation and Isotopes\",\n    \"year\": \"2025\",\n    \"isOpenAccess\": false,\n    \"authors\": [\n      {\n        \"name\": \"Esra \u00d6zt\u00fcrk\",\n        \"affiliation_id\": \"60020484\",\n        \"affiliation_name\": \"Hacettepe \u00dcniversitesi\",\n        \"affiliation_country\": \"Turkey\"\n      },\n      {\n        \"name\": \"Nilgun Kalaycioglu Ozpozan\",\n        \"affiliation_id\": \"122321412\",\n        \"affiliation_name\": \"Erciyes \u00dcn.\",\n        \"affiliation_country\": \"T\u00fcrkiye\"\n      },\n      {\n        \"name\": \"Volkan Kalem\",\n        \"affiliation_id\": \"60193845\",\n        \"affiliation_name\": \"Konya Technical University\",\n        \"affiliation_country\": \"Turkey\"\n      }\n    ],\n    \"keywords\": [\"Curie\"]\n  }\n}\n</code></pre>"},{"location":"usage/data-extraction/#final-output-example","title":"Final Output Example","text":"<pre><code>{\n  \"10.1016/j.apradiso.2024.111655\": {\n    \"composition_data\": {\n      \"compositions_property_values\": {\n        \"Eu1.90Dy0.10Ge2O7\": 0.66,\n        \"Eu1.90La0.10Ge2O7\": 0.36,\n        \"Eu1.90Ho0.10Ge2O7\": 0.62\n      },\n      \"property_unit\": \"pC/N\",\n      \"family\": \"RE2B2O7\"\n    },\n    \"synthesis_data\": {\n      \"method\": \"solid-state reaction\",\n      \"precursors\": [\"Eu2O3\", \"GeO2\", \"Dy2O3\", \"La2O3\", \"Ho2O3\"],\n      \"steps\": [\n        \"Starting materials Eu2O3, GeO2, Dy2O3, La2O3 and Ho2O3 were combined in stoichiometric ratios with each dopant at 5 mol%.\",\n        \"Samples were first heated at 800\u00b0C for 2 hours in pure alumina crucibles under open atmosphere.\",\n        \"Materials were then heated to 1150\u00b0C for 10 hours followed by slow cooling.\",\n        \"Resulting materials were ground into powder for further characterization.\",\n        \"Ceramic discs were formed from obtained powder materials with 1 mm thickness and 10 mm diameter.\",\n        \"Ceramic discs were compacted using uniaxial pressing under 250 MPa pressure with 2 wt% of 5 wt% PVA aqueous solution as binder.\",\n        \"Samples were heated at 600\u00b0C for 30 minutes to eliminate organic additives.\",\n        \"Sintering was conducted at 1400\u00b0C for 4 hours.\",\n        \"Silver paste was applied to disc surfaces and fired at 650\u00b0C for 1 hour to form surface electrodes.\",\n        \"Electric field of 9-18 kV/mm was applied in silicon oil bath at 120\u00b0C for 30 minutes followed by 24-hour aging.\"\n      ],\n      \"characterization_techniques\": [\n        \"TG/DTA\",\n        \"XRD\",\n        \"SEM\",\n        \"EDX\",\n        \"photoluminescence spectroscopy\",\n        \"LCR meter\",\n        \"d33 meter\"\n      ]\n    },\n    \"article_metadata\": {\n      \"doi\": \"10.1016/j.apradiso.2024.111655\",\n      \"title\": \"Novel smart materials with high curie temperatures: Eu1.90Dy0.10Ge2O7, Eu1.90La0.10Ge2O7 and Eu1.90Ho0.10Ge2O7\",\n      \"journal\": \"Applied Radiation and Isotopes\",\n      \"year\": \"2025\",\n      \"isOpenAccess\": false,\n      \"authors\": [\n        {\n          \"name\": \"Esra \u00d6zt\u00fcrk\",\n          \"affiliation_id\": \"60020484\",\n          \"affiliation_name\": \"Hacettepe \u00dcniversitesi\",\n          \"affiliation_country\": \"Turkey\"\n        },\n        {\n          \"name\": \"Nilgun Kalaycioglu Ozpozan\",\n          \"affiliation_id\": \"122321412\",\n          \"affiliation_name\": \"Erciyes \u00dcn.\",\n          \"affiliation_country\": \"T\u00fcrkiye\"\n        },\n        {\n          \"name\": \"Volkan Kalem\",\n          \"affiliation_id\": \"60193845\",\n          \"affiliation_name\": \"Konya Technical University\",\n          \"affiliation_country\": \"Turkey\"\n        }\n      ],\n      \"keywords\": [\"Curie\"]\n    }\n  }\n  // More articles...\n}\n</code></pre>"},{"location":"usage/data-extraction/#next-steps","title":"Next Steps","text":"<ul> <li>Learn about Evaluation</li> <li>Explore Visualization</li> <li>Configure Advanced RAG</li> </ul>"},{"location":"usage/metadata-collection/","title":"Metadata Collection","text":"<p>The metadata collection module helps you find and filter metadata for relevant scientific articles from Scopus database using Scopus Search API based on query property keywords.</p>"},{"location":"usage/metadata-collection/#basic-usage","title":"Basic Usage","text":"<pre><code>from comproscanner import ComProScanner\n\n# Initialize scanner\nscanner = ComProScanner(main_property_keyword=\"piezoelectric\")\n\n# Collect metadata\nscanner.collect_metadata()\n</code></pre>"},{"location":"usage/metadata-collection/#parameters","title":"Parameters","text":""},{"location":"usage/metadata-collection/#required-parameters","title":"Required Parameters","text":""},{"location":"usage/metadata-collection/#main_property_keyword-str","title":"<code>main_property_keyword</code> (str)","text":"<p>The main property of interest for your research. This keyword will be used to generate search queries for metadata collection.</p>"},{"location":"usage/metadata-collection/#optional-parameters","title":"Optional Parameters","text":""},{"location":"usage/metadata-collection/#base_queries-list","title":"<code>base_queries</code> (list)","text":"<p>List of base search queries related to the main property. If not provided, the main property keyword will be used as the sole base query.</p>"},{"location":"usage/metadata-collection/#extra_queries-list","title":"<code>extra_queries</code> (list)","text":"<p>List of additional search queries to expand the search scope.</p>"},{"location":"usage/metadata-collection/#start_year-int","title":"<code>start_year</code> (int)","text":"<p>Starting publication year for filtering articles. It must be bigger than <code>end_year</code> as the search is performed backwards in time.</p>"},{"location":"usage/metadata-collection/#end_year-int","title":"<code>end_year</code> (int)","text":"<p>Ending publication year for filtering articles.</p> <p>Default Values</p> <p><code>base_queries</code> = None<code>extra_queries</code> = None<code>start_year</code> = current year<code>end_year</code> = current year - 2</p>"},{"location":"usage/metadata-collection/#advanced-examples","title":"Advanced Examples","text":""},{"location":"usage/metadata-collection/#example-1-broad-property-search","title":"Example 1: Broad Property Search","text":"<pre><code>scanner = ComProScanner(main_property_keyword=\"magnetic\")\n\nscanner.collect_metadata(\n    base_queries=[\n        \"magnetic\",\n        \"magnetism\",\n        \"ferromagnetic\",\n        \"antiferromagnetic\"\n    ],\n    extra_queries=[\n        \"materials\",\n        \"thin films\",\n        \"nanoparticles\"\n    ]\n)\n</code></pre>"},{"location":"usage/metadata-collection/#example-2-recent-publications-only","title":"Example 2: Recent Publications Only","text":"<pre><code>from datetime import datetime\n\ncurrent_year = datetime.now().year\n\nscanner.collect_metadata(\n    base_queries=[\"superconductivity\"],\n    start_year=current_year,\n    end_year=current_year - 1  # Last year only\n)\n</code></pre>"},{"location":"usage/metadata-collection/#output-format","title":"Output Format","text":"<p>Similar to the following example, metadata for all relevant articles is stored in a CSV file:</p> piezoelectric_metadata.csv<pre><code>doi,publication_name,issn,scopus_id,article_title,article_type,metadata_publisher,general_publisher\n10.1016/j.seppur.2024.130955,Separation and Purification Technology,13835866,SCOPUS_ID:85211235836,Multistage gradient crystallization study towards lithium carbonate crystal growth,Article,Elsevier B.V.,elsevier\n// More articles...\n</code></pre>"},{"location":"usage/metadata-collection/#next-steps","title":"Next Steps","text":"<ul> <li>Learn about Article Processing</li> <li>Explore RAG configuration</li> </ul>"},{"location":"usage/evaluation/agentic/","title":"Agentic Evaluation","text":"<p>This method leverages the reasoning capabilities of LLMs to evaluate extraction quality with human-like understanding.</p>"},{"location":"usage/evaluation/agentic/#basic-usage","title":"Basic Usage","text":"<pre><code>from comproscanner import evaluate_agentic\n\nresults = evaluate_agentic(\n    ground_truth_file=\"ground_truth.json\",\n    test_data_file=\"extracted_results.json\",\n    output_file=\"agentic_eval.json\"\n)\n</code></pre>"},{"location":"usage/evaluation/agentic/#parameters","title":"Parameters","text":""},{"location":"usage/evaluation/agentic/#required-parameters","title":"Required Parameters","text":""},{"location":"usage/evaluation/agentic/#ground_truth_file-str","title":"<code>ground_truth_file</code> (str)","text":"<p>Path to ground truth data created by human experts.</p>"},{"location":"usage/evaluation/agentic/#test_data_file-str","title":"<code>test_data_file</code> (str)","text":"<p>Path to extracted results to be evaluated.</p>"},{"location":"usage/evaluation/agentic/#optional-parameters","title":"Optional Parameters","text":""},{"location":"usage/evaluation/agentic/#weights-dict","title":"<code>weights</code> (dict)","text":"<p>Dictionary specifying weights for each metric during evaluation for ensuring scoring based on importance. The total should sum to 1.0.</p>"},{"location":"usage/evaluation/agentic/#output_file-str","title":"<code>output_file</code> (str)","text":"<p>Path to save the evaluation results.</p>"},{"location":"usage/evaluation/agentic/#extraction_agent_model_name-str","title":"<code>extraction_agent_model_name</code> (str)","text":"<p>Name of the LLM model used for data extraction (e.g., \"gpt-4o-mini\").</p>"},{"location":"usage/evaluation/agentic/#is_synthesis_evaluation-bool","title":"<code>is_synthesis_evaluation</code> (bool)","text":"<p>Whether to evaluate synthesis-related information.</p>"},{"location":"usage/evaluation/agentic/#llm-llm","title":"<code>llm</code> (LLM)","text":"<p>An instance of the LiteLLM class. Read more about LiteLLM instance from CrewAI here.</p> <p>Default Values</p> <p><code>weights</code> = {     \"compositions_property_values\": 0.3,     \"property_unit\": 0.1,     \"family\": 0.1,     \"method\": 0.1,     \"precursors\": 0.15,     \"characterization_techniques\": 0.15,     \"steps\": 0.1 }<code>output_file</code> = \"agentic_evaluation_result.json\"<code>extraction_agent_model_name</code> = \"gpt-4o-mini\"<code>is_synthesis_evaluation</code> = True<code>llm</code> = LLM(model=\"o3-mini\")</p>"},{"location":"usage/evaluation/agentic/#how-it-works","title":"How It Works","text":"<pre><code>graph TB\n    A[Ground Truth] --&gt; C[LLM Agent]\n    B[Test Data] --&gt; C\n    C --&gt; D[Contextual Analysis]\n    D --&gt; E[Reasoning]\n    E --&gt; F[Scoring]\n    F --&gt; G[Evaluation Results]</code></pre>"},{"location":"usage/evaluation/agentic/#custom-llm","title":"Custom LLM","text":"<pre><code>from comproscanner import evaluate_agentic\nfrom crewai import LLM\n\n# Use GPT-4\ngpt4_llm = LLM(\n    model=\"gpt-4-turbo\",\n    temperature=0.5,\n    max_tokens=4096\n)\n\nresults = evaluate_agentic(\n    ground_truth_file=\"ground_truth.json\",\n    test_data_file=\"test_data.json\",\n    llm=gpt4_llm\n)\n</code></pre>"},{"location":"usage/evaluation/agentic/#output-format","title":"Output Format","text":"<pre><code>{\n  \"agent_model_name\": \"DeepSeek-V3-0324\",\n  \"overall_accuracy\": 0.8238965626040629,\n  \"overall_composition_accuracy\": 0.8998672619047621,\n  \"overall_synthesis_accuracy\": 0.7479258633033636,\n  \"total_items\": 100,\n  \"absolute_classification_metrics\": {\n    \"true_positives\": 1763,\n    \"false_positives\": 326,\n    \"false_negatives\": 352,\n    \"precision\": 0.8439444710387746,\n    \"recall\": 0.8335697399527187,\n    \"f1_score\": 0.8387250237868696\n  },\n  \"normalized_classification_metrics\": {\n    \"true_positives\": 77.77361988011987,\n    \"false_positives\": 31.98932808857808,\n    \"false_negatives\": 14.577932609057608,\n    \"precision\": 0.7085598676003058,\n    \"recall\": 0.8421474007081151,\n    \"f1_score\": 0.7695996052131786\n  },\n  \"item_results\": {\n    \"10.1016/j.jeurceramsoc.2025.117193\": {\n      \"overall_match\": true,\n      \"field_scores\": {\n        \"composition_data\": 1.0,\n        \"synthesis_data\": 0.982\n      },\n      \"overall_score\": 0.991,\n      \"absolute_classification_metrics\": {\n        \"true_positives\": 23,\n        \"false_positives\": 0,\n        \"false_negatives\": 0,\n        \"precision\": 1.0,\n        \"recall\": 1.0,\n        \"f1_score\": 1.0\n      },\n      \"normalized_classification_metrics\": {\n        \"true_positives\": 0.9819999999999998,\n        \"false_positives\": 0.009000000000000003,\n        \"false_negatives\": 0.009000000000000003,\n        \"precision\": 0.9909182643794148,\n        \"recall\": 0.9909182643794148,\n        \"f1_score\": 0.9909182643794148\n      },\n      \"details\": {\n        \"composition_data\": {\n          \"property_unit\": {\n            \"match_value\": 1,\n            \"reference\": \"pC/N\",\n            \"test\": \"pC/N\"\n          },\n          \"family\": {\n            \"match_value\": 1,\n            \"reference\": \"PbNb2O6\",\n            \"test\": \"PbNb2O6-based\"\n          },\n          \"compositions_property_values\": {\n            \"reference\": {\n              \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\": 44,\n              \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\": 54,\n              \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\": 93,\n              \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\": 141\n            },\n            \"test\": {\n              \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\": 44,\n              \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\": 54,\n              \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\": 93,\n              \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\": 141\n            },\n            \"key_matches\": [\n              {\n                \"reference_key\": \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\",\n                \"test_key\": \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_key\": \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\",\n                \"test_key\": \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_key\": \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\",\n                \"test_key\": \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_key\": \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\",\n                \"test_key\": \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\",\n                \"match_value\": 1\n              }\n            ],\n            \"value_matches\": [\n              {\n                \"key\": \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\",\n                \"reference_value\": 44,\n                \"test_value\": 44,\n                \"match_value\": 1\n              },\n              {\n                \"key\": \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\",\n                \"reference_value\": 54,\n                \"test_value\": 54,\n                \"match_value\": 1\n              },\n              {\n                \"key\": \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\",\n                \"reference_value\": 93,\n                \"test_value\": 93,\n                \"match_value\": 1\n              },\n              {\n                \"key\": \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\",\n                \"reference_value\": 141,\n                \"test_value\": 141,\n                \"match_value\": 1\n              }\n            ],\n            \"pair_matches\": [\n              {\n                \"reference_pair\": {\n                  \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\": 44\n                },\n                \"test_pair\": {\n                  \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\": 44\n                },\n                \"match_value\": 1\n              },\n              {\n                \"reference_pair\": {\n                  \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\": 54\n                },\n                \"test_pair\": {\n                  \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\": 54\n                },\n                \"match_value\": 1\n              },\n              {\n                \"reference_pair\": {\n                  \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\": 93\n                },\n                \"test_pair\": {\n                  \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\": 93\n                },\n                \"match_value\": 1\n              },\n              {\n                \"reference_pair\": {\n                  \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\": 141\n                },\n                \"test_pair\": {\n                  \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\": 141\n                },\n                \"match_value\": 1\n              }\n            ],\n            \"total_ground_truth_keys\": 4,\n            \"total_match\": 4,\n            \"missing_keys\": [],\n            \"extra_keys\": [],\n            \"key_match_ratio\": 1.0,\n            \"value_match_ratio\": 1.0,\n            \"pair_match_ratio\": 1.0,\n            \"overall_match_ratio\": 1.0,\n            \"similarity_score\": 1.0,\n            \"match\": true\n          }\n        },\n        \"synthesis_data\": {\n          \"method\": {\n            \"match_value\": 1,\n            \"reference\": \"solid-state reaction\",\n            \"test\": \"solid-state reaction\",\n            \"similarity\": 1.0,\n            \"match\": true\n          },\n          \"precursors\": {\n            \"reference\": [\"PbO\", \"K2CO3\", \"Nb2O5\", \"Ta2O5\"],\n            \"test\": [\"PbO\", \"K2CO3\", \"Nb2O5\", \"Ta2O5\"],\n            \"matches\": [\n              {\n                \"reference_item\": \"PbO\",\n                \"test_item\": \"PbO\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_item\": \"K2CO3\",\n                \"test_item\": \"K2CO3\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_item\": \"Nb2O5\",\n                \"test_item\": \"Nb2O5\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_item\": \"Ta2O5\",\n                \"test_item\": \"Ta2O5\",\n                \"match_value\": 1\n              }\n            ],\n            \"total_ground_truth_items\": 4,\n            \"total_match\": 4,\n            \"missing_items\": [],\n            \"extra_items\": [],\n            \"similarity\": 1.0,\n            \"match\": true\n          },\n          \"characterization_techniques\": {\n            \"reference\": [\n              \"XRD\",\n              \"SEM\",\n              \"EDS\",\n              \"XPS\",\n              \"Raman spectroscopy\",\n              \"d33 tester\",\n              \"LCR meter\"\n            ],\n            \"test\": [\n              \"XRD\",\n              \"SEM\",\n              \"EDS\",\n              \"XPS\",\n              \"Raman spectroscopy\",\n              \"Quasi-static d33 tester\",\n              \"LCR meter\"\n            ],\n            \"matches\": [\n              {\n                \"reference_item\": \"XRD\",\n                \"test_item\": \"XRD\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_item\": \"SEM\",\n                \"test_item\": \"SEM\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_item\": \"EDS\",\n                \"test_item\": \"EDS\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_item\": \"XPS\",\n                \"test_item\": \"XPS\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_item\": \"Raman spectroscopy\",\n                \"test_item\": \"Raman spectroscopy\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_item\": \"d33 tester\",\n                \"test_item\": \"Quasi-static d33 tester\",\n                \"match_value\": 1\n              },\n              {\n                \"reference_item\": \"LCR meter\",\n                \"test_item\": \"LCR meter\",\n                \"match_value\": 1\n              }\n            ],\n            \"total_ground_truth_items\": 7,\n            \"total_match\": 7,\n            \"missing_items\": [],\n            \"extra_items\": [],\n            \"similarity\": 1.0,\n            \"match\": true\n          },\n          \"steps\": {\n            \"match_value\": 0.82,\n            \"reference_steps\": [\n              \"Raw materials were weighed according to stoichiometric ratio and ball-milled with zirconia balls in nylon jars for 12 hours.\",\n              \"Additional 2 wt% PbO was introduced for compensating volatilization during sintering process.\",\n              \"After drying at 120\\u00b0C, powders were calcined at 900\\u00b0C for 4 hours and re-milled for another 6 hours.\",\n              \"Dried powders were mixed with polyvinyl alcohol binder and sieved through screen mesh.\",\n              \"Particles were pressed into pellets with diameter of 12 mm and thickness around 1.2 mm under uniaxial pressure of 15 MPa.\",\n              \"Green pellets were fired at 500\\u00b0C for 2 hours for binder burn-out.\",\n              \"Specimens were sintered at 1190-1250\\u00b0C for 1 hour.\",\n              \"Cooling process was controlled at 3\\u00b0C/min till 600\\u00b0C to prevent ceramics from cracking.\",\n              \"Natural cooling without quenching was performed below 600\\u00b0C.\",\n              \"Sintered pellets were coated with silver paste on both surfaces and dried at 120\\u00b0C for 30 minutes.\",\n              \"Samples were polarized in silicon oil at 150\\u00b0C with DC electric field up to 4 kV/mm for 30 minutes.\"\n            ],\n            \"test_steps\": [\n              \"Weigh raw materials according to stoichiometric ratio\",\n              \"Ball-mill with zirconia balls in nylon jars for 12 h\",\n              \"Add 2 wt% PbO to compensate volatilization\",\n              \"Dry at 120 \\u00b0C\",\n              \"Calcinate at 900 \\u00b0C for 4 h\",\n              \"Re-mill for 6 h\",\n              \"Mix with PVA binder and sieve\",\n              \"Press into pellets (12 mm diameter, 1.2 mm thickness) under 15 MPa\",\n              \"Fire at 500 \\u00b0C for 2 h for binder burn-out\",\n              \"Sinter at 1190-1250 \\u00b0C for 1 h\",\n              \"Control cooling at 3 \\u00b0C/min till 600 \\u00b0C\",\n              \"Natural cooling below 600 \\u00b0C\"\n            ],\n            \"steps_match\": \"true\"\n          }\n        }\n      }\n    }\n  }\n  // More items...\n}\n</code></pre>"},{"location":"usage/evaluation/agentic/#next-steps","title":"Next Steps","text":"<ul> <li>Compare with Semantic Evaluation</li> <li>Visualize results with Evaluation Visualizer</li> <li>Learn about RAG Configuration</li> </ul>"},{"location":"usage/evaluation/overview/","title":"Evaluation Overview","text":"<p>ComProScanner provides both semantic and agentic methods for evaluating extraction quality. The following sections outline the approaches, advantages, and use cases for each method.</p>"},{"location":"usage/evaluation/overview/#evaluation-methods","title":"Evaluation Methods","text":""},{"location":"usage/evaluation/overview/#semantic-evaluation","title":"Semantic Evaluation","text":"<p>Approach: Uses embedding models to compute similarity between extracted and ground truth data.</p> <p>Advantages:</p> <ul> <li>Fast and cost-effective</li> <li>Physics-aware with PhysBERT embeddings (default)</li> <li>Consistent results</li> </ul> <p>Best For:</p> <ul> <li>Quick quality assessment</li> <li>Large-scale evaluations</li> <li>Budget-conscious projects</li> </ul>"},{"location":"usage/evaluation/overview/#agentic-evaluation","title":"Agentic Evaluation","text":"<p>Approach: Uses specialized LLM agents to evaluate extraction quality with nuanced understanding.</p> <p>Advantages:</p> <ul> <li>More accurate assessment</li> <li>Better context understanding</li> <li>Handles edge cases</li> </ul> <p>Best For:</p> <ul> <li>High-stakes evaluations</li> <li>Complex compositions</li> <li>Detailed analysis</li> </ul>"},{"location":"usage/evaluation/overview/#comparison","title":"Comparison","text":"Feature Semantic Agentic Speed Fast Slower Cost Low Higher Accuracy Good Excellent Context Understanding Limited Advanced Reproducibility High Moderate"},{"location":"usage/evaluation/overview/#evaluation-metrics","title":"Evaluation Metrics","text":"<p>Both methods provide:</p> <ul> <li>Overall Accuracy: Combined accuracy across both composition accuracy and synthesis accuracy</li> <li>Composition Accuracy: Custom weight-based accuracy of extracted composition-property based data (compositions_property_values, property_unit, family)</li> <li>Synthesis Accuracy: Custom weight-based accuracy of synthesis related data (method, precursors, steps, characterization_techniques)</li> <li>Classification Metrics: Standard Precision/Recall/F1 metrics for detailed performance analysis</li> <li>Normalized Classification Metrics: Classification metrics normalized to ensure an equitable comparison between articles with significant disparities in the quantity of extractable information.</li> </ul> <p>To read more about the evaluation metrics, please refer the journal article here.</p>"},{"location":"usage/evaluation/overview/#quick-start","title":"Quick Start","text":""},{"location":"usage/evaluation/overview/#semantic-evaluation_1","title":"Semantic Evaluation","text":"<pre><code>from comproscanner import evaluate_semantic\n\nresults = evaluate_semantic(\n    ground_truth_file=\"ground_truth.json\",\n    test_data_file=\"extracted_results.json\",\n    output_file=\"semantic_eval.json\"\n)\n</code></pre>"},{"location":"usage/evaluation/overview/#agentic-evaluation_1","title":"Agentic Evaluation","text":"<pre><code>from comproscanner import evaluate_agentic\n\nresults = evaluate_agentic(\n    ground_truth_file=\"ground_truth.json\",\n    test_data_file=\"extracted_results.json\",\n    output_file=\"agentic_eval.json\"\n)\n</code></pre>"},{"location":"usage/evaluation/overview/#detailed-guides","title":"Detailed Guides","text":"<ul> <li>Semantic Evaluation - Semantic-based evaluation</li> <li>Agentic Evaluation - LLM agent-based evaluation</li> </ul>"},{"location":"usage/evaluation/overview/#next-steps","title":"Next Steps","text":"<ul> <li>Continue to Semantic Evaluation or Agentic Evaluation</li> <li>Explore Visualization</li> <li>Learn about RAG Configuration</li> </ul>"},{"location":"usage/evaluation/semantic/","title":"Semantic Evaluation","text":"<p>This method computes semantic similarity between extracted data and ground truth using specialized embedding models like PhysBERT to assess extraction quality.</p>"},{"location":"usage/evaluation/semantic/#basic-usage","title":"Basic Usage","text":"<pre><code>from comproscanner import evaluate_semantic\n\nresults = evaluate_semantic(\n    ground_truth_file=\"ground_truth.json\",\n    test_data_file=\"extracted_results.json\",\n    output_file=\"evaluation_results.json\"\n)\n</code></pre>"},{"location":"usage/evaluation/semantic/#parameters","title":"Parameters","text":""},{"location":"usage/evaluation/semantic/#required-parameters","title":"Required Parameters","text":""},{"location":"usage/evaluation/semantic/#ground_truth_file-str","title":"<code>ground_truth_file</code> (str)","text":"<p>Path to ground truth data created by human experts.</p>"},{"location":"usage/evaluation/semantic/#test_data_file-str","title":"<code>test_data_file</code> (str)","text":"<p>Path to extracted results to be evaluated.</p>"},{"location":"usage/evaluation/semantic/#optional-parameters","title":"Optional Parameters","text":""},{"location":"usage/evaluation/semantic/#weights-dict","title":"<code>weights</code> (dict)","text":"<p>Dictionary specifying weights for each metric during evaluation for ensuring scoring based on importance. The total should sum to 1.0.</p>"},{"location":"usage/evaluation/semantic/#output_file-str","title":"<code>output_file</code> (str)","text":"<p>Path to save the evaluation results.</p>"},{"location":"usage/evaluation/semantic/#extraction_agent_model_name-str","title":"<code>extraction_agent_model_name</code> (str)","text":"<p>Name of the LLM model used for data extraction (e.g., \"gpt-4o-mini\").</p>"},{"location":"usage/evaluation/semantic/#is_synthesis_evaluation-bool","title":"<code>is_synthesis_evaluation</code> (bool)","text":"<p>Whether to evaluate synthesis-related information.</p>"},{"location":"usage/evaluation/semantic/#use_semantic_model-bool","title":"<code>use_semantic_model</code> (bool)","text":"<p>Whether to use semantic embedding models for evaluation. If False, will use the fallback SequenceMatcher class from difflib library.</p>"},{"location":"usage/evaluation/semantic/#primary_model_name-str","title":"<code>primary_model_name</code> (str)","text":"<p>Name of the primary model which will be used for semantic evaluation.</p>"},{"location":"usage/evaluation/semantic/#fallback_model_name-str","title":"<code>fallback_model_name</code> (str)","text":"<p>Name of the fallback model which will be used if the primary model fails for semantic evaluation.</p>"},{"location":"usage/evaluation/semantic/#similarity_thresholds-dict","title":"<code>similarity_thresholds</code> (dict)","text":"<p>Dictionary specifying similarity thresholds for each metric when using semantic evaluation.</p> <p>Default Values</p> <p><code>weights</code> = {     \"compositions_property_values\": 0.3,     \"property_unit\": 0.1,     \"family\": 0.1,     \"method\": 0.1,     \"precursors\": 0.15,     \"characterization_techniques\": 0.15,     \"steps\": 0.1 }<code>output_file</code> = \"semantic_evaluation_result.json\"<code>extraction_agent_model_name</code> = \"gpt-4o-mini\"<code>is_synthesis_evaluation</code> = True<code>use_semantic_model</code> = True<code>primary_model_name</code> = \"huggingface:thellert/physbert_cased\"<code>fallback_model_name</code> = \"all-mpnet-base-v2\" <code>similarity_thresholds</code> = {     \"compositions_property_values\": 0.8,     \"property_unit\": 0.8,     \"family\": 0.8,     \"method\": 0.8,     \"precursors\": 0.8,     \"characterization_techniques\": 0.8,     \"steps\": 0.8 }</p>"},{"location":"usage/evaluation/semantic/#how-it-works","title":"How It Works","text":"<pre><code>graph TB\n    A[Ground Truth] --&gt; C[Embedding Model]\n    B[Test Data] --&gt; C\n    C --&gt; D[Vector Similarity]\n    D --&gt; E[Apply Thresholds]\n    E --&gt; F[Calculate Metrics]\n    F --&gt; G[Evaluation Results]</code></pre>"},{"location":"usage/evaluation/semantic/#embedding-models","title":"Embedding Models","text":""},{"location":"usage/evaluation/semantic/#physbert-recommended","title":"PhysBERT (Recommended)","text":"<p>Physics-aware BERT model trained on scientific literature:</p> <pre><code>primary_model_name=\"huggingface:thellert/physbert_cased\"\n</code></pre> <p>Advantages:</p> <ul> <li>Understands materials chemistry</li> <li>Better for chemical formulas</li> <li>Domain-specific knowledge</li> </ul>"},{"location":"usage/evaluation/semantic/#all-mpnet-base-v2-fallback","title":"All-MPNet-Base-V2 (Fallback)","text":"<p>General-purpose sentence transformer:</p> <pre><code>fallback_model_name=\"all-mpnet-base-v2\"\n</code></pre> <p>Advantages:</p> <ul> <li>Fast and reliable</li> <li>Good general performance</li> <li>Wide vocabulary</li> </ul>"},{"location":"usage/evaluation/semantic/#custom-thresholds","title":"Custom Thresholds","text":"<p>Adjust similarity thresholds per metric:</p> <pre><code>custom_thresholds = {\n    \"compositions_property_values\": 0.85,  # Stricter for compositions\n    \"property_unit\": 0.9,                   # Very strict for units\n    \"family\": 0.7,                          # More lenient for families\n    \"method\": 0.75,\n    \"precursors\": 0.8,\n    \"characterization_techniques\": 0.75,\n    \"steps\": 0.7\n}\n\nresults = evaluate_semantic(\n    ground_truth_file=\"ground_truth.json\",\n    test_data_file=\"test_data.json\",\n    similarity_thresholds=custom_thresholds\n)\n</code></pre>"},{"location":"usage/evaluation/semantic/#custom-weights","title":"Custom Weights","text":"<p>Adjust importance of different metrics:</p> <pre><code>custom_weights = {\n    \"compositions_property_values\": 0.5,  # Most important\n    \"property_unit\": 0.15,\n    \"family\": 0.05,\n    \"method\": 0.05,\n    \"precursors\": 0.1,\n    \"characterization_techniques\": 0.1,\n    \"steps\": 0.05\n}\n\nresults = evaluate_semantic(\n    ground_truth_file=\"ground_truth.json\",\n    test_data_file=\"test_data.json\",\n    weights=custom_weights\n)\n</code></pre>"},{"location":"usage/evaluation/semantic/#output-format","title":"Output Format","text":"<pre><code>{\n  \"agent_model_name\": \"DeepSeek-V3-0324\",\n  \"overall_accuracy\": 0.8571505434149185,\n  \"overall_composition_accuracy\": 0.812116748251748,\n  \"overall_synthesis_accuracy\": 0.9021843385780889,\n  \"total_items\": 100,\n  \"absolute_classification_metrics\": {\n    \"true_positives\": 2218,\n    \"false_positives\": 1380,\n    \"false_negatives\": 630,\n    \"precision\": 0.6164535853251807,\n    \"recall\": 0.7787921348314607,\n    \"f1_score\": 0.6881787154824698\n  },\n  \"normalized_classification_metrics\": {\n    \"true_positives\": 52.921215369679366,\n    \"false_positives\": 32.740265864786316,\n    \"false_negatives\": 14.3385187655343,\n    \"precision\": 0.6177947731819824,\n    \"recall\": 0.7868186820853429,\n    \"f1_score\": 0.6921369967109533\n  },\n  \"item_results\": {\n    \"10.1016/j.jeurceramsoc.2025.117193\": {\n      \"field_scores\": {\n        \"composition_data\": 0.9,\n        \"synthesis_data\": 1.0\n      },\n      \"absolute_classification_metrics\": {\n        \"true_positives\": 32,\n        \"false_positives\": 3,\n        \"false_negatives\": 3,\n        \"precision\": 0.9142857142857143,\n        \"recall\": 0.9142857142857143,\n        \"f1_score\": 0.9142857142857143\n      },\n      \"normalized_classification_metrics\": {\n        \"true_positives\": 0.8421052631578947,\n        \"false_positives\": 0.07894736842105263,\n        \"false_negatives\": 0.07894736842105263,\n        \"precision\": 0.9142857142857143,\n        \"recall\": 0.9142857142857143,\n        \"f1_score\": 0.9142857142857143\n      },\n      \"details\": {\n        \"composition_data\": {\n          \"property_unit\": {\n            \"match\": true,\n            \"reference\": \"pC/N\",\n            \"test\": \"pC/N\"\n          },\n          \"family\": {\n            \"match\": false,\n            \"reference\": \"PbNb2O6\",\n            \"test\": \"PbNb2O6-based\"\n          },\n          \"compositions_property_values\": {\n            \"match\": true,\n            \"similarity_score\": 1.0,\n            \"details\": {\n              \"key_matches\": {\n                \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\": {\n                  \"matched_with\": \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\",\n                  \"similarity\": 1.0,\n                  \"match_type\": \"exact\"\n                },\n                \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\": {\n                  \"matched_with\": \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\",\n                  \"similarity\": 1.0,\n                  \"match_type\": \"exact\"\n                },\n                \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\": {\n                  \"matched_with\": \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\",\n                  \"similarity\": 1.0,\n                  \"match_type\": \"exact\"\n                },\n                \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\": {\n                  \"matched_with\": \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\",\n                  \"similarity\": 1.0,\n                  \"match_type\": \"exact\"\n                }\n              },\n              \"value_matches\": {\n                \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\": true,\n                \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\": true,\n                \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\": true,\n                \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\": true\n              },\n              \"pair_matches\": [\n                {\n                  \"match\": true,\n                  \"reference\": {\n                    \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\": 93\n                  },\n                  \"test\": {\n                    \"Pb0.85K0.3[Nb0.96Ta0.04]2O6\": 93\n                  },\n                  \"similarity\": 1.0,\n                  \"match_type\": \"exact\"\n                },\n                {\n                  \"match\": true,\n                  \"reference\": {\n                    \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\": 141\n                  },\n                  \"test\": {\n                    \"Pb0.8K0.4[Nb0.96Ta0.04]2O6\": 141\n                  },\n                  \"similarity\": 1.0,\n                  \"match_type\": \"exact\"\n                },\n                {\n                  \"match\": true,\n                  \"reference\": {\n                    \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\": 44\n                  },\n                  \"test\": {\n                    \"Pb0.95K0.1[Nb0.96Ta0.04]2O6\": 44\n                  },\n                  \"similarity\": 1.0,\n                  \"match_type\": \"exact\"\n                },\n                {\n                  \"match\": true,\n                  \"reference\": {\n                    \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\": 54\n                  },\n                  \"test\": {\n                    \"Pb0.9K0.2[Nb0.96Ta0.04]2O6\": 54\n                  },\n                  \"similarity\": 1.0,\n                  \"match_type\": \"exact\"\n                }\n              ],\n              \"key_match_ratio\": 1.0,\n              \"value_match_ratio\": 1.0,\n              \"pair_match_ratio\": 1.0,\n              \"overall_match_ratio\": 1.0,\n              \"exact_matches\": 4,\n              \"high_similarity_matches\": 0,\n              \"missing_keys\": [],\n              \"extra_keys\": [],\n              \"similarity_threshold_used\": 0.9,\n              \"fractional_value\": 0.25,\n              \"total_reference_items\": 4\n            }\n          }\n        },\n        \"synthesis_data\": {\n          \"method\": {\n            \"match\": true,\n            \"reference\": \"solid-state reaction\",\n            \"test\": \"solid-state reaction\",\n            \"similarity\": 1.0000001192092896\n          },\n          \"precursors\": {\n            \"match\": true,\n            \"similarity\": 1.0,\n            \"reference\": [\"PbO\", \"K2CO3\", \"Nb2O5\", \"Ta2O5\"],\n            \"test\": [\"PbO\", \"K2CO3\", \"Nb2O5\", \"Ta2O5\"],\n            \"very_high_similarity_matches\": [\n              {\n                \"reference\": \"PbO\",\n                \"test\": \"PbO\",\n                \"similarity\": 1.0\n              },\n              {\n                \"reference\": \"K2CO3\",\n                \"test\": \"K2CO3\",\n                \"similarity\": 1.0\n              },\n              {\n                \"reference\": \"Nb2O5\",\n                \"test\": \"Nb2O5\",\n                \"similarity\": 1.0000001192092896\n              },\n              {\n                \"reference\": \"Ta2O5\",\n                \"test\": \"Ta2O5\",\n                \"similarity\": 1.0\n              }\n            ],\n            \"high_similarity_matches\": [],\n            \"missing_items\": [],\n            \"extra_items\": [],\n            \"fractional_value\": 0.25\n          },\n          \"characterization_techniques\": {\n            \"match\": true,\n            \"similarity\": 0.8571428571428571,\n            \"reference\": [\n              \"XRD\",\n              \"SEM\",\n              \"EDS\",\n              \"XPS\",\n              \"Raman spectroscopy\",\n              \"d33 tester\",\n              \"LCR meter\"\n            ],\n            \"test\": [\n              \"XRD\",\n              \"SEM\",\n              \"EDS\",\n              \"XPS\",\n              \"Raman spectroscopy\",\n              \"Quasi-static d33 tester\",\n              \"LCR meter\"\n            ],\n            \"very_high_similarity_matches\": [\n              {\n                \"reference\": \"XRD\",\n                \"test\": \"XRD\",\n                \"similarity\": 1.0000001192092896\n              },\n              {\n                \"reference\": \"SEM\",\n                \"test\": \"SEM\",\n                \"similarity\": 0.9999998807907104\n              },\n              {\n                \"reference\": \"EDS\",\n                \"test\": \"EDS\",\n                \"similarity\": 1.0\n              },\n              {\n                \"reference\": \"XPS\",\n                \"test\": \"XPS\",\n                \"similarity\": 1.0\n              },\n              {\n                \"reference\": \"Raman spectroscopy\",\n                \"test\": \"Raman spectroscopy\",\n                \"similarity\": 0.9999998807907104\n              },\n              {\n                \"reference\": \"LCR meter\",\n                \"test\": \"LCR meter\",\n                \"similarity\": 1.0000001192092896\n              }\n            ],\n            \"high_similarity_matches\": [],\n            \"missing_items\": [\"d33 tester\"],\n            \"extra_items\": [\"Quasi-static d33 tester\"],\n            \"fractional_value\": 0.14285714285714285\n          },\n          \"steps\": {\n            \"reference_steps\": [\n              \"Raw materials were weighed according to stoichiometric ratio and ball-milled with zirconia balls in nylon jars for 12 hours.\",\n              \"Additional 2 wt% PbO was introduced for compensating volatilization during sintering process.\",\n              \"After drying at 120\\u00b0C, powders were calcined at 900\\u00b0C for 4 hours and re-milled for another 6 hours.\",\n              \"Dried powders were mixed with polyvinyl alcohol binder and sieved through screen mesh.\",\n              \"Particles were pressed into pellets with diameter of 12 mm and thickness around 1.2 mm under uniaxial pressure of 15 MPa.\",\n              \"Green pellets were fired at 500\\u00b0C for 2 hours for binder burn-out.\",\n              \"Specimens were sintered at 1190-1250\\u00b0C for 1 hour.\",\n              \"Cooling process was controlled at 3\\u00b0C/min till 600\\u00b0C to prevent ceramics from cracking.\",\n              \"Natural cooling without quenching was performed below 600\\u00b0C.\",\n              \"Sintered pellets were coated with silver paste on both surfaces and dried at 120\\u00b0C for 30 minutes.\",\n              \"Samples were polarized in silicon oil at 150\\u00b0C with DC electric field up to 4 kV/mm for 30 minutes.\"\n            ],\n            \"test_steps\": [\n              \"Weigh raw materials according to stoichiometric ratio\",\n              \"Ball-mill with zirconia balls in nylon jars for 12 h\",\n              \"Add 2 wt% PbO to compensate volatilization\",\n              \"Dry at 120 \\u00b0C\",\n              \"Calcinate at 900 \\u00b0C for 4 h\",\n              \"Re-mill for 6 h\",\n              \"Mix with PVA binder and sieve\",\n              \"Press into pellets (12 mm diameter, 1.2 mm thickness) under 15 MPa\",\n              \"Fire at 500 \\u00b0C for 2 h for binder burn-out\",\n              \"Sinter at 1190-1250 \\u00b0C for 1 h\",\n              \"Control cooling at 3 \\u00b0C/min till 600 \\u00b0C\",\n              \"Natural cooling below 600 \\u00b0C\"\n            ],\n            \"paragraph_similarity\": 0.8826380372047424,\n            \"steps_match\": true,\n            \"paragraph_comparison\": {\n              \"similarity_score\": 0.8826380372047424,\n              \"high_similarity\": true,\n              \"method\": \"sequence_matcher\"\n            }\n          }\n        }\n      },\n      \"overall_score\": 0.95,\n      \"overall_match\": true\n    }\n    // More items...\n  }\n}\n</code></pre>"},{"location":"usage/evaluation/semantic/#next-steps","title":"Next Steps","text":"<ul> <li>Try Agentic Evaluation for comparison</li> <li>Visualize results with Evaluation Visualizer</li> <li>Learn about RAG Configuration</li> </ul>"},{"location":"usage/visualization/data-viz/","title":"Data Visualization","text":"<p>Comprehensive visualization tools for extracted composition-property data, synthesis information, and material families.</p>"},{"location":"usage/visualization/data-viz/#basic-usage","title":"Basic Usage","text":"<pre><code>from comproscanner import data_visualizer\n\n# Family pie chart\nfig = data_visualizer.plot_family_pie_chart(\n    data_sources=[\"results.json\"],\n    output_file=\"families.png\"\n)\n\n# Knowledge graph\ndata_visualizer.create_knowledge_graph(\n    result_file=\"results.json\"\n)\n</code></pre>"},{"location":"usage/visualization/data-viz/#available-functions","title":"Available Functions","text":""},{"location":"usage/visualization/data-viz/#plot_family_pie_chart","title":"<code>plot_family_pie_chart()</code>","text":"<p>Create a pie chart visualization of material families distribution.</p> <pre><code>from comproscanner import data_visualizer\n\nfig = data_visualizer.plot_family_pie_chart(\n    data_sources=[\"results.json\"],\n    output_file=\"families.png\"\n)\n</code></pre>"},{"location":"usage/visualization/data-viz/#required-parameters","title":"Required Parameters","text":"<p>Either <code>data_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/data-viz/#data_sources-unionliststr-listdict-str","title":"<code>data_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of paths to JSON files or dictionaries containing materials data.</p>"},{"location":"usage/visualization/data-viz/#folder_path-str","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON data files.</p>"},{"location":"usage/visualization/data-viz/#optional-parameters","title":"Optional Parameters","text":""},{"location":"usage/visualization/data-viz/#output_file-str","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image. If None, the plot is not saved.</p>"},{"location":"usage/visualization/data-viz/#figsize-tupleint-int","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size as (width, height) in inches.</p>"},{"location":"usage/visualization/data-viz/#dpi-int","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/data-viz/#min_percentage-float","title":"<code>min_percentage</code> (float)","text":"<p>Minimum percentage for a category to be shown separately. Categories below this threshold are grouped into \"Others\".</p>"},{"location":"usage/visualization/data-viz/#title-str","title":"<code>title</code> (str)","text":"<p>Title for the plot.</p>"},{"location":"usage/visualization/data-viz/#color_palette-str","title":"<code>color_palette</code> (str)","text":"<p>Matplotlib colormap name for the pie sections.</p>"},{"location":"usage/visualization/data-viz/#title_fontsize-int","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/data-viz/#label_fontsize-int","title":"<code>label_fontsize</code> (int)","text":"<p>Font size for the percentage labels.</p>"},{"location":"usage/visualization/data-viz/#legend_fontsize-int","title":"<code>legend_fontsize</code> (int)","text":"<p>Font size for the legend.</p>"},{"location":"usage/visualization/data-viz/#is_semantic_clustering_enabled-bool","title":"<code>is_semantic_clustering_enabled</code> (bool)","text":"<p>Whether to use semantic similarity for clustering similar families.</p>"},{"location":"usage/visualization/data-viz/#similarity_threshold-float","title":"<code>similarity_threshold</code> (float)","text":"<p>Similarity threshold for clustering ranging between 0 and 1. Higher values require more similarity for grouping.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>figsize</code> = (10, 8)<code>dpi</code> = 300<code>min_percentage</code> = 1.0<code>title</code> = \"Distribution of Material Families\"<code>color_palette</code> = \"Blues\"<code>title_fontsize</code> = 14<code>label_fontsize</code> = 10<code>legend_fontsize</code> = 10<code>is_semantic_clustering_enabled</code> = True<code>similarity_threshold</code> = 0.8</p>"},{"location":"usage/visualization/data-viz/#plot_family_histogram","title":"<code>plot_family_histogram()</code>","text":"<p>Create a histogram visualization of material families frequency distribution.</p> <pre><code>from comproscanner import data_visualizer\n\nfig = data_visualizer.plot_family_histogram(\n    data_sources=[\"results.json\"],\n    output_file=\"families_hist.png\"\n)\n</code></pre>"},{"location":"usage/visualization/data-viz/#required-parameters_1","title":"Required Parameters","text":"<p>Either <code>data_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/data-viz/#data_sources-unionliststr-listdict-str_1","title":"<code>data_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of paths to JSON files or dictionaries containing materials data.</p>"},{"location":"usage/visualization/data-viz/#folder_path-str_1","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON data files.</p>"},{"location":"usage/visualization/data-viz/#optional-parameters_1","title":"Optional Parameters","text":""},{"location":"usage/visualization/data-viz/#output_file-str_1","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image. If None, the plot is not saved.</p>"},{"location":"usage/visualization/data-viz/#figsize-tupleint-int_1","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size as (width, height) in inches.</p>"},{"location":"usage/visualization/data-viz/#dpi-int_1","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/data-viz/#max_items-int","title":"<code>max_items</code> (int)","text":"<p>Maximum number of items to display. Shows top N most frequent items.</p>"},{"location":"usage/visualization/data-viz/#title-str_1","title":"<code>title</code> (str)","text":"<p>Title for the plot.</p>"},{"location":"usage/visualization/data-viz/#color_palette-str_1","title":"<code>color_palette</code> (str)","text":"<p>Matplotlib colormap name for the bars.</p>"},{"location":"usage/visualization/data-viz/#x_label-str","title":"<code>x_label</code> (str)","text":"<p>Label for the x-axis.</p>"},{"location":"usage/visualization/data-viz/#y_label-str","title":"<code>y_label</code> (str)","text":"<p>Label for the y-axis.</p>"},{"location":"usage/visualization/data-viz/#rotation-int","title":"<code>rotation</code> (int)","text":"<p>Rotation angle for x-axis labels in degrees.</p>"},{"location":"usage/visualization/data-viz/#title_fontsize-int_1","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/data-viz/#xlabel_fontsize-int","title":"<code>xlabel_fontsize</code> (int)","text":"<p>Font size for the x-axis label.</p>"},{"location":"usage/visualization/data-viz/#ylabel_fontsize-int","title":"<code>ylabel_fontsize</code> (int)","text":"<p>Font size for the y-axis label.</p>"},{"location":"usage/visualization/data-viz/#xtick_fontsize-int","title":"<code>xtick_fontsize</code> (int)","text":"<p>Font size for the x-axis tick labels.</p>"},{"location":"usage/visualization/data-viz/#value_label_fontsize-int","title":"<code>value_label_fontsize</code> (int)","text":"<p>Font size for the value labels displayed on top of bars.</p>"},{"location":"usage/visualization/data-viz/#grid_axis-str","title":"<code>grid_axis</code> (str)","text":"<p>Axis for grid lines. Options: \"x\", \"y\", \"both\", or None for no grid.</p>"},{"location":"usage/visualization/data-viz/#grid_linestyle-str","title":"<code>grid_linestyle</code> (str)","text":"<p>Line style for grid lines (e.g., \"--\", \"-\", \":\", \"-.\").</p>"},{"location":"usage/visualization/data-viz/#grid_alpha-float","title":"<code>grid_alpha</code> (float)","text":"<p>Alpha (transparency) for grid lines ranging between 0 and 1.</p>"},{"location":"usage/visualization/data-viz/#is_semantic_clustering_enabled-bool_1","title":"<code>is_semantic_clustering_enabled</code> (bool)","text":"<p>Whether to enable semantic clustering of families.</p>"},{"location":"usage/visualization/data-viz/#similarity_threshold-float_1","title":"<code>similarity_threshold</code> (float)","text":"<p>Similarity threshold for clustering which ranges between 0 and 1.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>figsize</code> = (12, 8)<code>dpi</code> = 300<code>max_items</code> = 15<code>title</code> = \"Frequency Distribution of Material Families\"<code>color_palette</code> = \"Blues\"<code>x_label</code> = \"Material Family\"<code>y_label</code> = \"Frequency\"<code>rotation</code> = 45<code>title_fontsize</code> = 14<code>xlabel_fontsize</code> = 12<code>ylabel_fontsize</code> = 12<code>xtick_fontsize</code> = 10<code>value_label_fontsize</code> = 9<code>grid_axis</code> = \"y\"<code>grid_linestyle</code> = \"--\"<code>grid_alpha</code> = 0.3<code>is_semantic_clustering_enabled</code> = True<code>similarity_threshold</code> = 0.8</p>"},{"location":"usage/visualization/data-viz/#plot_precursors_pie_chart","title":"<code>plot_precursors_pie_chart()</code>","text":"<p>Create a pie chart visualization of precursors distribution in materials synthesis.</p> <pre><code>from comproscanner import data_visualizer\n\nfig = data_visualizer.plot_precursors_pie_chart(\n    data_sources=[\"results.json\"],\n    output_file=\"precursors_pie.png\"\n)\n</code></pre>"},{"location":"usage/visualization/data-viz/#required-parameters_2","title":"Required Parameters","text":"<p>Either <code>data_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/data-viz/#data_sources-unionliststr-listdict-str_2","title":"<code>data_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of paths to JSON files or dictionaries containing materials data.</p>"},{"location":"usage/visualization/data-viz/#folder_path-str_2","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON data files.</p>"},{"location":"usage/visualization/data-viz/#optional-parameters_2","title":"Optional Parameters","text":""},{"location":"usage/visualization/data-viz/#output_file-str_2","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image. If None, the plot is not saved.</p>"},{"location":"usage/visualization/data-viz/#figsize-tupleint-int_2","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size as (width, height) in inches.</p>"},{"location":"usage/visualization/data-viz/#dpi-int_2","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/data-viz/#min_percentage-float_1","title":"<code>min_percentage</code> (float)","text":"<p>Minimum percentage for a category to be shown separately. Categories below this threshold are grouped into \"Others\".</p>"},{"location":"usage/visualization/data-viz/#title-str_2","title":"<code>title</code> (str)","text":"<p>Title for the plot.</p>"},{"location":"usage/visualization/data-viz/#color_palette-str_2","title":"<code>color_palette</code> (str)","text":"<p>Matplotlib colormap name for the pie sections.</p>"},{"location":"usage/visualization/data-viz/#title_fontsize-int_2","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/data-viz/#label_fontsize-int_1","title":"<code>label_fontsize</code> (int)","text":"<p>Font size for the percentage labels.</p>"},{"location":"usage/visualization/data-viz/#legend_fontsize-int_1","title":"<code>legend_fontsize</code> (int)","text":"<p>Font size for the legend.</p>"},{"location":"usage/visualization/data-viz/#is_semantic_clustering_enabled-bool_2","title":"<code>is_semantic_clustering_enabled</code> (bool)","text":"<p>Whether to use semantic similarity for clustering similar precursors.</p>"},{"location":"usage/visualization/data-viz/#similarity_threshold-float_2","title":"<code>similarity_threshold</code> (float)","text":"<p>Threshold for similarity-based clustering when is_semantic_clustering_enabled is True (0-1).</p> <p>Default Values</p> <p><code>output_file</code> = None<code>figsize</code> = (10, 8)<code>dpi</code> = 300<code>min_percentage</code> = 1.0<code>title</code> = \"Distribution of Precursors in Materials Synthesis\"<code>color_palette</code> = \"Blues\"<code>title_fontsize</code> = 14<code>label_fontsize</code> = 10<code>legend_fontsize</code> = 10<code>is_semantic_clustering_enabled</code> = True<code>similarity_threshold</code> = 0.8</p>"},{"location":"usage/visualization/data-viz/#plot_precursors_histogram","title":"<code>plot_precursors_histogram()</code>","text":"<p>Create a histogram visualization of precursors frequency distribution in materials synthesis.</p> <pre><code>from comproscanner import data_visualizer\n\nfig = data_visualizer.plot_precursors_histogram(\n    data_sources=[\"results.json\"],\n    output_file=\"precursors_hist.png\"\n)\n</code></pre>"},{"location":"usage/visualization/data-viz/#required-parameters_3","title":"Required Parameters","text":"<p>Either <code>data_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/data-viz/#data_sources-unionliststr-listdict-str_3","title":"<code>data_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of paths to JSON files or dictionaries containing materials data.</p>"},{"location":"usage/visualization/data-viz/#folder_path-str_3","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON data files.</p>"},{"location":"usage/visualization/data-viz/#optional-parameters_3","title":"Optional Parameters","text":""},{"location":"usage/visualization/data-viz/#output_file-str_3","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image. If None, the plot is not saved.</p>"},{"location":"usage/visualization/data-viz/#figsize-tupleint-int_3","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size as (width, height) in inches.</p>"},{"location":"usage/visualization/data-viz/#dpi-int_3","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/data-viz/#max_items-int_1","title":"<code>max_items</code> (int)","text":"<p>Maximum number of items to display. Shows top N most frequent items.</p>"},{"location":"usage/visualization/data-viz/#title-str_3","title":"<code>title</code> (str)","text":"<p>Title for the plot.</p>"},{"location":"usage/visualization/data-viz/#color_palette-str_3","title":"<code>color_palette</code> (str)","text":"<p>Matplotlib colormap name for the bars.</p>"},{"location":"usage/visualization/data-viz/#x_label-str_1","title":"<code>x_label</code> (str)","text":"<p>Label for the x-axis.</p>"},{"location":"usage/visualization/data-viz/#y_label-str_1","title":"<code>y_label</code> (str)","text":"<p>Label for the y-axis.</p>"},{"location":"usage/visualization/data-viz/#rotation-int_1","title":"<code>rotation</code> (int)","text":"<p>Rotation angle for x-axis labels in degrees.</p>"},{"location":"usage/visualization/data-viz/#title_fontsize-int_3","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/data-viz/#xlabel_fontsize-int_1","title":"<code>xlabel_fontsize</code> (int)","text":"<p>Font size for the x-axis label.</p>"},{"location":"usage/visualization/data-viz/#ylabel_fontsize-int_1","title":"<code>ylabel_fontsize</code> (int)","text":"<p>Font size for the y-axis label.</p>"},{"location":"usage/visualization/data-viz/#xtick_fontsize-int_1","title":"<code>xtick_fontsize</code> (int)","text":"<p>Font size for the x-axis tick labels.</p>"},{"location":"usage/visualization/data-viz/#value_label_fontsize-int_1","title":"<code>value_label_fontsize</code> (int)","text":"<p>Font size for the value labels on bars.</p>"},{"location":"usage/visualization/data-viz/#grid_axis-str_1","title":"<code>grid_axis</code> (str)","text":"<p>Axis for grid lines ('x', 'y', 'both', or None for no grid).</p>"},{"location":"usage/visualization/data-viz/#grid_linestyle-str_1","title":"<code>grid_linestyle</code> (str)","text":"<p>Line style for grid lines.</p>"},{"location":"usage/visualization/data-viz/#grid_alpha-float_1","title":"<code>grid_alpha</code> (float)","text":"<p>Alpha (transparency) for grid lines ranging between 0 and 1.</p>"},{"location":"usage/visualization/data-viz/#is_semantic_clustering_enabled-bool_3","title":"<code>is_semantic_clustering_enabled</code> (bool)","text":"<p>Whether to enable semantic clustering of precursors.</p>"},{"location":"usage/visualization/data-viz/#similarity_threshold-float_3","title":"<code>similarity_threshold</code> (float)","text":"<p>Similarity threshold for clustering which ranges between 0 and 1.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>figsize</code> = (12, 8)<code>dpi</code> = 300<code>max_items</code> = 15<code>title</code> = \"Frequency Distribution of Precursors in Materials Synthesis\"<code>color_palette</code> = \"Blues\"<code>x_label</code> = \"Precursor\"<code>y_label</code> = \"Frequency\"<code>rotation</code> = 45<code>title_fontsize</code> = 14<code>xlabel_fontsize</code> = 12<code>ylabel_fontsize</code> = 12<code>xtick_fontsize</code> = 10<code>value_label_fontsize</code> = 9<code>grid_axis</code> = \"y\"<code>grid_linestyle</code> = \"--\"<code>grid_alpha</code> = 0.3<code>is_semantic_clustering_enabled</code> = True<code>similarity_threshold</code> = 0.8</p>"},{"location":"usage/visualization/data-viz/#plot_characterization_techniques_pie_chart","title":"<code>plot_characterization_techniques_pie_chart()</code>","text":"<p>Create a pie chart visualization of characterization techniques distribution.</p> <pre><code>from comproscanner import data_visualizer\n\nfig = data_visualizer.plot_characterization_techniques_pie_chart(\n    data_sources=[\"results.json\"],\n    output_file=\"techniques_pie.png\"\n)\n</code></pre>"},{"location":"usage/visualization/data-viz/#required-parameters_4","title":"Required Parameters","text":"<p>Either <code>data_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/data-viz/#data_sources-unionliststr-listdict-str_4","title":"<code>data_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of paths to JSON files or dictionaries containing materials data.</p>"},{"location":"usage/visualization/data-viz/#folder_path-str_4","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON data files.</p>"},{"location":"usage/visualization/data-viz/#optional-parameters_4","title":"Optional Parameters","text":""},{"location":"usage/visualization/data-viz/#output_file-str_4","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image. If None, the plot is not saved.</p>"},{"location":"usage/visualization/data-viz/#figsize-tupleint-int_4","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size as (width, height) in inches.</p>"},{"location":"usage/visualization/data-viz/#dpi-int_4","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/data-viz/#min_percentage-float_2","title":"<code>min_percentage</code> (float)","text":"<p>Minimum percentage for a category to be shown separately.</p>"},{"location":"usage/visualization/data-viz/#title-str_4","title":"<code>title</code> (str)","text":"<p>Title for the plot.</p>"},{"location":"usage/visualization/data-viz/#color_palette-str_4","title":"<code>color_palette</code> (str)","text":"<p>Matplotlib colormap name for the pie sections.</p>"},{"location":"usage/visualization/data-viz/#is_semantic_clustering_enabled-bool_4","title":"<code>is_semantic_clustering_enabled</code> (bool)","text":"<p>Whether to use semantic similarity for clustering similar techniques.</p>"},{"location":"usage/visualization/data-viz/#similarity_threshold-float_4","title":"<code>similarity_threshold</code> (float)","text":"<p>Threshold for similarity-based clustering when is_semantic_clustering_enabled is True ranging between 0 and 1.</p>"},{"location":"usage/visualization/data-viz/#title_fontsize-int_4","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/data-viz/#label_fontsize-int_2","title":"<code>label_fontsize</code> (int)","text":"<p>Font size for the percentage labels.</p>"},{"location":"usage/visualization/data-viz/#legend_fontsize-int_2","title":"<code>legend_fontsize</code> (int)","text":"<p>Font size for the legend.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>figsize</code> = (10, 8)<code>dpi</code> = 300<code>min_percentage</code> = 1.0<code>title</code> = \"Distribution of Characterization Techniques\"<code>color_palette</code> = \"Blues\"<code>is_semantic_clustering_enabled</code> = True<code>similarity_threshold</code> = 0.8<code>title_fontsize</code> = 14<code>label_fontsize</code> = 10<code>legend_fontsize</code> = 10</p>"},{"location":"usage/visualization/data-viz/#plot_characterization_techniques_histogram","title":"<code>plot_characterization_techniques_histogram()</code>","text":"<p>Create a histogram visualization of characterization techniques frequency distribution.</p> <pre><code>from comproscanner import data_visualizer\n\nfig = data_visualizer.plot_characterization_techniques_histogram(\n    data_sources=[\"results.json\"],\n    output_file=\"techniques_hist.png\"\n)\n</code></pre>"},{"location":"usage/visualization/data-viz/#required-parameters_5","title":"Required Parameters","text":"<p>Either <code>data_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/data-viz/#data_sources-unionliststr-listdict-str_5","title":"<code>data_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of paths to JSON files or dictionaries containing materials data.</p>"},{"location":"usage/visualization/data-viz/#folder_path-str_5","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON data files.</p>"},{"location":"usage/visualization/data-viz/#optional-parameters_5","title":"Optional Parameters","text":""},{"location":"usage/visualization/data-viz/#output_file-str_5","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image. If None, the plot is not saved.</p>"},{"location":"usage/visualization/data-viz/#figsize-tupleint-int_5","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size as (width, height) in inches.</p>"},{"location":"usage/visualization/data-viz/#dpi-int_5","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/data-viz/#max_items-int_2","title":"<code>max_items</code> (int)","text":"<p>Maximum number of items to display. Shows top N most frequent items.</p>"},{"location":"usage/visualization/data-viz/#title-str_5","title":"<code>title</code> (str)","text":"<p>Title for the plot.</p>"},{"location":"usage/visualization/data-viz/#color_palette-str_5","title":"<code>color_palette</code> (str)","text":"<p>Matplotlib colormap name for the bars.</p>"},{"location":"usage/visualization/data-viz/#x_label-str_2","title":"<code>x_label</code> (str)","text":"<p>Label for the x-axis.</p>"},{"location":"usage/visualization/data-viz/#y_label-str_2","title":"<code>y_label</code> (str)","text":"<p>Label for the y-axis.</p>"},{"location":"usage/visualization/data-viz/#rotation-int_2","title":"<code>rotation</code> (int)","text":"<p>Rotation angle for x-axis labels in degrees.</p>"},{"location":"usage/visualization/data-viz/#is_semantic_clustering_enabled-bool_5","title":"<code>is_semantic_clustering_enabled</code> (bool)","text":"<p>Whether to use semantic similarity for clustering similar techniques.</p>"},{"location":"usage/visualization/data-viz/#similarity_threshold-float_5","title":"<code>similarity_threshold</code> (float)","text":"<p>Threshold for similarity-based clustering when is_semantic_clustering_enabled is True ranging between 0 and 1.</p>"},{"location":"usage/visualization/data-viz/#title_fontsize-int_5","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/data-viz/#xlabel_fontsize-int_2","title":"<code>xlabel_fontsize</code> (int)","text":"<p>Font size for the x-axis label.</p>"},{"location":"usage/visualization/data-viz/#ylabel_fontsize-int_2","title":"<code>ylabel_fontsize</code> (int)","text":"<p>Font size for the y-axis label.</p>"},{"location":"usage/visualization/data-viz/#xtick_fontsize-int_2","title":"<code>xtick_fontsize</code> (int)","text":"<p>Font size for the x-axis tick labels.</p>"},{"location":"usage/visualization/data-viz/#value_label_fontsize-int_2","title":"<code>value_label_fontsize</code> (int)","text":"<p>Font size for the value labels on bars.</p>"},{"location":"usage/visualization/data-viz/#grid_axis-str_2","title":"<code>grid_axis</code> (str)","text":"<p>Axis for grid lines ('x', 'y', 'both', or None for no grid).</p>"},{"location":"usage/visualization/data-viz/#grid_linestyle-str_2","title":"<code>grid_linestyle</code> (str)","text":"<p>Line style for grid lines.</p>"},{"location":"usage/visualization/data-viz/#grid_alpha-float_2","title":"<code>grid_alpha</code> (float)","text":"<p>Alpha (transparency) for grid lines ranging between 0 and 1.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>figsize</code> = (14, 8)<code>dpi</code> = 300<code>max_items</code> = 15<code>title</code> = \"Frequency Distribution of Characterization Techniques\"<code>color_palette</code> = \"Blues\"<code>x_label</code> = \"Characterization Technique\"<code>y_label</code> = \"Frequency\"<code>rotation</code> = 45<code>is_semantic_clustering_enabled</code> = True<code>similarity_threshold</code> = 0.8<code>title_fontsize</code> = 14<code>xlabel_fontsize</code> = 12<code>ylabel_fontsize</code> = 12<code>xtick_fontsize</code> = 10<code>value_label_fontsize</code> = 9<code>grid_axis</code> = \"y\"<code>grid_linestyle</code> = \"--\"<code>grid_alpha</code> = 0.3</p>"},{"location":"usage/visualization/data-viz/#create_knowledge_graph","title":"<code>create_knowledge_graph()</code>","text":"<p>Create a comprehensive knowledge graph from extracted composition-property data directly in Neo4j database. The knowledge graph visualizes relationships between materials, families, precursors, methods, techniques, and properties.</p> <pre><code>from comproscanner import data_visualizer\n\ndata_visualizer.create_knowledge_graph(\n    result_file=\"results.json\"\n)\n</code></pre>"},{"location":"usage/visualization/data-viz/#required-parameters_6","title":"Required Parameters","text":""},{"location":"usage/visualization/data-viz/#result_file-str","title":"<code>result_file</code> (str)","text":"<p>Path to the JSON file containing extracted results.</p>"},{"location":"usage/visualization/data-viz/#optional-parameters_6","title":"Optional Parameters","text":""},{"location":"usage/visualization/data-viz/#is_semantic_clustering_enabled-bool_6","title":"<code>is_semantic_clustering_enabled</code> (bool)","text":"<p>Whether to enable clustering of similar items using semantic similarity.</p>"},{"location":"usage/visualization/data-viz/#family_clustering_similarity_threshold-float","title":"<code>family_clustering_similarity_threshold</code> (float)","text":"<p>Similarity threshold specifically for clustering material families ranging between 0 and 1.</p>"},{"location":"usage/visualization/data-viz/#method_clustering_similarity_threshold-float","title":"<code>method_clustering_similarity_threshold</code> (float)","text":"<p>Similarity threshold specifically for clustering synthesis methods ranging between 0 and 1.</p>"},{"location":"usage/visualization/data-viz/#precursor_clustering_similarity_threshold-float","title":"<code>precursor_clustering_similarity_threshold</code> (float)","text":"<p>Similarity threshold specifically for clustering precursors ranging between 0 and 1.</p>"},{"location":"usage/visualization/data-viz/#technique_clustering_similarity_threshold-float","title":"<code>technique_clustering_similarity_threshold</code> (float)","text":"<p>Similarity threshold specifically for clustering characterization techniques ranging between 0 and 1.</p>"},{"location":"usage/visualization/data-viz/#keyword_clustering_similarity_threshold-float","title":"<code>keyword_clustering_similarity_threshold</code> (float)","text":"<p>Similarity threshold specifically for clustering keywords ranging between 0 and 1.</p> <p>Default Values</p> <p><code>is_semantic_clustering_enabled</code> = True<code>family_clustering_similarity_threshold</code> = 0.9<code>method_clustering_similarity_threshold</code> = 0.8<code>precursor_clustering_similarity_threshold</code> = 0.9<code>technique_clustering_similarity_threshold</code> = 0.8<code>keyword_clustering_similarity_threshold</code> = 0.85</p> <p>Neo4j Database Required</p> <p>The knowledge graph is created directly in a Neo4j database. Ensure you have Neo4j running and configured with following credentials in your <code>.env</code> file before creating knowledge graphs.</p> <pre><code># neo4j\nNEO4J_URI=YOUR_NEO4J_URI # default URI for Neo4j is bolt://localhost:7687\nNEO4J_USER=YOUR_NEO4J_USERNAME\nNEO4J_PASSWORD=YOUR_NEO4J_PASSWORD\nNEO4J_DATABASE=YOUR_NEO4J_DATABASE_NAME\n</code></pre>"},{"location":"usage/visualization/data-viz/#output-format","title":"Output Format","text":"<p>All visualization functions (except <code>create_knowledge_graph</code>) return a <code>matplotlib.figure.Figure</code> object that can be viewed interactively:</p> <pre><code>from comproscanner import data_visualizer\n\nfig = data_visualizer.plot_family_pie_chart(\n    data_sources=[\"results.json\"]\n)\n\n# Show the plot\nfig.show()\n</code></pre>"},{"location":"usage/visualization/data-viz/#next-steps","title":"Next Steps","text":"<ul> <li>Learn about Evaluation Visualization</li> <li>Explore Data Extraction</li> <li>Learn about RAG Configuration</li> </ul>"},{"location":"usage/visualization/eval-viz/","title":"Evaluation Visualization","text":"<p>The evaluation visualization module provides comprehensive tools for visualizing model performance metrics through various chart types including bar charts, radar charts, heatmaps, histograms, and violin plots.</p>"},{"location":"usage/visualization/eval-viz/#basic-usage","title":"Basic Usage","text":"<pre><code>from comproscanner import eval_visualizer\n\n# Bar chart for single model\nfig = eval_visualizer.plot_single_bar_chart(\n    result_file=\"evaluation.json\",\n    output_file=\"metrics.png\"\n)\n\n# Radar chart comparison for multiple models\nfig = eval_visualizer.plot_multiple_radar_charts(\n    result_sources=[\"eval1.json\", \"eval2.json\"],\n    model_names=[\"Model A\", \"Model B\"],\n    output_file=\"comparison.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#single-model-visualizations","title":"Single Model Visualizations","text":""},{"location":"usage/visualization/eval-viz/#plot_single_bar_chart","title":"<code>plot_single_bar_chart()</code>","text":"<p>Create a bar chart visualization of evaluation metrics for a single model.</p> <pre><code>fig = eval_visualizer.plot_single_bar_chart(\n    result_file=\"evaluation.json\",\n    output_file=\"metrics.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#required-parameters","title":"Required Parameters","text":"<p>Either <code>result_file</code> OR <code>result_dict</code> must be provided.</p>"},{"location":"usage/visualization/eval-viz/#result_file-str","title":"<code>result_file</code> (str)","text":"<p>Path to JSON file containing evaluation results.</p>"},{"location":"usage/visualization/eval-viz/#result_dict-dict","title":"<code>result_dict</code> (dict)","text":"<p>Dictionary containing evaluation results.</p>"},{"location":"usage/visualization/eval-viz/#optional-parameters","title":"Optional Parameters","text":""},{"location":"usage/visualization/eval-viz/#output_file-str","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image.</p>"},{"location":"usage/visualization/eval-viz/#model_name-str","title":"<code>model_name</code> (str)","text":"<p>Name of the model for display.</p>"},{"location":"usage/visualization/eval-viz/#figsize-tupleint-int","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size (width, height) in inches.</p>"},{"location":"usage/visualization/eval-viz/#colormap-str","title":"<code>colormap</code> (str)","text":"<p>Matplotlib colormap name.</p>"},{"location":"usage/visualization/eval-viz/#display_values-bool","title":"<code>display_values</code> (bool)","text":"<p>Whether to display metric values on bars.</p>"},{"location":"usage/visualization/eval-viz/#title-str","title":"<code>title</code> (str)","text":"<p>Custom title for the plot.</p>"},{"location":"usage/visualization/eval-viz/#typical_threshold-float","title":"<code>typical_threshold</code> (float)","text":"<p>Threshold value to display as horizontal line.</p>"},{"location":"usage/visualization/eval-viz/#threashold_line_style-str","title":"<code>threashold_line_style</code> (str)","text":"<p>Style of the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threashold_tolerance_range-float","title":"<code>threashold_tolerance_range</code> (float)","text":"<p>Tolerance range for threshold line to skip the bars for better visibility.</p>"},{"location":"usage/visualization/eval-viz/#threshold_color-str","title":"<code>threshold_color</code> (str)","text":"<p>Color for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#show_grid-bool","title":"<code>show_grid</code> (bool)","text":"<p>Whether to display grid lines.</p>"},{"location":"usage/visualization/eval-viz/#bar_width-float","title":"<code>bar_width</code> (float)","text":"<p>Width of the bars.</p>"},{"location":"usage/visualization/eval-viz/#y_axis_label-str","title":"<code>y_axis_label</code> (str)","text":"<p>Label for the y-axis.</p>"},{"location":"usage/visualization/eval-viz/#x_axis_label-str","title":"<code>x_axis_label</code> (str)","text":"<p>Label for the x-axis.</p>"},{"location":"usage/visualization/eval-viz/#y_axis_range-tuplefloat-float","title":"<code>y_axis_range</code> (Tuple[float, float])","text":"<p>Range for the y-axis.</p>"},{"location":"usage/visualization/eval-viz/#dpi-int","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/eval-viz/#metrics_to_include-liststr","title":"<code>metrics_to_include</code> (List[str])","text":"<p>List of metrics to include.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>model_name</code> = None<code>figsize</code> = (12, 8)<code>colormap</code> = \"Blues\"<code>display_values</code> = True<code>title</code> = None<code>typical_threshold</code> = None<code>threashold_line_style</code> = \"--\"<code>threashold_tolerance_range</code> = 0.03<code>threshold_color</code> = \"red\"<code>show_grid</code> = True<code>bar_width</code> = 0.6<code>y_axis_label</code> = \"Score\"<code>x_axis_label</code> = None<code>y_axis_range</code> = (0, 1)<code>dpi</code> = 300<code>metrics_to_include</code> = [\"overall_accuracy\", \"overall_composition_accuracy\", \"overall_synthesis_accuracy\", \"absolute_precision\", \"absolute_recall\", \"absolute_f1_score\", \"normalized_precision\", \"normalized_recall\", \"normalized_f1_score\"]</p>"},{"location":"usage/visualization/eval-viz/#plot_single_radar_chart","title":"<code>plot_single_radar_chart()</code>","text":"<p>Create a radar chart visualization for a single model's evaluation metrics.</p> <pre><code>fig = eval_visualizer.plot_single_radar_chart(\n    result_file=\"evaluation.json\",\n    output_file=\"radar.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#required-parameters_1","title":"Required Parameters","text":"<p>Either <code>result_file</code> OR <code>result_dict</code> must be provided.</p>"},{"location":"usage/visualization/eval-viz/#result_file-str_1","title":"<code>result_file</code> (str)","text":"<p>Path to JSON file containing evaluation results.</p>"},{"location":"usage/visualization/eval-viz/#result_dict-dict_1","title":"<code>result_dict</code> (dict)","text":"<p>Dictionary containing evaluation results.</p>"},{"location":"usage/visualization/eval-viz/#optional-parameters_1","title":"Optional Parameters","text":""},{"location":"usage/visualization/eval-viz/#output_file-str_1","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image.</p>"},{"location":"usage/visualization/eval-viz/#model_name-str_1","title":"<code>model_name</code> (str)","text":"<p>Name of the model for display.</p>"},{"location":"usage/visualization/eval-viz/#figsize-tupleint-int_1","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size (width, height) in inches.</p>"},{"location":"usage/visualization/eval-viz/#colormap-str_1","title":"<code>colormap</code> (str)","text":"<p>Matplotlib colormap name.</p>"},{"location":"usage/visualization/eval-viz/#display_values-bool_1","title":"<code>display_values</code> (bool)","text":"<p>Whether to display metric values.</p>"},{"location":"usage/visualization/eval-viz/#title-str_1","title":"<code>title</code> (str)","text":"<p>Custom title for the plot.</p>"},{"location":"usage/visualization/eval-viz/#title_fontsize-int","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/eval-viz/#title_pad-float","title":"<code>title_pad</code> (float)","text":"<p>Padding for the title from plot.</p>"},{"location":"usage/visualization/eval-viz/#typical_threshold-float_1","title":"<code>typical_threshold</code> (float)","text":"<p>Threshold value to display as circular line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_color-str_1","title":"<code>threshold_color</code> (str)","text":"<p>Color for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_line_style-str","title":"<code>threshold_line_style</code> (str)","text":"<p>Style of the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#label_fontsize-int","title":"<code>label_fontsize</code> (int)","text":"<p>Font size for axis labels.</p>"},{"location":"usage/visualization/eval-viz/#value_fontsize-int","title":"<code>value_fontsize</code> (int)","text":"<p>Font size for displayed values.</p>"},{"location":"usage/visualization/eval-viz/#legend_loc-str","title":"<code>legend_loc</code> (str)","text":"<p>Location for the legend box.</p>"},{"location":"usage/visualization/eval-viz/#legend_fontsize-int","title":"<code>legend_fontsize</code> (int)","text":"<p>Font size for the legend.</p>"},{"location":"usage/visualization/eval-viz/#bbox_to_anchor-tuplefloat-float","title":"<code>bbox_to_anchor</code> (Tuple[float, float])","text":"<p>Bounding box for legend.</p>"},{"location":"usage/visualization/eval-viz/#show_grid-bool_1","title":"<code>show_grid</code> (bool)","text":"<p>Whether to display grid lines.</p>"},{"location":"usage/visualization/eval-viz/#show_grid_labels-bool","title":"<code>show_grid_labels</code> (bool)","text":"<p>Whether to display grid line values/labels.</p>"},{"location":"usage/visualization/eval-viz/#grid_line_width-float","title":"<code>grid_line_width</code> (float)","text":"<p>Width of the grid lines.</p>"},{"location":"usage/visualization/eval-viz/#grid_line_style-str","title":"<code>grid_line_style</code> (str)","text":"<p>Style of the grid lines.</p>"},{"location":"usage/visualization/eval-viz/#grid_line_color-str","title":"<code>grid_line_color</code> (str)","text":"<p>Color of the grid lines.</p>"},{"location":"usage/visualization/eval-viz/#grid_line_alpha-float","title":"<code>grid_line_alpha</code> (float)","text":"<p>Alpha (transparency) of grid lines ranging from 0 to 1.</p>"},{"location":"usage/visualization/eval-viz/#fill_alpha-float","title":"<code>fill_alpha</code> (float)","text":"<p>Alpha (transparency) of the filled area ranging from 0 to 1.</p>"},{"location":"usage/visualization/eval-viz/#marker_size-int","title":"<code>marker_size</code> (int)","text":"<p>Size of the markers in the radar plot.</p>"},{"location":"usage/visualization/eval-viz/#line_width-float","title":"<code>line_width</code> (float)","text":"<p>Width of the lines in the radar plot.</p>"},{"location":"usage/visualization/eval-viz/#label_padding-float","title":"<code>label_padding</code> (float)","text":"<p>Padding for the labels in the radar plot.</p>"},{"location":"usage/visualization/eval-viz/#clockwise-bool","title":"<code>clockwise</code> (bool)","text":"<p>Flag to indicate whether to draw the radar chart in a clockwise direction.</p>"},{"location":"usage/visualization/eval-viz/#start_angle-float","title":"<code>start_angle</code> (float)","text":"<p>Starting angle for the radar chart.</p>"},{"location":"usage/visualization/eval-viz/#radar_range-tuplefloat-float","title":"<code>radar_range</code> (Tuple[float, float])","text":"<p>Range of axes for the radar chart.</p>"},{"location":"usage/visualization/eval-viz/#dpi-int_1","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/eval-viz/#metrics_to_include-liststr_1","title":"<code>metrics_to_include</code> (List[str])","text":"<p>List of metrics to include.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>model_name</code> = None<code>figsize</code> = (10, 8)<code>colormap</code> = \"Blues\"<code>display_values</code> = False<code>title</code> = None<code>title_fontsize</code> = 14<code>title_pad</code> = 50.0<code>typical_threshold</code> = None<code>threshold_color</code> = \"red\"<code>threshold_line_style</code> = \"--\"<code>label_fontsize</code> = 12<code>value_fontsize</code> = 10<code>legend_loc</code> = \"best\"<code>legend_fontsize</code> = 10<code>bbox_to_anchor</code> = None<code>show_grid</code> = True<code>show_grid_labels</code> = False<code>grid_line_width</code> = 1.0<code>grid_line_style</code> = \"-\"<code>grid_line_color</code> = \"gray\"<code>grid_line_alpha</code> = 0.2<code>fill_alpha</code> = 0.4<code>marker_size</code> = 7<code>line_width</code> = 2.0<code>label_padding</code> = 0.25<code>clockwise</code> = True<code>start_angle</code> = np.pi / 2<code>radar_range</code> = (0, 1)<code>dpi</code> = 300<code>metrics_to_include</code> = [\"overall_accuracy\", \"overall_composition_accuracy\", \"overall_synthesis_accuracy\", \"absolute_precision\", \"absolute_recall\", \"absolute_f1_score\", \"normalized_precision\", \"normalized_recall\", \"normalized_f1_score\"]</p>"},{"location":"usage/visualization/eval-viz/#plot_single_performance_heatmap","title":"<code>plot_single_performance_heatmap()</code>","text":"<p>Create a heatmap showing the distribution of scores across metrics for a single model.</p> <pre><code>fig = eval_visualizer.plot_single_performance_heatmap(\n    result_file=\"evaluation.json\",\n    output_file=\"heatmap.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#required-parameters_2","title":"Required Parameters","text":"<p>Either <code>result_file</code> OR <code>result_dict</code> must be provided.</p>"},{"location":"usage/visualization/eval-viz/#result_file-str_2","title":"<code>result_file</code> (str)","text":"<p>Path to JSON file containing evaluation results.</p>"},{"location":"usage/visualization/eval-viz/#result_dict-dict_2","title":"<code>result_dict</code> (dict)","text":"<p>Dictionary containing evaluation results.</p>"},{"location":"usage/visualization/eval-viz/#optional-parameters_2","title":"Optional Parameters","text":""},{"location":"usage/visualization/eval-viz/#output_file-str_2","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image.</p>"},{"location":"usage/visualization/eval-viz/#model_name-str_2","title":"<code>model_name</code> (str)","text":"<p>Name of the model for display.</p>"},{"location":"usage/visualization/eval-viz/#figsize-tupleint-int_2","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size (width, height) in inches.</p>"},{"location":"usage/visualization/eval-viz/#colormap-str_2","title":"<code>colormap</code> (str)","text":"<p>Matplotlib colormap name for heatmap.</p>"},{"location":"usage/visualization/eval-viz/#bin_count-int","title":"<code>bin_count</code> (int)","text":"<p>Number of bins to divide the score range into.</p>"},{"location":"usage/visualization/eval-viz/#score_range-tuplefloat-float","title":"<code>score_range</code> (Tuple[float, float])","text":"<p>Min and max values for score bins.</p>"},{"location":"usage/visualization/eval-viz/#use_percentage-bool","title":"<code>use_percentage</code> (bool)","text":"<p>Whether to show percentages (True) or counts (False).</p>"},{"location":"usage/visualization/eval-viz/#show_averages-bool","title":"<code>show_averages</code> (bool)","text":"<p>Whether to show average scores per metric.</p>"},{"location":"usage/visualization/eval-viz/#show_group_labels-bool","title":"<code>show_group_labels</code> (bool)","text":"<p>Whether to show metric group labels.</p>"},{"location":"usage/visualization/eval-viz/#show_annotations-bool","title":"<code>show_annotations</code> (bool)","text":"<p>Whether to show value annotations in cells.</p>"},{"location":"usage/visualization/eval-viz/#annotation_format-str","title":"<code>annotation_format</code> (str)","text":"<p>Format string for annotations (e.g., '.1f' or 'd').</p>"},{"location":"usage/visualization/eval-viz/#title-str_2","title":"<code>title</code> (str)","text":"<p>Custom title for the plot.</p>"},{"location":"usage/visualization/eval-viz/#title_fontsize-int_1","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title text.</p>"},{"location":"usage/visualization/eval-viz/#title_pad-float_1","title":"<code>title_pad</code> (float)","text":"<p>Padding for the title from the top of the plot.</p>"},{"location":"usage/visualization/eval-viz/#labels-liststr","title":"<code>labels</code> (List[str])","text":"<p>Labels for the x and y axes.</p>"},{"location":"usage/visualization/eval-viz/#label_fontsize-int_1","title":"<code>label_fontsize</code> (int)","text":"<p>Font size for the axis labels.</p>"},{"location":"usage/visualization/eval-viz/#dpi-int_2","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/eval-viz/#group_metrics-bool","title":"<code>group_metrics</code> (bool)","text":"<p>Whether to visually group related metrics together.</p>"},{"location":"usage/visualization/eval-viz/#metric_groups-listdict","title":"<code>metric_groups</code> (List[Dict])","text":"<p>Custom metric groups definition for grouping metrics.</p>"},{"location":"usage/visualization/eval-viz/#group_colors-liststr","title":"<code>group_colors</code> (List[str])","text":"<p>Colors for metric groups.</p>"},{"location":"usage/visualization/eval-viz/#metrics_to_include-liststr_2","title":"<code>metrics_to_include</code> (List[str])","text":"<p>Specific metrics to include in the heatmap.</p>"},{"location":"usage/visualization/eval-viz/#group_label_right_margin-int","title":"<code>group_label_right_margin</code> (int)","text":"<p>Right margin for group labels.</p>"},{"location":"usage/visualization/eval-viz/#average_value_left_margin-int","title":"<code>average_value_left_margin</code> (int)","text":"<p>Left margin for average values.</p>"},{"location":"usage/visualization/eval-viz/#plot_padding-float","title":"<code>plot_padding</code> (float)","text":"<p>Padding between heatmap and axes.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>model_name</code> = None<code>figsize</code> = (12, 12)<code>colormap</code> = \"YlGnBu\"<code>bin_count</code> = 10<code>score_range</code> = (0, 1)<code>use_percentage</code> = True<code>show_averages</code> = False<code>show_group_labels</code> = False<code>show_annotations</code> = False<code>annotation_format</code> = None<code>title</code> = None<code>title_fontsize</code> = 14<code>title_pad</code> = None<code>labels</code> = [\"Metrics\", \"Scores\"]<code>label_fontsize</code> = 12<code>dpi</code> = 300<code>group_metrics</code> = False<code>metric_groups</code> = None<code>group_colors</code> = None<code>metrics_to_include</code> = [\"overall_accuracy\", \"overall_composition_accuracy\", \"overall_synthesis_accuracy\", \"precision\", \"recall\", \"f1_score\", \"normalized_precision\", \"normalized_recall\", \"normalized_f1_score\"]<code>group_label_right_margin</code> = 1<code>average_value_left_margin</code> = 1<code>plot_padding</code> = 0.1</p>"},{"location":"usage/visualization/eval-viz/#plot_single_histogram_chart","title":"<code>plot_single_histogram_chart()</code>","text":"<p>Create a histogram for a single metric from evaluation results.</p> <pre><code>fig = eval_visualizer.plot_single_histogram_chart(\n    result_file=\"evaluation.json\",\n    metric_name=\"overall_accuracy\",\n    output_file=\"histogram.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#required-parameters_3","title":"Required Parameters","text":"<p>Either <code>result_file</code> OR <code>result_dict</code> must be provided.</p>"},{"location":"usage/visualization/eval-viz/#result_file-str_3","title":"<code>result_file</code> (str)","text":"<p>Path to JSON file containing evaluation results.</p>"},{"location":"usage/visualization/eval-viz/#result_dict-dict_3","title":"<code>result_dict</code> (dict)","text":"<p>Dictionary containing evaluation results.</p>"},{"location":"usage/visualization/eval-viz/#optional-parameters_3","title":"Optional Parameters","text":""},{"location":"usage/visualization/eval-viz/#metric_name-str","title":"<code>metric_name</code> (str)","text":"<p>Name of the metric to plot.</p>"},{"location":"usage/visualization/eval-viz/#output_file-str_3","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image.</p>"},{"location":"usage/visualization/eval-viz/#model_name-str_3","title":"<code>model_name</code> (str)","text":"<p>Name of the model for display in the plot title.</p>"},{"location":"usage/visualization/eval-viz/#figsize-tupleint-int_3","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size (width, height) in inches.</p>"},{"location":"usage/visualization/eval-viz/#bins-int","title":"<code>bins</code> (int)","text":"<p>Number of bins or bin edges for histogram.</p>"},{"location":"usage/visualization/eval-viz/#color-str","title":"<code>color</code> (str)","text":"<p>Color for the histogram bars.</p>"},{"location":"usage/visualization/eval-viz/#color_gradient-bool","title":"<code>color_gradient</code> (bool)","text":"<p>Whether to use color gradient for histogram bars.</p>"},{"location":"usage/visualization/eval-viz/#gradient_colors-liststr","title":"<code>gradient_colors</code> (List[str])","text":"<p>List of colors for gradient.</p>"},{"location":"usage/visualization/eval-viz/#show_kde-bool","title":"<code>show_kde</code> (bool)","text":"<p>Whether to show a Kernel Density Estimation (KDE) curve over the histogram.</p>"},{"location":"usage/visualization/eval-viz/#show_mean-bool","title":"<code>show_mean</code> (bool)","text":"<p>Whether to show a vertical line at the mean value.</p>"},{"location":"usage/visualization/eval-viz/#mean_color-str","title":"<code>mean_color</code> (str)","text":"<p>Color for the mean line.</p>"},{"location":"usage/visualization/eval-viz/#mean_line_style-str","title":"<code>mean_line_style</code> (str)","text":"<p>Line style for the mean line.</p>"},{"location":"usage/visualization/eval-viz/#show_median-bool","title":"<code>show_median</code> (bool)","text":"<p>Whether to show a vertical line at the median value.</p>"},{"location":"usage/visualization/eval-viz/#median_color-str","title":"<code>median_color</code> (str)","text":"<p>Color for the median line.</p>"},{"location":"usage/visualization/eval-viz/#median_line_style-str","title":"<code>median_line_style</code> (str)","text":"<p>Line style for the median line.</p>"},{"location":"usage/visualization/eval-viz/#show_threshold-bool","title":"<code>show_threshold</code> (bool)","text":"<p>Whether to show a threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_value-float","title":"<code>threshold_value</code> (float)","text":"<p>Value for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_color-str_2","title":"<code>threshold_color</code> (str)","text":"<p>Color for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_line_style-str_1","title":"<code>threshold_line_style</code> (str)","text":"<p>Line style for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#title-str_3","title":"<code>title</code> (str)","text":"<p>Custom title for the plot.</p>"},{"location":"usage/visualization/eval-viz/#title_fontsize-int_2","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/eval-viz/#xlabel-str","title":"<code>xlabel</code> (str)","text":"<p>Custom label for x-axis.</p>"},{"location":"usage/visualization/eval-viz/#ylabel-str","title":"<code>ylabel</code> (str)","text":"<p>Label for y-axis.</p>"},{"location":"usage/visualization/eval-viz/#xlabel_fontsize-int","title":"<code>xlabel_fontsize</code> (int)","text":"<p>Font size for x-axis label.</p>"},{"location":"usage/visualization/eval-viz/#ylabel_fontsize-int","title":"<code>ylabel_fontsize</code> (int)","text":"<p>Font size for y-axis label.</p>"},{"location":"usage/visualization/eval-viz/#legend_loc-str_1","title":"<code>legend_loc</code> (str)","text":"<p>Location for the legend.</p>"},{"location":"usage/visualization/eval-viz/#bbox_to_anchor-tuplefloat-float_1","title":"<code>bbox_to_anchor</code> (Tuple[float, float])","text":"<p>Bounding box for the legend.</p>"},{"location":"usage/visualization/eval-viz/#dpi-int_3","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p> <p>Default Values</p> <p><code>metric_name</code> = \"overall_accuracy\"<code>output_file</code> = None<code>model_name</code> = None<code>figsize</code> = (8, 6)<code>bins</code> = 10<code>color</code> = \"skyblue\"<code>color_gradient</code> = False<code>gradient_colors</code> = None<code>show_kde</code> = False<code>show_mean</code> = False<code>mean_color</code> = \"green\"<code>mean_line_style</code> = \"-\"<code>show_median</code> = False<code>median_color</code> = \"black\"<code>median_line_style</code> = \"-\"<code>show_threshold</code> = False<code>threshold_value</code> = 0.8<code>threshold_color</code> = \"red\"<code>threshold_line_style</code> = \"--\"<code>title</code> = None<code>title_fontsize</code> = 14<code>xlabel</code> = None<code>ylabel</code> = \"Count\"<code>xlabel_fontsize</code> = 12<code>ylabel_fontsize</code> = 12<code>legend_loc</code> = \"best\"<code>bbox_to_anchor</code> = None<code>dpi</code> = 300</p>"},{"location":"usage/visualization/eval-viz/#plot_single_violin_chart","title":"<code>plot_single_violin_chart()</code>","text":"<p>Create a violin plot for all metrics from a single model's evaluation results.</p> <pre><code>fig = eval_visualizer.plot_single_violin_chart(\n    result_file=\"evaluation.json\",\n    output_file=\"violin.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#required-parameters_4","title":"Required Parameters","text":"<p>Either <code>result_file</code> OR <code>result_dict</code> must be provided.</p>"},{"location":"usage/visualization/eval-viz/#result_file-str_4","title":"<code>result_file</code> (str)","text":"<p>Path to JSON file containing evaluation results.</p>"},{"location":"usage/visualization/eval-viz/#result_dict-dict_4","title":"<code>result_dict</code> (dict)","text":"<p>Dictionary containing evaluation results.</p>"},{"location":"usage/visualization/eval-viz/#optional-parameters_4","title":"Optional Parameters","text":""},{"location":"usage/visualization/eval-viz/#output_file-str_4","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image.</p>"},{"location":"usage/visualization/eval-viz/#model_name-str_4","title":"<code>model_name</code> (str)","text":"<p>Name of the model for display in the plot.</p>"},{"location":"usage/visualization/eval-viz/#figsize-tupleint-int_4","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size (width, height) in inches.</p>"},{"location":"usage/visualization/eval-viz/#colormap-str_3","title":"<code>colormap</code> (str)","text":"<p>Matplotlib colormap name for the violins.</p>"},{"location":"usage/visualization/eval-viz/#title-str_4","title":"<code>title</code> (str)","text":"<p>Custom title for the plot.</p>"},{"location":"usage/visualization/eval-viz/#title_fontsize-int_3","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title text.</p>"},{"location":"usage/visualization/eval-viz/#title_pad-float_2","title":"<code>title_pad</code> (float)","text":"<p>Padding for the title from the top of the plot.</p>"},{"location":"usage/visualization/eval-viz/#show_box-bool","title":"<code>show_box</code> (bool)","text":"<p>Whether to show a box plot inside the violin.</p>"},{"location":"usage/visualization/eval-viz/#show_mean-bool_1","title":"<code>show_mean</code> (bool)","text":"<p>Whether to show the mean marker.</p>"},{"location":"usage/visualization/eval-viz/#mean_marker-str","title":"<code>mean_marker</code> (str)","text":"<p>Marker style for the mean.</p>"},{"location":"usage/visualization/eval-viz/#mean_color-str_1","title":"<code>mean_color</code> (str)","text":"<p>Color for the mean marker.</p>"},{"location":"usage/visualization/eval-viz/#show_median-bool_1","title":"<code>show_median</code> (bool)","text":"<p>Whether to show the median line.</p>"},{"location":"usage/visualization/eval-viz/#median_color-str_1","title":"<code>median_color</code> (str)","text":"<p>Color for the median line.</p>"},{"location":"usage/visualization/eval-viz/#median_line_style-str_1","title":"<code>median_line_style</code> (str)","text":"<p>Line style for the median.</p>"},{"location":"usage/visualization/eval-viz/#show_grid-bool_2","title":"<code>show_grid</code> (bool)","text":"<p>Whether to display grid lines.</p>"},{"location":"usage/visualization/eval-viz/#show_threshold-bool_1","title":"<code>show_threshold</code> (bool)","text":"<p>Whether to show a threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_value-float_1","title":"<code>threshold_value</code> (float)","text":"<p>Value for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_color-str_3","title":"<code>threshold_color</code> (str)","text":"<p>Color for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_line_style-str_2","title":"<code>threshold_line_style</code> (str)","text":"<p>Line style for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#violin_alpha-float","title":"<code>violin_alpha</code> (float)","text":"<p>Alpha (transparency) of the violin plots (0-1).</p>"},{"location":"usage/visualization/eval-viz/#violin_width-float","title":"<code>violin_width</code> (float)","text":"<p>Width of the violin plots.</p>"},{"location":"usage/visualization/eval-viz/#x_label-str","title":"<code>x_label</code> (str)","text":"<p>Label for the x-axis.</p>"},{"location":"usage/visualization/eval-viz/#y_label-str","title":"<code>y_label</code> (str)","text":"<p>Label for the y-axis.</p>"},{"location":"usage/visualization/eval-viz/#x_label_fontsize-int","title":"<code>x_label_fontsize</code> (int)","text":"<p>Font size for x-axis label.</p>"},{"location":"usage/visualization/eval-viz/#y_label_fontsize-int","title":"<code>y_label_fontsize</code> (int)","text":"<p>Font size for y-axis label.</p>"},{"location":"usage/visualization/eval-viz/#y_axis_range-tuplefloat-float_1","title":"<code>y_axis_range</code> (Tuple[float, float])","text":"<p>Range for the y-axis.</p>"},{"location":"usage/visualization/eval-viz/#label_rotation-int","title":"<code>label_rotation</code> (int)","text":"<p>Rotation angle for x-axis labels.</p>"},{"location":"usage/visualization/eval-viz/#inner-str","title":"<code>inner</code> (str)","text":"<p>The representation of the data points inside the violin ('box', 'stick', 'point', or None).</p>"},{"location":"usage/visualization/eval-viz/#dpi-int_4","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/eval-viz/#metrics_to_include-liststr_3","title":"<code>metrics_to_include</code> (List[str])","text":"<p>Specific metrics to include in the plot.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>model_name</code> = None<code>figsize</code> = (14, 10)<code>colormap</code> = \"Blues\"<code>title</code> = None<code>title_fontsize</code> = 14<code>title_pad</code> = 10.0<code>show_box</code> = False<code>show_mean</code> = True<code>mean_marker</code> = \"o\"<code>mean_color</code> = \"red\"<code>show_median</code> = False<code>median_color</code> = \"green\"<code>median_line_style</code> = \"-\"<code>show_grid</code> = True<code>show_threshold</code> = False<code>threshold_value</code> = 0.8<code>threshold_color</code> = \"red\"<code>threshold_line_style</code> = \"--\"<code>violin_alpha</code> = 0.7<code>violin_width</code> = 0.8<code>x_label</code> = \"Metrics\"<code>y_label</code> = \"Score\"<code>x_label_fontsize</code> = 12<code>y_label_fontsize</code> = 12<code>y_axis_range</code> = (0, 1)<code>label_rotation</code> = 45<code>inner</code> = \"box\"<code>dpi</code> = 300<code>metrics_to_include</code> = [\"overall_accuracy\", \"overall_composition_accuracy\", \"overall_synthesis_accuracy\", \"precision\", \"recall\", \"f1_score\", \"normalized_precision\", \"normalized_recall\", \"normalized_f1_score\"]</p>"},{"location":"usage/visualization/eval-viz/#multi-model-comparison-visualizations","title":"Multi-Model Comparison Visualizations","text":""},{"location":"usage/visualization/eval-viz/#plot_multiple_bar_charts","title":"<code>plot_multiple_bar_charts()</code>","text":"<p>Plot evaluation metrics from multiple result files or dictionaries as grouped bar charts.</p> <pre><code>fig = eval_visualizer.plot_multiple_bar_charts(\n    result_sources=[\"model1.json\", \"model2.json\"],\n    output_file=\"comparison.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#required-parameters_5","title":"Required Parameters","text":"<p>Either <code>result_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/eval-viz/#result_sources-unionliststr-listdict-str","title":"<code>result_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of JSON file paths or dictionaries containing evaluation results for multiple models.</p>"},{"location":"usage/visualization/eval-viz/#folder_path-str","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON result files.</p>"},{"location":"usage/visualization/eval-viz/#optional-parameters_5","title":"Optional Parameters","text":""},{"location":"usage/visualization/eval-viz/#output_file-str_5","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image.</p>"},{"location":"usage/visualization/eval-viz/#model_names-liststr","title":"<code>model_names</code> (List[str])","text":"<p>Names of models to display in the legend. Defaults to filename or agent_model_name from results.</p>"},{"location":"usage/visualization/eval-viz/#figsize-tupleint-int_5","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size (width, height) in inches.</p>"},{"location":"usage/visualization/eval-viz/#colormap-str_4","title":"<code>colormap</code> (str)","text":"<p>Matplotlib colormap name for the bars.</p>"},{"location":"usage/visualization/eval-viz/#display_values-bool_2","title":"<code>display_values</code> (bool)","text":"<p>Whether to display metric values on bars.</p>"},{"location":"usage/visualization/eval-viz/#title-str_5","title":"<code>title</code> (str)","text":"<p>Custom title for the plot.</p>"},{"location":"usage/visualization/eval-viz/#typical_threshold-float_2","title":"<code>typical_threshold</code> (float)","text":"<p>Threshold value to display as horizontal line. If not provided, no line is drawn.</p>"},{"location":"usage/visualization/eval-viz/#threshold_line_style-str_3","title":"<code>threshold_line_style</code> (str)","text":"<p>Style of the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threashold_tolerance_range-float_1","title":"<code>threashold_tolerance_range</code> (float)","text":"<p>Tolerance range for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_color-str_4","title":"<code>threshold_color</code> (str)","text":"<p>Color for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#show_grid-bool_3","title":"<code>show_grid</code> (bool)","text":"<p>Whether to display horizontal grid lines in the plot.</p>"},{"location":"usage/visualization/eval-viz/#y_label-str_1","title":"<code>y_label</code> (str)","text":"<p>Label for the y-axis.</p>"},{"location":"usage/visualization/eval-viz/#x_label-str_1","title":"<code>x_label</code> (str)","text":"<p>Label for the x-axis.</p>"},{"location":"usage/visualization/eval-viz/#group_width-float","title":"<code>group_width</code> (float)","text":"<p>Width allocated for each group of bars (0-1).</p>"},{"location":"usage/visualization/eval-viz/#bar_width-float_1","title":"<code>bar_width</code> (float)","text":"<p>Width of individual bars. Calculated automatically if None.</p>"},{"location":"usage/visualization/eval-viz/#legend_loc-str_2","title":"<code>legend_loc</code> (str)","text":"<p>Location of the legend.</p>"},{"location":"usage/visualization/eval-viz/#legend_fontsize-int_1","title":"<code>legend_fontsize</code> (int)","text":"<p>Font size for the legend.</p>"},{"location":"usage/visualization/eval-viz/#y_axis_range-tuplefloat-float_2","title":"<code>y_axis_range</code> (Tuple[float, float])","text":"<p>Range for the y-axis.</p>"},{"location":"usage/visualization/eval-viz/#dpi-int_5","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/eval-viz/#metrics_to_include-liststr_4","title":"<code>metrics_to_include</code> (List[str])","text":"<p>List of metrics to include in the plot.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>model_names</code> = None<code>figsize</code> = (14, 10)<code>colormap</code> = \"Blues\"<code>display_values</code> = True<code>title</code> = None<code>typical_threshold</code> = None<code>threshold_line_style</code> = \"--\"<code>threashold_tolerance_range</code> = 0.03<code>threshold_color</code> = \"red\"<code>show_grid</code> = True<code>y_label</code> = \"Score\"<code>x_label</code> = None<code>group_width</code> = 0.8<code>bar_width</code> = None<code>legend_loc</code> = \"best\"<code>legend_fontsize</code> = 10<code>y_axis_range</code> = (0, 1)<code>dpi</code> = 300<code>metrics_to_include</code> = [\"overall_accuracy\", \"overall_composition_accuracy\", \"overall_synthesis_accuracy\", \"precision\", \"recall\", \"f1_score\", \"normalized_precision\", \"normalized_recall\", \"normalized_f1_score\"]</p>"},{"location":"usage/visualization/eval-viz/#plot_multiple_radar_charts","title":"<code>plot_multiple_radar_charts()</code>","text":"<p>Plot evaluation metrics from multiple result files or dictionaries as a radar chart.</p> <pre><code>fig = eval_visualizer.plot_multiple_radar_charts(\n    result_sources=[\"model1.json\", \"model2.json\"],\n    output_file=\"radar_comparison.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#required-parameters_6","title":"Required Parameters","text":"<p>Either <code>result_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/eval-viz/#result_sources-unionliststr-listdict-str_1","title":"<code>result_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of JSON file paths or dictionaries containing evaluation results for multiple models.</p>"},{"location":"usage/visualization/eval-viz/#folder_path-str_1","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON result files.</p>"},{"location":"usage/visualization/eval-viz/#optional-parameters_6","title":"Optional Parameters","text":""},{"location":"usage/visualization/eval-viz/#output_file-str_6","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image.</p>"},{"location":"usage/visualization/eval-viz/#model_names-liststr_1","title":"<code>model_names</code> (List[str])","text":"<p>Names of models to display in the legend.</p>"},{"location":"usage/visualization/eval-viz/#figsize-tupleint-int_6","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size (width, height) in inches.</p>"},{"location":"usage/visualization/eval-viz/#colormap-str_5","title":"<code>colormap</code> (str)","text":"<p>Matplotlib colormap name for the plot lines and markers.</p>"},{"location":"usage/visualization/eval-viz/#display_values-bool_3","title":"<code>display_values</code> (bool)","text":"<p>Whether to display metric values on the chart.</p>"},{"location":"usage/visualization/eval-viz/#title-str_6","title":"<code>title</code> (str)","text":"<p>Custom title for the plot.</p>"},{"location":"usage/visualization/eval-viz/#title_fontsize-int_4","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/eval-viz/#title_pad-float_3","title":"<code>title_pad</code> (float)","text":"<p>Padding for the title from the top of the plot.</p>"},{"location":"usage/visualization/eval-viz/#typical_threshold-float_3","title":"<code>typical_threshold</code> (float)","text":"<p>Threshold value to display as circular line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_color-str_5","title":"<code>threshold_color</code> (str)","text":"<p>Color for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_line_style-str_4","title":"<code>threshold_line_style</code> (str)","text":"<p>Style of the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#label_fontsize-int_2","title":"<code>label_fontsize</code> (int)","text":"<p>Font size for axis labels.</p>"},{"location":"usage/visualization/eval-viz/#value_fontsize-int_1","title":"<code>value_fontsize</code> (int)","text":"<p>Font size for displayed values.</p>"},{"location":"usage/visualization/eval-viz/#legend_loc-str_3","title":"<code>legend_loc</code> (str)","text":"<p>Location of the legend.</p>"},{"location":"usage/visualization/eval-viz/#bbox_to_anchor-tuplefloat-float_2","title":"<code>bbox_to_anchor</code> (Tuple[float, float])","text":"<p>Bounding box for the legend.</p>"},{"location":"usage/visualization/eval-viz/#legend_fontsize-int_2","title":"<code>legend_fontsize</code> (int)","text":"<p>Font size for the legend.</p>"},{"location":"usage/visualization/eval-viz/#show_grid-bool_4","title":"<code>show_grid</code> (bool)","text":"<p>Whether to display grid lines.</p>"},{"location":"usage/visualization/eval-viz/#show_grid_labels-bool_1","title":"<code>show_grid_labels</code> (bool)","text":"<p>Whether to display grid line values/labels.</p>"},{"location":"usage/visualization/eval-viz/#grid_line_width-float_1","title":"<code>grid_line_width</code> (float)","text":"<p>Width of the grid lines.</p>"},{"location":"usage/visualization/eval-viz/#grid_line_style-str_1","title":"<code>grid_line_style</code> (str)","text":"<p>Style of the grid lines.</p>"},{"location":"usage/visualization/eval-viz/#grid_line_color-str_1","title":"<code>grid_line_color</code> (str)","text":"<p>Color of the grid lines.</p>"},{"location":"usage/visualization/eval-viz/#grid_line_alpha-float_1","title":"<code>grid_line_alpha</code> (float)","text":"<p>Alpha (transparency) of the grid lines (0-1).</p>"},{"location":"usage/visualization/eval-viz/#fill_alpha-float_1","title":"<code>fill_alpha</code> (float)","text":"<p>Alpha (transparency) of the filled area (0-1).</p>"},{"location":"usage/visualization/eval-viz/#marker_size-int_1","title":"<code>marker_size</code> (int)","text":"<p>Size of the data point markers.</p>"},{"location":"usage/visualization/eval-viz/#line_width-float_1","title":"<code>line_width</code> (float)","text":"<p>Width of the plot lines.</p>"},{"location":"usage/visualization/eval-viz/#label_padding-float_1","title":"<code>label_padding</code> (float)","text":"<p>Distance padding for axis labels from plot.</p>"},{"location":"usage/visualization/eval-viz/#clockwise-bool_1","title":"<code>clockwise</code> (bool)","text":"<p>Direction of the radar chart.</p>"},{"location":"usage/visualization/eval-viz/#start_angle-float_1","title":"<code>start_angle</code> (float)","text":"<p>Start angle in radians.</p>"},{"location":"usage/visualization/eval-viz/#radar_range-tuplefloat-float_1","title":"<code>radar_range</code> (Tuple[float, float])","text":"<p>Range for the radar axes.</p>"},{"location":"usage/visualization/eval-viz/#dpi-int_6","title":"<code>dpi</code> (int)","text":"<p>DPI for output image.</p>"},{"location":"usage/visualization/eval-viz/#metrics_to_include-liststr_5","title":"<code>metrics_to_include</code> (List[str])","text":"<p>List of metrics to include in the plot.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>model_names</code> = None<code>figsize</code> = (12, 10)<code>colormap</code> = \"viridis\"<code>display_values</code> = False<code>title</code> = None<code>title_fontsize</code> = 14<code>title_pad</code> = 50.0<code>typical_threshold</code> = None<code>threshold_color</code> = \"red\"<code>threshold_line_style</code> = \"--\"<code>label_fontsize</code> = 12<code>value_fontsize</code> = 10<code>legend_loc</code> = \"best\"<code>bbox_to_anchor</code> = None<code>legend_fontsize</code> = 10<code>show_grid</code> = True<code>show_grid_labels</code> = False<code>grid_line_width</code> = 1.0<code>grid_line_style</code> = \"-\"<code>grid_line_color</code> = \"gray\"<code>grid_line_alpha</code> = 0.2<code>fill_alpha</code> = 0.25<code>marker_size</code> = 7<code>line_width</code> = 2<code>label_padding</code> = 0.25<code>clockwise</code> = True<code>start_angle</code> = np.pi / 2<code>radar_range</code> = (0, 1)<code>dpi</code> = 300<code>metrics_to_include</code> = [\"overall_accuracy\", \"overall_composition_accuracy\", \"overall_synthesis_accuracy\", \"precision\", \"recall\", \"f1_score\", \"normalized_precision\", \"normalized_recall\", \"normalized_f1_score\"]</p>"},{"location":"usage/visualization/eval-viz/#plot_multiple_performance_heatmaps","title":"<code>plot_multiple_performance_heatmaps()</code>","text":"<p>Create a heatmap showing the distribution of scores across metrics for multiple models.</p> <pre><code>fig = eval_visualizer.plot_multiple_performance_heatmaps(\n    result_sources=[\"model1.json\", \"model2.json\"],\n    output_file=\"heatmaps.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#required-parameters_7","title":"Required Parameters","text":"<p>Either <code>result_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/eval-viz/#result_sources-unionliststr-listdict-str_2","title":"<code>result_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of JSON file paths or dictionaries containing evaluation results for multiple models.</p>"},{"location":"usage/visualization/eval-viz/#folder_path-str_2","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON result files.</p>"},{"location":"usage/visualization/eval-viz/#optional-parameters_7","title":"Optional Parameters","text":""},{"location":"usage/visualization/eval-viz/#output_file-str_7","title":"<code>output_file</code> (str)","text":"<p>Path to save the output visualization.</p>"},{"location":"usage/visualization/eval-viz/#model_names-liststr_2","title":"<code>model_names</code> (List[str])","text":"<p>Names to display for models in the plots.</p>"},{"location":"usage/visualization/eval-viz/#figsize-tupleint-int_7","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size (width, height) in inches.</p>"},{"location":"usage/visualization/eval-viz/#colormap-str_6","title":"<code>colormap</code> (str)","text":"<p>Matplotlib colormap name for the heatmap.</p>"},{"location":"usage/visualization/eval-viz/#bin_count-int_1","title":"<code>bin_count</code> (int)","text":"<p>Number of bins to divide the score range into.</p>"},{"location":"usage/visualization/eval-viz/#score_range-tuplefloat-float_1","title":"<code>score_range</code> (Tuple[float, float])","text":"<p>Min and max values for score bins.</p>"},{"location":"usage/visualization/eval-viz/#use_percentage-bool_1","title":"<code>use_percentage</code> (bool)","text":"<p>Whether to show percentages (True) or counts (False).</p>"},{"location":"usage/visualization/eval-viz/#show_averages-bool_1","title":"<code>show_averages</code> (bool)","text":"<p>Whether to show average scores per metric group and model.</p>"},{"location":"usage/visualization/eval-viz/#show_group_labels-bool_1","title":"<code>show_group_labels</code> (bool)","text":"<p>Whether to show metric group labels.</p>"},{"location":"usage/visualization/eval-viz/#show_annotations-bool_1","title":"<code>show_annotations</code> (bool)","text":"<p>Whether to show value annotations in cells.</p>"},{"location":"usage/visualization/eval-viz/#annotation_format-str_1","title":"<code>annotation_format</code> (str)","text":"<p>Format string for annotations (e.g., '.1f' or 'd').</p>"},{"location":"usage/visualization/eval-viz/#title-str_7","title":"<code>title</code> (str)","text":"<p>Custom title for the plot.</p>"},{"location":"usage/visualization/eval-viz/#title_fontsize-int_5","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/eval-viz/#labels-liststr_1","title":"<code>labels</code> (List[str])","text":"<p>Labels for the x and y axes.</p>"},{"location":"usage/visualization/eval-viz/#label_fontsize-int_3","title":"<code>label_fontsize</code> (int)","text":"<p>Font size for the axis labels.</p>"},{"location":"usage/visualization/eval-viz/#dpi-int_7","title":"<code>dpi</code> (int)","text":"<p>Resolution for saved image.</p>"},{"location":"usage/visualization/eval-viz/#group_metrics-bool_1","title":"<code>group_metrics</code> (bool)","text":"<p>Whether to visually group related metrics.</p>"},{"location":"usage/visualization/eval-viz/#metric_groups-listdict_1","title":"<code>metric_groups</code> (List[Dict])","text":"<p>Custom metric groups definition.</p>"},{"location":"usage/visualization/eval-viz/#group_colors-liststr_1","title":"<code>group_colors</code> (List[str])","text":"<p>Colors for metric groups.</p>"},{"location":"usage/visualization/eval-viz/#metrics_to_include-liststr_6","title":"<code>metrics_to_include</code> (List[str])","text":"<p>Specific metrics to include. If None, includes all available.</p>"},{"location":"usage/visualization/eval-viz/#sort_models_by-str","title":"<code>sort_models_by</code> (str)","text":"<p>Metric to sort models by when displaying multiple models.</p>"},{"location":"usage/visualization/eval-viz/#combine_models-bool","title":"<code>combine_models</code> (bool)","text":"<p>Whether to combine all models into a single distribution plot.</p>"},{"location":"usage/visualization/eval-viz/#group_label_right_margin-int_1","title":"<code>group_label_right_margin</code> (int)","text":"<p>Right margin for group labels.</p>"},{"location":"usage/visualization/eval-viz/#average_value_left_margin-int_1","title":"<code>average_value_left_margin</code> (int)","text":"<p>Left margin for average values.</p>"},{"location":"usage/visualization/eval-viz/#plot_padding-float_1","title":"<code>plot_padding</code> (float)","text":"<p>Padding between heatmap and axes labels and title.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>model_names</code> = None<code>figsize</code> = (14, 12)<code>colormap</code> = \"YlGnBu\"<code>bin_count</code> = 10<code>score_range</code> = (0, 1)<code>use_percentage</code> = True<code>show_averages</code> = False<code>show_group_labels</code> = False<code>show_annotations</code> = False<code>annotation_format</code> = None<code>title</code> = None<code>title_fontsize</code> = 14<code>labels</code> = [\"Metrics\", \"Scores\"]<code>label_fontsize</code> = 12<code>dpi</code> = 300<code>group_metrics</code> = True<code>metric_groups</code> = None<code>group_colors</code> = None<code>metrics_to_include</code> = [\"overall_accuracy\", \"overall_composition_accuracy\", \"overall_synthesis_accuracy\", \"precision\", \"recall\", \"f1_score\", \"normalized_precision\", \"normalized_recall\", \"normalized_f1_score\"]<code>sort_models_by</code> = \"overall_accuracy\"<code>combine_models</code> = False<code>group_label_right_margin</code> = 1<code>average_value_left_margin</code> = 1<code>plot_padding</code> = 0.1</p>"},{"location":"usage/visualization/eval-viz/#plot_multiple_confusion_matrices_combined","title":"<code>plot_multiple_confusion_matrices_combined()</code>","text":"<p>Create a confusion matrix-style heatmap showing all models vs all performance metrics in a single visualization.</p> <pre><code>fig = eval_visualizer.plot_multiple_confusion_matrices_combined(\n    result_sources=[\"model1.json\", \"model2.json\"],\n    output_file=\"confusion_matrices.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#required-parameters_8","title":"Required Parameters","text":"<p>Either <code>result_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/eval-viz/#result_sources-unionliststr-listdict-str_3","title":"<code>result_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of JSON file paths or dictionaries containing evaluation results for multiple models.</p>"},{"location":"usage/visualization/eval-viz/#folder_path-str_3","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON result files.</p>"},{"location":"usage/visualization/eval-viz/#optional-parameters_8","title":"Optional Parameters","text":""},{"location":"usage/visualization/eval-viz/#output_file-str_8","title":"<code>output_file</code> (str)","text":"<p>Path to save the output visualization.</p>"},{"location":"usage/visualization/eval-viz/#model_names-liststr_3","title":"<code>model_names</code> (List[str])","text":"<p>Names to display for models in the plot.</p>"},{"location":"usage/visualization/eval-viz/#figsize-tupleint-int_8","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size (width, height) in inches.</p>"},{"location":"usage/visualization/eval-viz/#colormap-str_7","title":"<code>colormap</code> (str)","text":"<p>Matplotlib colormap name for the heatmap.</p>"},{"location":"usage/visualization/eval-viz/#show_annotations-bool_2","title":"<code>show_annotations</code> (bool)","text":"<p>Whether to show value annotations in cells.</p>"},{"location":"usage/visualization/eval-viz/#annotation_format-str_2","title":"<code>annotation_format</code> (str)","text":"<p>Format string for annotations (e.g., '.2f' or '.1f').</p>"},{"location":"usage/visualization/eval-viz/#annotation_fontsize-int","title":"<code>annotation_fontsize</code> (int)","text":"<p>Font size for the annotation values inside cells.</p>"},{"location":"usage/visualization/eval-viz/#title-str_8","title":"<code>title</code> (str)","text":"<p>Custom title for the plot.</p>"},{"location":"usage/visualization/eval-viz/#title_fontsize-int_6","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/eval-viz/#title_pad-float_4","title":"<code>title_pad</code> (float)","text":"<p>Padding for the title from the top of the plot.</p>"},{"location":"usage/visualization/eval-viz/#labels-liststr_2","title":"<code>labels</code> (List[str])","text":"<p>Labels for the x and y axes.</p>"},{"location":"usage/visualization/eval-viz/#label_fontsize-int_4","title":"<code>label_fontsize</code> (int)","text":"<p>Font size for the axis labels.</p>"},{"location":"usage/visualization/eval-viz/#tick_label_fontsize-int","title":"<code>tick_label_fontsize</code> (int)","text":"<p>Font size for x and y tick labels.</p>"},{"location":"usage/visualization/eval-viz/#dpi-int_8","title":"<code>dpi</code> (int)","text":"<p>Resolution for saved image.</p>"},{"location":"usage/visualization/eval-viz/#metrics_to_include-liststr_7","title":"<code>metrics_to_include</code> (List[str])","text":"<p>Specific metrics to include. Default includes all 9 standard metrics.</p>"},{"location":"usage/visualization/eval-viz/#sort_models_by-str_1","title":"<code>sort_models_by</code> (str)","text":"<p>Metric to sort models by, or \"average\" for average of all metrics.</p>"},{"location":"usage/visualization/eval-viz/#value_range-tuplefloat-float","title":"<code>value_range</code> (Tuple[float, float])","text":"<p>Min and max values for color mapping.</p>"},{"location":"usage/visualization/eval-viz/#show_colorbar-bool","title":"<code>show_colorbar</code> (bool)","text":"<p>Whether to show the colorbar legend.</p>"},{"location":"usage/visualization/eval-viz/#colorbar_label-str","title":"<code>colorbar_label</code> (str)","text":"<p>Label for the colorbar.</p>"},{"location":"usage/visualization/eval-viz/#colorbar_fontsize-int","title":"<code>colorbar_fontsize</code> (int)","text":"<p>Font size for colorbar labels.</p>"},{"location":"usage/visualization/eval-viz/#plot_padding-float_2","title":"<code>plot_padding</code> (float)","text":"<p>Padding between heatmap and axes labels and title.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>model_names</code> = None<code>figsize</code> = (14, 10)<code>colormap</code> = \"YlOrRd\"<code>show_annotations</code> = True<code>annotation_format</code> = None<code>annotation_fontsize</code> = 10<code>title</code> = None<code>title_fontsize</code> = 14<code>title_pad</code> = 20.0<code>labels</code> = [\"Models\", \"Metrics\"]<code>label_fontsize</code> = 12<code>tick_label_fontsize</code> = 10<code>dpi</code> = 300<code>metrics_to_include</code> = [\"overall_accuracy\", \"overall_composition_accuracy\", \"overall_synthesis_accuracy\", \"precision\", \"recall\", \"f1_score\", \"normalized_precision\", \"normalized_recall\", \"normalized_f1_score\"]<code>sort_models_by</code> = \"average\"<code>value_range</code> = (0, 1)<code>show_colorbar</code> = True<code>colorbar_label</code> = \"Score\"<code>colorbar_fontsize</code> = 10<code>plot_padding</code> = 0.1</p>"},{"location":"usage/visualization/eval-viz/#plot_multiple_histogram_charts","title":"<code>plot_multiple_histogram_charts()</code>","text":"<p>Create histograms for a single metric from evaluation results for multiple models.</p> <pre><code>fig = eval_visualizer.plot_multiple_histogram_charts(\n    result_sources=[\"model1.json\", \"model2.json\"],\n    metric_name=\"overall_accuracy\",\n    output_file=\"histograms.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#required-parameters_9","title":"Required Parameters","text":"<p>Either <code>result_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/eval-viz/#result_sources-unionliststr-listdict-str_4","title":"<code>result_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of JSON file paths or dictionaries containing evaluation results for multiple models.</p>"},{"location":"usage/visualization/eval-viz/#folder_path-str_4","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON result files.</p>"},{"location":"usage/visualization/eval-viz/#optional-parameters_9","title":"Optional Parameters","text":""},{"location":"usage/visualization/eval-viz/#output_file-str_9","title":"<code>output_file</code> (str)","text":"<p>Path to save the output plot image.</p>"},{"location":"usage/visualization/eval-viz/#model_names-liststr_4","title":"<code>model_names</code> (List[str])","text":"<p>Names of the models for display in the plot titles.</p>"},{"location":"usage/visualization/eval-viz/#metric_name-str_1","title":"<code>metric_name</code> (str)","text":"<p>Name of the metric to plot.</p>"},{"location":"usage/visualization/eval-viz/#figsize-tupleint-int_9","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size (width, height) in inches.</p>"},{"location":"usage/visualization/eval-viz/#bins-int_1","title":"<code>bins</code> (int)","text":"<p>Number of bins or bin edges for histogram.</p>"},{"location":"usage/visualization/eval-viz/#colormap-str_8","title":"<code>colormap</code> (str)","text":"<p>Matplotlib colormap name for the histogram colors.</p>"},{"location":"usage/visualization/eval-viz/#show_kde-bool_1","title":"<code>show_kde</code> (bool)","text":"<p>Whether to show a KDE curve over the histogram.</p>"},{"location":"usage/visualization/eval-viz/#kde_alpha-float","title":"<code>kde_alpha</code> (float)","text":"<p>Alpha value for the KDE curve.</p>"},{"location":"usage/visualization/eval-viz/#show_mean-bool_2","title":"<code>show_mean</code> (bool)","text":"<p>Whether to show a vertical line at the mean value.</p>"},{"location":"usage/visualization/eval-viz/#mean_color-str_2","title":"<code>mean_color</code> (str)","text":"<p>Color for the mean line.</p>"},{"location":"usage/visualization/eval-viz/#mean_line_style-str_1","title":"<code>mean_line_style</code> (str)","text":"<p>Line style for the mean line.</p>"},{"location":"usage/visualization/eval-viz/#show_median-bool_2","title":"<code>show_median</code> (bool)","text":"<p>Whether to show a vertical line at the median value.</p>"},{"location":"usage/visualization/eval-viz/#median_color-str_2","title":"<code>median_color</code> (str)","text":"<p>Color for the median line.</p>"},{"location":"usage/visualization/eval-viz/#median_line_style-str_2","title":"<code>median_line_style</code> (str)","text":"<p>Line style for the median line.</p>"},{"location":"usage/visualization/eval-viz/#show_threshold-bool_2","title":"<code>show_threshold</code> (bool)","text":"<p>Whether to show a threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_value-float_2","title":"<code>threshold_value</code> (float)","text":"<p>Value for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_color-str_6","title":"<code>threshold_color</code> (str)","text":"<p>Color for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_line_style-str_5","title":"<code>threshold_line_style</code> (str)","text":"<p>Line style for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#show_grid-bool_5","title":"<code>show_grid</code> (bool)","text":"<p>Whether to show grid lines on the plot.</p>"},{"location":"usage/visualization/eval-viz/#title-str_9","title":"<code>title</code> (str)","text":"<p>Custom title for the plot.</p>"},{"location":"usage/visualization/eval-viz/#title_fontsize-int_7","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title.</p>"},{"location":"usage/visualization/eval-viz/#xlabel-str_1","title":"<code>xlabel</code> (str)","text":"<p>Custom label for x-axis.</p>"},{"location":"usage/visualization/eval-viz/#ylabel-str_1","title":"<code>ylabel</code> (str)","text":"<p>Label for y-axis.</p>"},{"location":"usage/visualization/eval-viz/#xlabel_fontsize-int_1","title":"<code>xlabel_fontsize</code> (int)","text":"<p>Font size for x-axis label.</p>"},{"location":"usage/visualization/eval-viz/#ylabel_fontsize-int_1","title":"<code>ylabel_fontsize</code> (int)","text":"<p>Font size for y-axis label.</p>"},{"location":"usage/visualization/eval-viz/#legend_loc-str_4","title":"<code>legend_loc</code> (str)","text":"<p>Location for the legend.</p>"},{"location":"usage/visualization/eval-viz/#legend_fontsize-int_3","title":"<code>legend_fontsize</code> (int)","text":"<p>Font size for the legend.</p>"},{"location":"usage/visualization/eval-viz/#bbox_to_anchor-str","title":"<code>bbox_to_anchor</code> (str)","text":"<p>Bounding box for the legend.</p>"},{"location":"usage/visualization/eval-viz/#is_normalized-bool","title":"<code>is_normalized</code> (bool)","text":"<p>Whether to normalize histograms to show percentages.</p>"},{"location":"usage/visualization/eval-viz/#shared_bins-bool","title":"<code>shared_bins</code> (bool)","text":"<p>Whether to use shared bins across all histograms.</p>"},{"location":"usage/visualization/eval-viz/#dpi-int_9","title":"<code>dpi</code> (int)","text":"<p>DPI for the output image.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>model_names</code> = None<code>metric_name</code> = \"overall_accuracy\"<code>figsize</code> = (14, 12)<code>bins</code> = 10<code>colormap</code> = \"tab10\"<code>show_kde</code> = False<code>kde_alpha</code> = 0.7<code>show_mean</code> = False<code>mean_color</code> = \"green\"<code>mean_line_style</code> = \"-\"<code>show_median</code> = False<code>median_color</code> = \"black\"<code>median_line_style</code> = \"-\"<code>show_threshold</code> = False<code>threshold_value</code> = 0.8<code>threshold_color</code> = \"red\"<code>threshold_line_style</code> = \"--\"<code>show_grid</code> = True<code>title</code> = None<code>title_fontsize</code> = 14<code>xlabel</code> = None<code>ylabel</code> = \"Count\"<code>xlabel_fontsize</code> = 12<code>ylabel_fontsize</code> = 12<code>legend_loc</code> = \"best\"<code>legend_fontsize</code> = 10<code>bbox_to_anchor</code> = None<code>is_normalized</code> = True<code>shared_bins</code> = True<code>dpi</code> = 300</p>"},{"location":"usage/visualization/eval-viz/#plot_multiple_violin_charts","title":"<code>plot_multiple_violin_charts()</code>","text":"<p>Create violin plots comparing multiple models on a single metric.</p> <pre><code>fig = eval_visualizer.plot_multiple_violin_charts(\n    result_sources=[\"model1.json\", \"model2.json\"],\n    metric_name=\"overall_accuracy\",\n    output_file=\"violins.png\"\n)\n</code></pre>"},{"location":"usage/visualization/eval-viz/#required-parameters_10","title":"Required Parameters","text":"<p>Either <code>result_sources</code> OR <code>folder_path</code> must be provided.</p>"},{"location":"usage/visualization/eval-viz/#result_sources-unionliststr-listdict-str_5","title":"<code>result_sources</code> (Union[List[str], List[Dict], str])","text":"<p>List of JSON file paths or dictionaries containing evaluation results for multiple models.</p>"},{"location":"usage/visualization/eval-viz/#folder_path-str_5","title":"<code>folder_path</code> (str)","text":"<p>Path to folder containing JSON result files.</p>"},{"location":"usage/visualization/eval-viz/#optional-parameters_10","title":"Optional Parameters","text":""},{"location":"usage/visualization/eval-viz/#output_file-str_10","title":"<code>output_file</code> (str)","text":"<p>Path to save the output visualization.</p>"},{"location":"usage/visualization/eval-viz/#model_names-liststr_5","title":"<code>model_names</code> (List[str])","text":"<p>Names to display for models in the plot.</p>"},{"location":"usage/visualization/eval-viz/#metric_name-str_2","title":"<code>metric_name</code> (str)","text":"<p>Name of the metric to compare across models.</p>"},{"location":"usage/visualization/eval-viz/#figsize-tupleint-int_10","title":"<code>figsize</code> (Tuple[int, int])","text":"<p>Figure size (width, height) in inches.</p>"},{"location":"usage/visualization/eval-viz/#colormap-str_9","title":"<code>colormap</code> (str)","text":"<p>Matplotlib colormap name for the violins.</p>"},{"location":"usage/visualization/eval-viz/#title-str_10","title":"<code>title</code> (str)","text":"<p>Custom title for the plot.</p>"},{"location":"usage/visualization/eval-viz/#title_fontsize-int_8","title":"<code>title_fontsize</code> (int)","text":"<p>Font size for the title text.</p>"},{"location":"usage/visualization/eval-viz/#title_pad-float_5","title":"<code>title_pad</code> (float)","text":"<p>Padding for the title from the top of the plot.</p>"},{"location":"usage/visualization/eval-viz/#show_box-bool_1","title":"<code>show_box</code> (bool)","text":"<p>Whether to show a box plot inside the violin.</p>"},{"location":"usage/visualization/eval-viz/#show_mean-bool_3","title":"<code>show_mean</code> (bool)","text":"<p>Whether to show the mean marker.</p>"},{"location":"usage/visualization/eval-viz/#mean_marker-str_1","title":"<code>mean_marker</code> (str)","text":"<p>Marker style for the mean.</p>"},{"location":"usage/visualization/eval-viz/#mean_color-str_3","title":"<code>mean_color</code> (str)","text":"<p>Color for the mean marker.</p>"},{"location":"usage/visualization/eval-viz/#show_median-bool_3","title":"<code>show_median</code> (bool)","text":"<p>Whether to show the median line.</p>"},{"location":"usage/visualization/eval-viz/#median_color-str_3","title":"<code>median_color</code> (str)","text":"<p>Color for the median line.</p>"},{"location":"usage/visualization/eval-viz/#median_line_style-str_3","title":"<code>median_line_style</code> (str)","text":"<p>Line style for the median.</p>"},{"location":"usage/visualization/eval-viz/#show_grid-bool_6","title":"<code>show_grid</code> (bool)","text":"<p>Whether to display grid lines.</p>"},{"location":"usage/visualization/eval-viz/#show_threshold-bool_3","title":"<code>show_threshold</code> (bool)","text":"<p>Whether to show a threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_value-float_3","title":"<code>threshold_value</code> (float)","text":"<p>Value for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_color-str_7","title":"<code>threshold_color</code> (str)","text":"<p>Color for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#threshold_line_style-str_6","title":"<code>threshold_line_style</code> (str)","text":"<p>Line style for the threshold line.</p>"},{"location":"usage/visualization/eval-viz/#violin_alpha-float_1","title":"<code>violin_alpha</code> (float)","text":"<p>Alpha (transparency) of the violin plots (0-1).</p>"},{"location":"usage/visualization/eval-viz/#violin_width-float_1","title":"<code>violin_width</code> (float)","text":"<p>Width of the violin plots.</p>"},{"location":"usage/visualization/eval-viz/#x_label-str_2","title":"<code>x_label</code> (str)","text":"<p>Label for the x-axis.</p>"},{"location":"usage/visualization/eval-viz/#y_label-str_2","title":"<code>y_label</code> (str)","text":"<p>Label for the y-axis.</p>"},{"location":"usage/visualization/eval-viz/#x_label_fontsize-int_1","title":"<code>x_label_fontsize</code> (int)","text":"<p>Font size for x-axis label.</p>"},{"location":"usage/visualization/eval-viz/#y_label_fontsize-int_1","title":"<code>y_label_fontsize</code> (int)","text":"<p>Font size for y-axis label.</p>"},{"location":"usage/visualization/eval-viz/#y_axis_range-tuplefloat-float_3","title":"<code>y_axis_range</code> (Tuple[float, float])","text":"<p>Range for the y-axis.</p>"},{"location":"usage/visualization/eval-viz/#label_rotation-int_1","title":"<code>label_rotation</code> (int)","text":"<p>Rotation angle for x-axis labels.</p>"},{"location":"usage/visualization/eval-viz/#inner-str_1","title":"<code>inner</code> (str)","text":"<p>The representation of the data points inside the violin ('box', 'stick', 'point', or None).</p>"},{"location":"usage/visualization/eval-viz/#dpi-int_10","title":"<code>dpi</code> (int)","text":"<p>Resolution for saved image.</p> <p>Default Values</p> <p><code>output_file</code> = None<code>model_names</code> = None<code>metric_name</code> = \"overall_accuracy\"<code>figsize</code> = (12, 8)<code>colormap</code> = \"viridis\"<code>title</code> = None<code>title_fontsize</code> = 14<code>title_pad</code> = 50.0<code>show_box</code> = False<code>show_mean</code> = True<code>mean_marker</code> = \"o\"<code>mean_color</code> = \"red\"<code>show_median</code> = False<code>median_color</code> = \"green\"<code>median_line_style</code> = \"-\"<code>show_grid</code> = True<code>show_threshold</code> = False<code>threshold_value</code> = 0.8<code>threshold_color</code> = \"red\"<code>threshold_line_style</code> = \"--\"<code>violin_alpha</code> = 0.7<code>violin_width</code> = 0.8<code>x_label</code> = \"Models\"<code>y_label</code> = \"Score\"<code>x_label_fontsize</code> = 12<code>y_label_fontsize</code> = 12<code>y_axis_range</code> = (0, 1)<code>label_rotation</code> = 45<code>inner</code> = \"box\"<code>dpi</code> = 300</p>"},{"location":"usage/visualization/eval-viz/#next-steps","title":"Next Steps","text":"<ul> <li>Explore Data Visualization</li> <li>Learn about Semantic Evaluation</li> <li>Learn about RAG Configuration</li> </ul>"},{"location":"usage/visualization/overview/","title":"Visualization Overview","text":"<p>ComProScanner provides comprehensive visualization tools for both extracted data and evaluation results.</p>"},{"location":"usage/visualization/overview/#two-visualization-modules","title":"Two Visualization Modules","text":""},{"location":"usage/visualization/overview/#1-data-visualizer","title":"1. Data Visualizer","text":"<p>Visualize extracted composition-property data:</p> <ul> <li>Material family distributions</li> <li>Precursor analysis</li> <li>Characterization techniques</li> <li>Knowledge graphs</li> </ul> <p>Learn more \u2192</p>"},{"location":"usage/visualization/overview/#2-evaluation-visualizer","title":"2. Evaluation Visualizer","text":"<p>Visualize evaluation metrics for both single models and multiple model comparisons:</p> <ul> <li>Bar charts</li> <li>Radar charts</li> <li>Heatmaps</li> <li>Violin plots</li> <li>Histograms</li> </ul> <p>Learn more \u2192</p>"},{"location":"usage/visualization/overview/#quick-examples","title":"Quick Examples","text":""},{"location":"usage/visualization/overview/#data-visualization","title":"Data Visualization","text":"<pre><code>from comproscanner import data_visualizer\n\n# Pie chart\nfig = data_visualizer.plot_family_pie_chart(\n    data_sources=[\"results.json\"],\n    output_file=\"families.png\"\n)\n\n# Knowledge graph\ndata_visualizer.create_knowledge_graph(\n    result_file=\"results.json\"\n)\n</code></pre>"},{"location":"usage/visualization/overview/#evaluation-visualization","title":"Evaluation Visualization","text":"<pre><code>from comproscanner import eval_visualizer\n\n# Bar chart for single model\nfig = eval_visualizer.plot_single_bar_chart(\n    result_file=\"evaluation.json\",\n    output_file=\"metrics.png\"\n)\n\n# Radar chart comparison for multiple models\nfig = eval_visualizer.plot_multiple_radar_charts(\n    result_sources=[\"eval1.json\", \"eval2.json\"],\n    model_names=[\"Model A\", \"Model B\"],\n    output_file=\"comparison.png\"\n)\n</code></pre>"},{"location":"usage/visualization/overview/#supported-input-sources","title":"Supported Input Sources","text":"Single File <p><code>python     plot_function(data_sources=[\"results.json\"])</code></p> Multiple Files <p><code>python     plot_function(data_sources=[\"r1.json\", \"r2.json\", \"r3.json\"])</code></p> Folder <p><code>python     plot_function(folder_path=\"results_folder/\")</code></p> Dictionaries <p><code>python     plot_function(data_sources=[data_dict1, data_dict2])</code></p>"},{"location":"usage/visualization/overview/#next-steps","title":"Next Steps","text":"<ul> <li>Data Visualization Guide - Visualize extracted data</li> <li>Evaluation Visualization Guide - Visualize evaluation results</li> <li>Learn about RAG Configuration</li> </ul>"}]}